var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"MalaksModelSub/VandD","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Main file","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include \"VandD.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"limits.h\"\r\n#include \"linuxinitialize.h\"\r\n#define UNUSED(x)                      x = x\r\n#define NAMELEN                        16\r\n\r\n/* Function prototype declaration*/\r\nvoid exitFcn(int sig);\r\nvoid *terminateTask(void *arg);\r\nvoid *baseRateTask(void *arg);\r\nvoid *subrateTask(void *arg);\r\nvolatile boolean_T stopRequested = false;\r\nvolatile boolean_T runModel = true;\r\nsem_t stopSem;\r\nsem_t baserateTaskSem;\r\npthread_t schedulerThread;\r\npthread_t baseRateThread;\r\nvoid *threadJoinStatus;\r\nint terminatingmodel = 0;\r\nvoid *baseRateTask(void *arg)\r\n{\r\n  runModel = (rtmGetErrorStatus(rtM) == (NULL)) && !rtmGetStopRequested(rtM);\r\n  while (runModel) {\r\n    sem_wait(&baserateTaskSem);\r\n    VandD_step();\r\n\r\n    /* Get model outputs here */\r\n    stopRequested = !((rtmGetErrorStatus(rtM) == (NULL)) && !rtmGetStopRequested\r\n                      (rtM));\r\n    runModel = !stopRequested;\r\n  }\r\n\r\n  runModel = 0;\r\n  terminateTask(arg);\r\n  pthread_exit((void *)0);\r\n  return NULL;\r\n}\r\n\r\nvoid exitFcn(int sig)\r\n{\r\n  UNUSED(sig);\r\n  rtmSetErrorStatus(rtM, \"stopping the model\");\r\n}\r\n\r\nvoid *terminateTask(void *arg)\r\n{\r\n  UNUSED(arg);\r\n  terminatingmodel = 1;\r\n\r\n  {\r\n    runModel = 0;\r\n  }\r\n\r\n  sem_post(&stopSem);\r\n  return NULL;\r\n}\r\n\r\nint main(int argc, char **argv)\r\n{\r\n  rtmSetErrorStatus(rtM, 0);\r\n\r\n  /* Initialize model */\r\n  VandD_initialize();\r\n\r\n  /* Call RTOS Initialization function */\r\n  myRTOSInit(0.01, 0);\r\n\r\n  /* Wait for stop semaphore */\r\n  sem_wait(&stopSem);\r\n\r\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\r\n\r\n  {\r\n    int i;\r\n    for (i=0; i < MW_NUMBER_TIMER_DRIVEN_TASKS; i++) {\r\n      CHECK_STATUS(sem_destroy(&timerTaskSem[i]), 0, \"sem_destroy\");\r\n    }\r\n  }\r\n\r\n#endif\r\n\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"VandD.c","type":"source","group":"model","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: VandD.c\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"VandD.h\"\r\n#include \"rtwtypes.h\"\r\n#include <string.h>\r\n#include <math.h>\r\n#include <stddef.h>\r\n#define NumBitsPerChar                 8U\r\n\r\n/* Private macros used by the generated code to access rtModel */\r\n#ifndef rtmIsMajorTimeStep\r\n#define rtmIsMajorTimeStep(rtm)        (((rtm)->Timing.simTimeStep) == MAJOR_TIME_STEP)\r\n#endif\r\n\r\n#ifndef rtmIsMinorTimeStep\r\n#define rtmIsMinorTimeStep(rtm)        (((rtm)->Timing.simTimeStep) == MINOR_TIME_STEP)\r\n#endif\r\n\r\n#ifndef rtmSetTPtr\r\n#define rtmSetTPtr(rtm, val)           ((rtm)->Timing.t = (val))\r\n#endif\r\n\r\n/* Continuous states */\r\nX rtX;\r\n\r\n/* Block signals and states (default storage) */\r\nDW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY rtY;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL rtM_;\r\nRT_MODEL *const rtM = &rtM_;\r\nextern real_T rt_powd_snf(real_T u0, real_T u1);\r\nstatic void VandD_Init(DW_VandD *localDW, P_VandD *localP, X_VandD *localX);\r\nstatic void VandD_Deriv(real_T *rty_AngularVelocity, DW_VandD *localDW, P_VandD *\r\n  localP, X_VandD *localX, XDot_VandD *localXdot);\r\nstatic void VandD_Update(RT_MODEL * const rtM, DW_VandD *localDW);\r\nstatic void VandD_g(RT_MODEL * const rtM, const real_T rtu_lamda[4], real_T\r\n                    rtyyyy_Fy1Fy2Fy3Fy4[4], real_T rty_throttleforce[4], real_T *\r\n                    rty_Steeringwheelangle, real_T\r\n                    *rtyy_ActualVelocityLateralAcceleration, real_T\r\n                    *rty_AngularVelocity, real_T *rty_LateralVelocity, DW_VandD *\r\n                    localDW, P_VandD *localP, X_VandD *localX);\r\n\r\n/* private model entry point functions */\r\nextern void VandD_derivatives(void);\r\n\r\n/* Forward declaration for local functions */\r\nstatic boolean_T anyNonFinite(const real_T x[16]);\r\nstatic real_T xnrm2(int32_T n, const real_T x[16], int32_T ix0);\r\nstatic real_T rt_hypotd_snf_m(real_T u0, real_T u1, DW_VandD *localDW);\r\nstatic void xzlarf(int32_T m, int32_T n, int32_T iv0, real_T tau, real_T C[16],\r\n                   int32_T ic0, real_T work[4], DW_VandD *localDW);\r\nstatic void xgehrd(real_T a[16], real_T tau[3], DW_VandD *localDW);\r\nstatic void xdlanv2(real_T *a, real_T *b, real_T *c, real_T *d, real_T *rt1r,\r\n                    real_T *rt1i, real_T *rt2r, real_T *rt2i, real_T *cs, real_T\r\n                    *sn, DW_VandD *localDW);\r\nstatic void xrot(int32_T n, real_T x[16], int32_T ix0, int32_T iy0, real_T c,\r\n                 real_T s, DW_VandD *localDW);\r\nstatic void xrot_g(int32_T n, real_T x[16], int32_T ix0, int32_T iy0, real_T c,\r\n                   real_T s, DW_VandD *localDW);\r\nstatic void xrot_gn(real_T x[16], int32_T ix0, int32_T iy0, real_T c, real_T s,\r\n                    DW_VandD *localDW);\r\nstatic real_T xnrm2_n(int32_T n, const real_T x[3], DW_VandD *localDW);\r\nstatic real_T xzlarfg(int32_T n, real_T *alpha1, real_T x[3], DW_VandD *localDW);\r\nstatic int32_T eml_dlahqr(real_T h[16], real_T z[16], DW_VandD *localDW);\r\nstatic void schur(const real_T A[16], real_T V[16], real_T T[16], DW_VandD\r\n                  *localDW);\r\nstatic real_T norm(const real_T x[16]);\r\nstatic void xzgetrf(real_T A[16], int32_T ipiv[4], int32_T *info, DW_VandD\r\n                    *localDW);\r\nstatic void xtrsm(const real_T A[16], real_T B_0[16]);\r\nstatic void inv(const real_T x[16], real_T y[16], DW_VandD *localDW);\r\nstatic void mpower(const real_T a[16], real_T b, real_T c[16], DW_VandD *localDW);\r\nstatic real_T log2_p(real_T x);\r\nstatic void padeApproximation(const real_T A[16], const real_T A2[16], const\r\n  real_T A4[16], const real_T A6[16], int32_T m, real_T F[16], DW_VandD *localDW);\r\nstatic void recomputeBlockDiag(const real_T A[16], real_T F[16], const int32_T\r\n  blockFormat[3]);\r\nstatic void expm(real_T A[16], real_T F[16], DW_VandD *localDW);\r\nstatic real_T eml_rand_shr3cong(uint32_T state[2]);\r\nstatic void genrandu(uint32_T s, uint32_T *state, real_T *r);\r\nstatic void genrand_uint32_vector(uint32_T mt[625], uint32_T u[2]);\r\nstatic real_T genrandu_d(uint32_T mt[625]);\r\nstatic real_T randn(DW_VandD *localDW);\r\nstatic real_T rtGetInf(void);\r\nstatic real32_T rtGetInfF(void);\r\nstatic real_T rtGetMinusInf(void);\r\nstatic real32_T rtGetMinusInfF(void);\r\nstatic real_T rtGetNaN(void);\r\nstatic real32_T rtGetNaNF(void);\r\nextern real_T rtInf;\r\nextern real_T rtMinusInf;\r\nextern real_T rtNaN;\r\nextern real32_T rtInfF;\r\nextern real32_T rtMinusInfF;\r\nextern real32_T rtNaNF;\r\nstatic void rt_InitInfAndNaN(size_t realSize);\r\nstatic boolean_T rtIsInf(real_T value);\r\nstatic boolean_T rtIsInfF(real32_T value);\r\nstatic boolean_T rtIsNaN(real_T value);\r\nstatic boolean_T rtIsNaNF(real32_T value);\r\ntypedef struct {\r\n  struct {\r\n    uint32_T wordH;\r\n    uint32_T wordL;\r\n  } words;\r\n} BigEndianIEEEDouble;\r\n\r\ntypedef struct {\r\n  struct {\r\n    uint32_T wordL;\r\n    uint32_T wordH;\r\n  } words;\r\n} LittleEndianIEEEDouble;\r\n\r\ntypedef struct {\r\n  union {\r\n    real32_T wordLreal;\r\n    uint32_T wordLuint;\r\n  } wordL;\r\n} IEEESingle;\r\n\r\nreal_T rtInf;\r\nreal_T rtMinusInf;\r\nreal_T rtNaN;\r\nreal32_T rtInfF;\r\nreal32_T rtMinusInfF;\r\nreal32_T rtNaNF;\r\n\r\n/*\r\n * Initialize rtInf needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetInf(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T inf = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    inf = rtGetInfF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0x7FF00000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    inf = tmpVal.fltVal;\r\n  }\r\n\r\n  return inf;\r\n}\r\n\r\n/*\r\n * Initialize rtInfF needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetInfF(void)\r\n{\r\n  IEEESingle infF;\r\n  infF.wordL.wordLuint = 0x7F800000U;\r\n  return infF.wordL.wordLreal;\r\n}\r\n\r\n/*\r\n * Initialize rtMinusInf needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetMinusInf(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T minf = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    minf = rtGetMinusInfF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0xFFF00000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    minf = tmpVal.fltVal;\r\n  }\r\n\r\n  return minf;\r\n}\r\n\r\n/*\r\n * Initialize rtMinusInfF needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetMinusInfF(void)\r\n{\r\n  IEEESingle minfF;\r\n  minfF.wordL.wordLuint = 0xFF800000U;\r\n  return minfF.wordL.wordLreal;\r\n}\r\n\r\n/*\r\n * Initialize rtNaN needed by the generated code.\r\n * NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetNaN(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T nan = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    nan = rtGetNaNF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0xFFF80000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    nan = tmpVal.fltVal;\r\n  }\r\n\r\n  return nan;\r\n}\r\n\r\n/*\r\n * Initialize rtNaNF needed by the generated code.\r\n * NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetNaNF(void)\r\n{\r\n  IEEESingle nanF = { { 0.0F } };\r\n\r\n  nanF.wordL.wordLuint = 0xFFC00000U;\r\n  return nanF.wordL.wordLreal;\r\n}\r\n\r\n/*\r\n * Initialize the rtInf, rtMinusInf, and rtNaN needed by the\r\n * generated code. NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic void rt_InitInfAndNaN(size_t realSize)\r\n{\r\n  (void) (realSize);\r\n  rtNaN = rtGetNaN();\r\n  rtNaNF = rtGetNaNF();\r\n  rtInf = rtGetInf();\r\n  rtInfF = rtGetInfF();\r\n  rtMinusInf = rtGetMinusInf();\r\n  rtMinusInfF = rtGetMinusInfF();\r\n}\r\n\r\n/* Test if value is infinite */\r\nstatic boolean_T rtIsInf(real_T value)\r\n{\r\n  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);\r\n}\r\n\r\n/* Test if single-precision value is infinite */\r\nstatic boolean_T rtIsInfF(real32_T value)\r\n{\r\n  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);\r\n}\r\n\r\n/* Test if value is not a number */\r\nstatic boolean_T rtIsNaN(real_T value)\r\n{\r\n  boolean_T result = (boolean_T) 0;\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  if (bitsPerReal == 32U) {\r\n    result = rtIsNaNF((real32_T)value);\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.fltVal = value;\r\n    result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) == 0x7FF00000 &&\r\n                         ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||\r\n                          (tmpVal.bitVal.words.wordL != 0) ));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/* Test if single-precision value is not a number */\r\nstatic boolean_T rtIsNaNF(real32_T value)\r\n{\r\n  IEEESingle tmp;\r\n  tmp.wordL.wordLreal = value;\r\n  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&\r\n                     (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );\r\n}\r\n\r\n/*\r\n * This function updates continuous states using the ODE4 fixed-step\r\n * solver algorithm\r\n */\r\nstatic void rt_ertODEUpdateContinuousStates(RTWSolverInfo *si )\r\n{\r\n  time_T t = rtsiGetT(si);\r\n  time_T tnew = rtsiGetSolverStopTime(si);\r\n  time_T h = rtsiGetStepSize(si);\r\n  real_T *x = rtsiGetContStates(si);\r\n  ODE4_IntgData *id = (ODE4_IntgData *)rtsiGetSolverData(si);\r\n  real_T *y = id->y;\r\n  real_T *f0 = id->f[0];\r\n  real_T *f1 = id->f[1];\r\n  real_T *f2 = id->f[2];\r\n  real_T *f3 = id->f[3];\r\n  real_T temp;\r\n  int_T i;\r\n  int_T nXc = 29;\r\n  rtsiSetSimTimeStep(si,MINOR_TIME_STEP);\r\n\r\n  /* Save the state values at time t in y, we'll use x as ynew. */\r\n  (void) memcpy(y, x,\r\n                (uint_T)nXc*sizeof(real_T));\r\n\r\n  /* Assumes that rtsiSetT and ModelOutputs are up-to-date */\r\n  /* f0 = f(t,y) */\r\n  rtsiSetdX(si, f0);\r\n  VandD_derivatives();\r\n\r\n  /* f1 = f(t + (h/2), y + (h/2)*f0) */\r\n  temp = 0.5 * h;\r\n  for (i = 0; i < nXc; i++) {\r\n    x[i] = y[i] + (temp*f0[i]);\r\n  }\r\n\r\n  rtsiSetT(si, t + temp);\r\n  rtsiSetdX(si, f1);\r\n  VandD_step();\r\n  VandD_derivatives();\r\n\r\n  /* f2 = f(t + (h/2), y + (h/2)*f1) */\r\n  for (i = 0; i < nXc; i++) {\r\n    x[i] = y[i] + (temp*f1[i]);\r\n  }\r\n\r\n  rtsiSetdX(si, f2);\r\n  VandD_step();\r\n  VandD_derivatives();\r\n\r\n  /* f3 = f(t + h, y + h*f2) */\r\n  for (i = 0; i < nXc; i++) {\r\n    x[i] = y[i] + (h*f2[i]);\r\n  }\r\n\r\n  rtsiSetT(si, tnew);\r\n  rtsiSetdX(si, f3);\r\n  VandD_step();\r\n  VandD_derivatives();\r\n\r\n  /* tnew = t + h\r\n     ynew = y + (h/6)*(f0 + 2*f1 + 2*f2 + 2*f3) */\r\n  temp = h / 6.0;\r\n  for (i = 0; i < nXc; i++) {\r\n    x[i] = y[i] + temp*(f0[i] + 2.0*f1[i] + 2.0*f2[i] + f3[i]);\r\n  }\r\n\r\n  rtsiSetSimTimeStep(si,MAJOR_TIME_STEP);\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic boolean_T anyNonFinite(const real_T x[16])\r\n{\r\n  real_T x_0;\r\n  int32_T k;\r\n  boolean_T b_p;\r\n  b_p = true;\r\n  for (k = 0; k < 16; k++) {\r\n    x_0 = x[k];\r\n    if (b_p && (rtIsInf(x_0) || rtIsNaN(x_0))) {\r\n      b_p = false;\r\n    }\r\n  }\r\n\r\n  return !b_p;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic real_T xnrm2(int32_T n, const real_T x[16], int32_T ix0)\r\n{\r\n  real_T absxk;\r\n  real_T scale;\r\n  real_T t;\r\n  real_T y;\r\n  int32_T k;\r\n  int32_T kend;\r\n  y = 0.0;\r\n  if (n >= 1) {\r\n    if (n == 1) {\r\n      y = fabs(x[ix0 - 1]);\r\n    } else {\r\n      scale = 3.3121686421112381E-170;\r\n      kend = (ix0 + n) - 1;\r\n      for (k = ix0; k <= kend; k++) {\r\n        absxk = fabs(x[k - 1]);\r\n        if (absxk > scale) {\r\n          t = scale / absxk;\r\n          y = y * t * t + 1.0;\r\n          scale = absxk;\r\n        } else {\r\n          t = absxk / scale;\r\n          y += t * t;\r\n        }\r\n      }\r\n\r\n      y = scale * sqrt(y);\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\nstatic real_T rt_hypotd_snf_m(real_T u0, real_T u1, DW_VandD *localDW)\r\n{\r\n  real_T y;\r\n  localDW->a = fabs(u0);\r\n  y = fabs(u1);\r\n  if (localDW->a < y) {\r\n    localDW->a /= y;\r\n    y *= sqrt(localDW->a * localDW->a + 1.0);\r\n  } else if (localDW->a > y) {\r\n    y /= localDW->a;\r\n    y = sqrt(y * y + 1.0) * localDW->a;\r\n  } else if (!rtIsNaN(y)) {\r\n    y = localDW->a * 1.4142135623730951;\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xzlarf(int32_T m, int32_T n, int32_T iv0, real_T tau, real_T C[16],\r\n                   int32_T ic0, real_T work[4], DW_VandD *localDW)\r\n{\r\n  int32_T coltop;\r\n  int32_T d;\r\n  int32_T exitg1;\r\n  int32_T ia;\r\n  int32_T iac;\r\n  int32_T ix;\r\n  int32_T jy;\r\n  int32_T lastc;\r\n  int32_T lastv;\r\n  boolean_T exitg2;\r\n  if (tau != 0.0) {\r\n    lastv = m;\r\n    lastc = iv0 + m;\r\n    while ((lastv > 0) && (C[lastc - 2] == 0.0)) {\r\n      lastv--;\r\n      lastc--;\r\n    }\r\n\r\n    lastc = n - 1;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (lastc + 1 > 0)) {\r\n      coltop = (lastc << 2) + ic0;\r\n      jy = coltop;\r\n      do {\r\n        exitg1 = 0;\r\n        if (jy <= (coltop + lastv) - 1) {\r\n          if (C[jy - 1] != 0.0) {\r\n            exitg1 = 1;\r\n          } else {\r\n            jy++;\r\n          }\r\n        } else {\r\n          lastc--;\r\n          exitg1 = 2;\r\n        }\r\n      } while (exitg1 == 0);\r\n\r\n      if (exitg1 == 1) {\r\n        exitg2 = true;\r\n      }\r\n    }\r\n  } else {\r\n    lastv = 0;\r\n    lastc = -1;\r\n  }\r\n\r\n  if (lastv > 0) {\r\n    if (lastc + 1 != 0) {\r\n      for (coltop = 0; coltop <= lastc; coltop++) {\r\n        work[coltop] = 0.0;\r\n      }\r\n\r\n      coltop = 0;\r\n      jy = (lastc << 2) + ic0;\r\n      for (iac = ic0; iac <= jy; iac += 4) {\r\n        ix = iv0;\r\n        localDW->c_j = 0.0;\r\n        d = (iac + lastv) - 1;\r\n        for (ia = iac; ia <= d; ia++) {\r\n          localDW->c_j += C[ia - 1] * C[ix - 1];\r\n          ix++;\r\n        }\r\n\r\n        work[coltop] += localDW->c_j;\r\n        coltop++;\r\n      }\r\n    }\r\n\r\n    if (!(-tau == 0.0)) {\r\n      coltop = ic0 - 1;\r\n      jy = 0;\r\n      for (iac = 0; iac <= lastc; iac++) {\r\n        if (work[jy] != 0.0) {\r\n          localDW->c_j = work[jy] * -tau;\r\n          ix = iv0;\r\n          d = coltop;\r\n          ia = lastv + coltop;\r\n          while (d + 1 <= ia) {\r\n            C[d] += C[ix - 1] * localDW->c_j;\r\n            ix++;\r\n            d++;\r\n          }\r\n        }\r\n\r\n        jy++;\r\n        coltop += 4;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xgehrd(real_T a[16], real_T tau[3], DW_VandD *localDW)\r\n{\r\n  int32_T b_ia;\r\n  int32_T b_ix;\r\n  int32_T exitg1;\r\n  int32_T ia;\r\n  int32_T jy;\r\n  int32_T rowleft;\r\n  boolean_T exitg2;\r\n  localDW->work_g[0] = 0.0;\r\n  localDW->work_g[1] = 0.0;\r\n  localDW->work_g[2] = 0.0;\r\n  localDW->work_g[3] = 0.0;\r\n  localDW->alpha1 = a[1];\r\n  localDW->lastc = 3;\r\n  tau[0] = 0.0;\r\n  localDW->xnorm = xnrm2(2, a, 3);\r\n  if (localDW->xnorm != 0.0) {\r\n    localDW->xnorm = rt_hypotd_snf_m(a[1], localDW->xnorm, localDW);\r\n    if (a[1] >= 0.0) {\r\n      localDW->xnorm = -localDW->xnorm;\r\n    }\r\n\r\n    if (fabs(localDW->xnorm) < 1.0020841800044864E-292) {\r\n      localDW->knt = 0;\r\n      do {\r\n        localDW->knt++;\r\n        for (rowleft = 3; rowleft < 5; rowleft++) {\r\n          a[rowleft - 1] *= 9.9792015476736E+291;\r\n        }\r\n\r\n        localDW->xnorm *= 9.9792015476736E+291;\r\n        localDW->alpha1 *= 9.9792015476736E+291;\r\n      } while ((fabs(localDW->xnorm) < 1.0020841800044864E-292) && (localDW->knt\r\n                < 20));\r\n\r\n      localDW->xnorm = rt_hypotd_snf_m(localDW->alpha1, xnrm2(2, a, 3), localDW);\r\n      if (localDW->alpha1 >= 0.0) {\r\n        localDW->xnorm = -localDW->xnorm;\r\n      }\r\n\r\n      tau[0] = (localDW->xnorm - localDW->alpha1) / localDW->xnorm;\r\n      localDW->alpha1 = 1.0 / (localDW->alpha1 - localDW->xnorm);\r\n      while (localDW->lastc <= 4) {\r\n        a[localDW->lastc - 1] *= localDW->alpha1;\r\n        localDW->lastc++;\r\n      }\r\n\r\n      localDW->lastc = 0;\r\n      while (localDW->lastc <= localDW->knt - 1) {\r\n        localDW->xnorm *= 1.0020841800044864E-292;\r\n        localDW->lastc++;\r\n      }\r\n\r\n      localDW->alpha1 = localDW->xnorm;\r\n    } else {\r\n      tau[0] = (localDW->xnorm - a[1]) / localDW->xnorm;\r\n      localDW->alpha1 = 1.0 / (a[1] - localDW->xnorm);\r\n      while (localDW->lastc <= 4) {\r\n        a[localDW->lastc - 1] *= localDW->alpha1;\r\n        localDW->lastc++;\r\n      }\r\n\r\n      localDW->alpha1 = localDW->xnorm;\r\n    }\r\n  }\r\n\r\n  a[1] = 1.0;\r\n  jy = 1;\r\n  if (tau[0] != 0.0) {\r\n    localDW->knt = 2;\r\n    localDW->lastc = 3;\r\n    while ((localDW->knt + 1 > 0) && (a[localDW->lastc] == 0.0)) {\r\n      localDW->knt--;\r\n      localDW->lastc--;\r\n    }\r\n\r\n    localDW->lastc = 4;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (localDW->lastc > 0)) {\r\n      b_ia = localDW->lastc + 4;\r\n      do {\r\n        exitg1 = 0;\r\n        if (b_ia <= ((localDW->knt << 2) + localDW->lastc) + 4) {\r\n          if (a[b_ia - 1] != 0.0) {\r\n            exitg1 = 1;\r\n          } else {\r\n            b_ia += 4;\r\n          }\r\n        } else {\r\n          localDW->lastc--;\r\n          exitg1 = 2;\r\n        }\r\n      } while (exitg1 == 0);\r\n\r\n      if (exitg1 == 1) {\r\n        exitg2 = true;\r\n      }\r\n    }\r\n  } else {\r\n    localDW->knt = -1;\r\n    localDW->lastc = 0;\r\n  }\r\n\r\n  if (localDW->knt + 1 > 0) {\r\n    if (localDW->lastc != 0) {\r\n      for (rowleft = 0; rowleft < localDW->lastc; rowleft++) {\r\n        localDW->work_g[rowleft] = 0.0;\r\n      }\r\n\r\n      rowleft = 1;\r\n      b_ia = (localDW->knt << 2) + 5;\r\n      for (b_ix = 5; b_ix <= b_ia; b_ix += 4) {\r\n        localDW->iy = 0;\r\n        localDW->f_b = (b_ix + localDW->lastc) - 1;\r\n        for (ia = b_ix; ia <= localDW->f_b; ia++) {\r\n          localDW->work_g[localDW->iy] += a[ia - 1] * a[rowleft];\r\n          localDW->iy++;\r\n        }\r\n\r\n        rowleft++;\r\n      }\r\n    }\r\n\r\n    if (!(-tau[0] == 0.0)) {\r\n      rowleft = 4;\r\n      for (b_ia = 0; b_ia <= localDW->knt; b_ia++) {\r\n        if (a[jy] != 0.0) {\r\n          localDW->xnorm = a[jy] * -tau[0];\r\n          b_ix = 0;\r\n          localDW->iy = rowleft;\r\n          localDW->f_b = localDW->lastc + rowleft;\r\n          while (localDW->iy + 1 <= localDW->f_b) {\r\n            a[localDW->iy] += localDW->work_g[b_ix] * localDW->xnorm;\r\n            b_ix++;\r\n            localDW->iy++;\r\n          }\r\n        }\r\n\r\n        jy++;\r\n        rowleft += 4;\r\n      }\r\n    }\r\n  }\r\n\r\n  xzlarf(3, 3, 2, tau[0], a, 6, localDW->work_g, localDW);\r\n  a[1] = localDW->alpha1;\r\n  localDW->alpha1 = a[6];\r\n  tau[1] = 0.0;\r\n  localDW->xnorm = xnrm2(1, a, 8);\r\n  if (localDW->xnorm != 0.0) {\r\n    localDW->xnorm = rt_hypotd_snf_m(a[6], localDW->xnorm, localDW);\r\n    if (a[6] >= 0.0) {\r\n      localDW->xnorm = -localDW->xnorm;\r\n    }\r\n\r\n    if (fabs(localDW->xnorm) < 1.0020841800044864E-292) {\r\n      localDW->knt = 0;\r\n      do {\r\n        localDW->knt++;\r\n        a[7] *= 9.9792015476736E+291;\r\n        localDW->xnorm *= 9.9792015476736E+291;\r\n        localDW->alpha1 *= 9.9792015476736E+291;\r\n      } while ((fabs(localDW->xnorm) < 1.0020841800044864E-292) && (localDW->knt\r\n                < 20));\r\n\r\n      localDW->xnorm = rt_hypotd_snf_m(localDW->alpha1, xnrm2(1, a, 8), localDW);\r\n      if (localDW->alpha1 >= 0.0) {\r\n        localDW->xnorm = -localDW->xnorm;\r\n      }\r\n\r\n      tau[1] = (localDW->xnorm - localDW->alpha1) / localDW->xnorm;\r\n      a[7] *= 1.0 / (localDW->alpha1 - localDW->xnorm);\r\n      localDW->lastc = 0;\r\n      while (localDW->lastc <= localDW->knt - 1) {\r\n        localDW->xnorm *= 1.0020841800044864E-292;\r\n        localDW->lastc++;\r\n      }\r\n\r\n      localDW->alpha1 = localDW->xnorm;\r\n    } else {\r\n      tau[1] = (localDW->xnorm - a[6]) / localDW->xnorm;\r\n      a[7] *= 1.0 / (a[6] - localDW->xnorm);\r\n      localDW->alpha1 = localDW->xnorm;\r\n    }\r\n  }\r\n\r\n  a[6] = 1.0;\r\n  jy = 6;\r\n  if (tau[1] != 0.0) {\r\n    localDW->knt = 1;\r\n    localDW->lastc = 7;\r\n    while ((localDW->knt + 1 > 0) && (a[localDW->lastc] == 0.0)) {\r\n      localDW->knt--;\r\n      localDW->lastc--;\r\n    }\r\n\r\n    localDW->lastc = 4;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (localDW->lastc > 0)) {\r\n      b_ia = localDW->lastc + 8;\r\n      do {\r\n        exitg1 = 0;\r\n        if (b_ia <= ((localDW->knt << 2) + localDW->lastc) + 8) {\r\n          if (a[b_ia - 1] != 0.0) {\r\n            exitg1 = 1;\r\n          } else {\r\n            b_ia += 4;\r\n          }\r\n        } else {\r\n          localDW->lastc--;\r\n          exitg1 = 2;\r\n        }\r\n      } while (exitg1 == 0);\r\n\r\n      if (exitg1 == 1) {\r\n        exitg2 = true;\r\n      }\r\n    }\r\n  } else {\r\n    localDW->knt = -1;\r\n    localDW->lastc = 0;\r\n  }\r\n\r\n  if (localDW->knt + 1 > 0) {\r\n    if (localDW->lastc != 0) {\r\n      for (rowleft = 0; rowleft < localDW->lastc; rowleft++) {\r\n        localDW->work_g[rowleft] = 0.0;\r\n      }\r\n\r\n      rowleft = 6;\r\n      b_ia = (localDW->knt << 2) + 9;\r\n      for (b_ix = 9; b_ix <= b_ia; b_ix += 4) {\r\n        localDW->iy = 0;\r\n        localDW->f_b = (b_ix + localDW->lastc) - 1;\r\n        for (ia = b_ix; ia <= localDW->f_b; ia++) {\r\n          localDW->work_g[localDW->iy] += a[ia - 1] * a[rowleft];\r\n          localDW->iy++;\r\n        }\r\n\r\n        rowleft++;\r\n      }\r\n    }\r\n\r\n    if (!(-tau[1] == 0.0)) {\r\n      rowleft = 8;\r\n      for (b_ia = 0; b_ia <= localDW->knt; b_ia++) {\r\n        if (a[jy] != 0.0) {\r\n          localDW->xnorm = a[jy] * -tau[1];\r\n          b_ix = 0;\r\n          localDW->iy = rowleft;\r\n          localDW->f_b = localDW->lastc + rowleft;\r\n          while (localDW->iy + 1 <= localDW->f_b) {\r\n            a[localDW->iy] += localDW->work_g[b_ix] * localDW->xnorm;\r\n            b_ix++;\r\n            localDW->iy++;\r\n          }\r\n        }\r\n\r\n        jy++;\r\n        rowleft += 4;\r\n      }\r\n    }\r\n  }\r\n\r\n  xzlarf(2, 2, 7, tau[1], a, 11, localDW->work_g, localDW);\r\n  a[6] = localDW->alpha1;\r\n  localDW->alpha1 = a[11];\r\n  tau[2] = 0.0;\r\n  localDW->xnorm = xnrm2(0, a, 12);\r\n  if (localDW->xnorm != 0.0) {\r\n    localDW->xnorm = rt_hypotd_snf_m(a[11], localDW->xnorm, localDW);\r\n    if (a[11] >= 0.0) {\r\n      localDW->xnorm = -localDW->xnorm;\r\n    }\r\n\r\n    if (fabs(localDW->xnorm) < 1.0020841800044864E-292) {\r\n      localDW->knt = 0;\r\n      do {\r\n        localDW->knt++;\r\n        localDW->xnorm *= 9.9792015476736E+291;\r\n        localDW->alpha1 *= 9.9792015476736E+291;\r\n      } while ((fabs(localDW->xnorm) < 1.0020841800044864E-292) && (localDW->knt\r\n                < 20));\r\n\r\n      localDW->xnorm = rt_hypotd_snf_m(localDW->alpha1, xnrm2(0, a, 12), localDW);\r\n      if (localDW->alpha1 >= 0.0) {\r\n        localDW->xnorm = -localDW->xnorm;\r\n      }\r\n\r\n      tau[2] = (localDW->xnorm - localDW->alpha1) / localDW->xnorm;\r\n      localDW->lastc = 0;\r\n      while (localDW->lastc <= localDW->knt - 1) {\r\n        localDW->xnorm *= 1.0020841800044864E-292;\r\n        localDW->lastc++;\r\n      }\r\n\r\n      localDW->alpha1 = localDW->xnorm;\r\n    } else {\r\n      tau[2] = (localDW->xnorm - a[11]) / localDW->xnorm;\r\n      localDW->alpha1 = localDW->xnorm;\r\n    }\r\n  }\r\n\r\n  a[11] = 1.0;\r\n  jy = 11;\r\n  if (tau[2] != 0.0) {\r\n    localDW->knt = 0;\r\n    localDW->lastc = 11;\r\n    while ((localDW->knt + 1 > 0) && (a[localDW->lastc] == 0.0)) {\r\n      localDW->knt--;\r\n      localDW->lastc--;\r\n    }\r\n\r\n    localDW->lastc = 4;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (localDW->lastc > 0)) {\r\n      b_ia = localDW->lastc + 12;\r\n      do {\r\n        exitg1 = 0;\r\n        if (b_ia <= ((localDW->knt << 2) + localDW->lastc) + 12) {\r\n          if (a[b_ia - 1] != 0.0) {\r\n            exitg1 = 1;\r\n          } else {\r\n            b_ia += 4;\r\n          }\r\n        } else {\r\n          localDW->lastc--;\r\n          exitg1 = 2;\r\n        }\r\n      } while (exitg1 == 0);\r\n\r\n      if (exitg1 == 1) {\r\n        exitg2 = true;\r\n      }\r\n    }\r\n  } else {\r\n    localDW->knt = -1;\r\n    localDW->lastc = 0;\r\n  }\r\n\r\n  if (localDW->knt + 1 > 0) {\r\n    if (localDW->lastc != 0) {\r\n      for (rowleft = 0; rowleft < localDW->lastc; rowleft++) {\r\n        localDW->work_g[rowleft] = 0.0;\r\n      }\r\n\r\n      rowleft = 11;\r\n      b_ia = (localDW->knt << 2) + 13;\r\n      for (b_ix = 13; b_ix <= b_ia; b_ix += 4) {\r\n        localDW->iy = 0;\r\n        localDW->f_b = (b_ix + localDW->lastc) - 1;\r\n        for (ia = b_ix; ia <= localDW->f_b; ia++) {\r\n          localDW->work_g[localDW->iy] += a[ia - 1] * a[rowleft];\r\n          localDW->iy++;\r\n        }\r\n\r\n        rowleft++;\r\n      }\r\n    }\r\n\r\n    if (!(-tau[2] == 0.0)) {\r\n      rowleft = 12;\r\n      for (b_ia = 0; b_ia <= localDW->knt; b_ia++) {\r\n        if (a[jy] != 0.0) {\r\n          localDW->xnorm = a[jy] * -tau[2];\r\n          b_ix = 0;\r\n          localDW->iy = rowleft;\r\n          localDW->f_b = localDW->lastc + rowleft;\r\n          while (localDW->iy + 1 <= localDW->f_b) {\r\n            a[localDW->iy] += localDW->work_g[b_ix] * localDW->xnorm;\r\n            b_ix++;\r\n            localDW->iy++;\r\n          }\r\n        }\r\n\r\n        jy++;\r\n        rowleft += 4;\r\n      }\r\n    }\r\n  }\r\n\r\n  xzlarf(1, 1, 12, tau[2], a, 16, localDW->work_g, localDW);\r\n  a[11] = localDW->alpha1;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xdlanv2(real_T *a, real_T *b, real_T *c, real_T *d, real_T *rt1r,\r\n                    real_T *rt1i, real_T *rt2r, real_T *rt2i, real_T *cs, real_T\r\n                    *sn, DW_VandD *localDW)\r\n{\r\n  int32_T b_0;\r\n  int32_T c_0;\r\n  boolean_T tmp;\r\n  if (*c == 0.0) {\r\n    *cs = 1.0;\r\n    *sn = 0.0;\r\n  } else if (*b == 0.0) {\r\n    *cs = 0.0;\r\n    *sn = 1.0;\r\n    localDW->temp = *d;\r\n    *d = *a;\r\n    *a = localDW->temp;\r\n    *b = -*c;\r\n    *c = 0.0;\r\n  } else {\r\n    localDW->temp = *a - *d;\r\n    if ((localDW->temp == 0.0) && ((*b < 0.0) != (*c < 0.0))) {\r\n      *cs = 1.0;\r\n      *sn = 0.0;\r\n    } else {\r\n      localDW->p = 0.5 * localDW->temp;\r\n      localDW->bcmis = fabs(*b);\r\n      localDW->z = fabs(*c);\r\n      tmp = rtIsNaN(localDW->z);\r\n      if ((localDW->bcmis >= localDW->z) || tmp) {\r\n        localDW->bcmax = localDW->bcmis;\r\n      } else {\r\n        localDW->bcmax = localDW->z;\r\n      }\r\n\r\n      if ((localDW->bcmis <= localDW->z) || tmp) {\r\n        localDW->z = localDW->bcmis;\r\n      }\r\n\r\n      if (!(*b < 0.0)) {\r\n        b_0 = 1;\r\n      } else {\r\n        b_0 = -1;\r\n      }\r\n\r\n      if (!(*c < 0.0)) {\r\n        c_0 = 1;\r\n      } else {\r\n        c_0 = -1;\r\n      }\r\n\r\n      localDW->bcmis = localDW->z * (real_T)b_0 * (real_T)c_0;\r\n      localDW->scale = fabs(localDW->p);\r\n      if ((!(localDW->scale >= localDW->bcmax)) && (!rtIsNaN(localDW->bcmax))) {\r\n        localDW->scale = localDW->bcmax;\r\n      }\r\n\r\n      localDW->z = localDW->p / localDW->scale * localDW->p + localDW->bcmax /\r\n        localDW->scale * localDW->bcmis;\r\n      if (localDW->z >= 8.8817841970012523E-16) {\r\n        if (!(localDW->p < 0.0)) {\r\n          localDW->z = sqrt(localDW->scale) * sqrt(localDW->z);\r\n        } else {\r\n          localDW->z = -(sqrt(localDW->scale) * sqrt(localDW->z));\r\n        }\r\n\r\n        localDW->z += localDW->p;\r\n        *a = *d + localDW->z;\r\n        *d -= localDW->bcmax / localDW->z * localDW->bcmis;\r\n        localDW->bcmax = rt_hypotd_snf_m(*c, localDW->z, localDW);\r\n        *cs = localDW->z / localDW->bcmax;\r\n        *sn = *c / localDW->bcmax;\r\n        *b -= *c;\r\n        *c = 0.0;\r\n      } else {\r\n        localDW->bcmis = *b + *c;\r\n        localDW->bcmax = rt_hypotd_snf_m(localDW->bcmis, localDW->temp, localDW);\r\n        *cs = sqrt((fabs(localDW->bcmis) / localDW->bcmax + 1.0) * 0.5);\r\n        if (!(localDW->bcmis < 0.0)) {\r\n          b_0 = 1;\r\n        } else {\r\n          b_0 = -1;\r\n        }\r\n\r\n        *sn = -(localDW->p / (localDW->bcmax * *cs)) * (real_T)b_0;\r\n        localDW->temp = *a * *cs + *b * *sn;\r\n        localDW->p = -*a * *sn + *b * *cs;\r\n        localDW->bcmax = *c * *cs + *d * *sn;\r\n        localDW->bcmis = -*c * *sn + *d * *cs;\r\n        *b = localDW->p * *cs + localDW->bcmis * *sn;\r\n        *c = -localDW->temp * *sn + localDW->bcmax * *cs;\r\n        localDW->temp = ((localDW->temp * *cs + localDW->bcmax * *sn) +\r\n                         (-localDW->p * *sn + localDW->bcmis * *cs)) * 0.5;\r\n        *a = localDW->temp;\r\n        *d = localDW->temp;\r\n        if (*c != 0.0) {\r\n          if (*b != 0.0) {\r\n            if ((*b < 0.0) == (*c < 0.0)) {\r\n              localDW->z = sqrt(fabs(*b));\r\n              localDW->bcmis = sqrt(fabs(*c));\r\n              localDW->p = localDW->z * localDW->bcmis;\r\n              if (*c < 0.0) {\r\n                localDW->p = -localDW->p;\r\n              }\r\n\r\n              localDW->bcmax = 1.0 / sqrt(fabs(*b + *c));\r\n              *a = localDW->temp + localDW->p;\r\n              *d = localDW->temp - localDW->p;\r\n              *b -= *c;\r\n              *c = 0.0;\r\n              localDW->p = localDW->z * localDW->bcmax;\r\n              localDW->bcmax *= localDW->bcmis;\r\n              localDW->temp = *cs * localDW->p - *sn * localDW->bcmax;\r\n              *sn = *cs * localDW->bcmax + *sn * localDW->p;\r\n              *cs = localDW->temp;\r\n            }\r\n          } else {\r\n            *b = -*c;\r\n            *c = 0.0;\r\n            localDW->temp = *cs;\r\n            *cs = -*sn;\r\n            *sn = localDW->temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  *rt1r = *a;\r\n  *rt2r = *d;\r\n  if (*c == 0.0) {\r\n    *rt1i = 0.0;\r\n    *rt2i = 0.0;\r\n  } else {\r\n    *rt1i = sqrt(fabs(*b)) * sqrt(fabs(*c));\r\n    *rt2i = -*rt1i;\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xrot(int32_T n, real_T x[16], int32_T ix0, int32_T iy0, real_T c,\r\n                 real_T s, DW_VandD *localDW)\r\n{\r\n  int32_T ix;\r\n  int32_T iy;\r\n  int32_T k;\r\n  if (n >= 1) {\r\n    ix = ix0 - 1;\r\n    iy = iy0 - 1;\r\n    for (k = 0; k < n; k++) {\r\n      localDW->temp_l = c * x[ix] + s * x[iy];\r\n      x[iy] = c * x[iy] - s * x[ix];\r\n      x[ix] = localDW->temp_l;\r\n      iy += 4;\r\n      ix += 4;\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xrot_g(int32_T n, real_T x[16], int32_T ix0, int32_T iy0, real_T c,\r\n                   real_T s, DW_VandD *localDW)\r\n{\r\n  int32_T ix;\r\n  int32_T iy;\r\n  int32_T k;\r\n  if (n >= 1) {\r\n    ix = ix0 - 1;\r\n    iy = iy0 - 1;\r\n    for (k = 0; k < n; k++) {\r\n      localDW->temp_d = c * x[ix] + s * x[iy];\r\n      x[iy] = c * x[iy] - s * x[ix];\r\n      x[ix] = localDW->temp_d;\r\n      iy++;\r\n      ix++;\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xrot_gn(real_T x[16], int32_T ix0, int32_T iy0, real_T c, real_T s,\r\n                    DW_VandD *localDW)\r\n{\r\n  real_T temp_tmp;\r\n  localDW->temp_o = x[iy0 - 1];\r\n  temp_tmp = x[ix0 - 1];\r\n  x[iy0 - 1] = localDW->temp_o * c - temp_tmp * s;\r\n  x[ix0 - 1] = temp_tmp * c + localDW->temp_o * s;\r\n  localDW->temp_o = x[ix0] * c + x[iy0] * s;\r\n  x[iy0] = x[iy0] * c - x[ix0] * s;\r\n  x[ix0] = localDW->temp_o;\r\n  localDW->temp_o = x[iy0 + 1];\r\n  temp_tmp = x[ix0 + 1];\r\n  x[iy0 + 1] = localDW->temp_o * c - temp_tmp * s;\r\n  x[ix0 + 1] = temp_tmp * c + localDW->temp_o * s;\r\n  localDW->temp_o = x[iy0 + 2];\r\n  temp_tmp = x[ix0 + 2];\r\n  x[iy0 + 2] = localDW->temp_o * c - temp_tmp * s;\r\n  x[ix0 + 2] = temp_tmp * c + localDW->temp_o * s;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic real_T xnrm2_n(int32_T n, const real_T x[3], DW_VandD *localDW)\r\n{\r\n  real_T y;\r\n  int32_T k;\r\n  y = 0.0;\r\n  if (n >= 1) {\r\n    if (n == 1) {\r\n      y = fabs(x[1]);\r\n    } else {\r\n      localDW->scale_l = 3.3121686421112381E-170;\r\n      for (k = 2; k <= n + 1; k++) {\r\n        localDW->absxk = fabs(x[k - 1]);\r\n        if (localDW->absxk > localDW->scale_l) {\r\n          localDW->t = localDW->scale_l / localDW->absxk;\r\n          y = y * localDW->t * localDW->t + 1.0;\r\n          localDW->scale_l = localDW->absxk;\r\n        } else {\r\n          localDW->t = localDW->absxk / localDW->scale_l;\r\n          y += localDW->t * localDW->t;\r\n        }\r\n      }\r\n\r\n      y = localDW->scale_l * sqrt(y);\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic real_T xzlarfg(int32_T n, real_T *alpha1, real_T x[3], DW_VandD *localDW)\r\n{\r\n  real_T tau;\r\n  int32_T b_k;\r\n  int32_T knt;\r\n  tau = 0.0;\r\n  if (n > 0) {\r\n    localDW->xnorm_d = xnrm2_n(n - 1, x, localDW);\r\n    if (localDW->xnorm_d != 0.0) {\r\n      localDW->xnorm_d = rt_hypotd_snf_m(*alpha1, localDW->xnorm_d, localDW);\r\n      if (*alpha1 >= 0.0) {\r\n        localDW->xnorm_d = -localDW->xnorm_d;\r\n      }\r\n\r\n      if (fabs(localDW->xnorm_d) < 1.0020841800044864E-292) {\r\n        knt = 0;\r\n        do {\r\n          knt++;\r\n          for (b_k = 1; b_k < n; b_k++) {\r\n            x[b_k] *= 9.9792015476736E+291;\r\n          }\r\n\r\n          localDW->xnorm_d *= 9.9792015476736E+291;\r\n          *alpha1 *= 9.9792015476736E+291;\r\n        } while ((fabs(localDW->xnorm_d) < 1.0020841800044864E-292) && (knt < 20));\r\n\r\n        localDW->xnorm_d = rt_hypotd_snf_m(*alpha1, xnrm2_n(n - 1, x, localDW),\r\n          localDW);\r\n        if (*alpha1 >= 0.0) {\r\n          localDW->xnorm_d = -localDW->xnorm_d;\r\n        }\r\n\r\n        tau = (localDW->xnorm_d - *alpha1) / localDW->xnorm_d;\r\n        localDW->a_g = 1.0 / (*alpha1 - localDW->xnorm_d);\r\n        for (b_k = 1; b_k < n; b_k++) {\r\n          x[b_k] *= localDW->a_g;\r\n        }\r\n\r\n        for (b_k = 0; b_k < knt; b_k++) {\r\n          localDW->xnorm_d *= 1.0020841800044864E-292;\r\n        }\r\n\r\n        *alpha1 = localDW->xnorm_d;\r\n      } else {\r\n        tau = (localDW->xnorm_d - *alpha1) / localDW->xnorm_d;\r\n        localDW->a_g = 1.0 / (*alpha1 - localDW->xnorm_d);\r\n        for (knt = 1; knt < n; knt++) {\r\n          x[knt] *= localDW->a_g;\r\n        }\r\n\r\n        *alpha1 = localDW->xnorm_d;\r\n      }\r\n    }\r\n  }\r\n\r\n  return tau;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic int32_T eml_dlahqr(real_T h[16], real_T z[16], DW_VandD *localDW)\r\n{\r\n  int32_T L;\r\n  int32_T b_k;\r\n  int32_T h12_tmp;\r\n  int32_T h12_tmp_0;\r\n  int32_T hoffset;\r\n  int32_T info;\r\n  int32_T its;\r\n  int32_T j;\r\n  int32_T k;\r\n  int32_T m;\r\n  int32_T nr;\r\n  boolean_T exitg1;\r\n  boolean_T exitg2;\r\n  boolean_T exitg3;\r\n  boolean_T goto150;\r\n  info = 0;\r\n  localDW->v[0] = 0.0;\r\n  localDW->v[1] = 0.0;\r\n  localDW->v[2] = 0.0;\r\n  h[2] = 0.0;\r\n  h[3] = 0.0;\r\n  h[7] = 0.0;\r\n  localDW->i_l = 3;\r\n  exitg1 = false;\r\n  while ((!exitg1) && (localDW->i_l + 1 >= 1)) {\r\n    L = 1;\r\n    goto150 = false;\r\n    its = 0;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (its < 301)) {\r\n      k = localDW->i_l;\r\n      exitg3 = false;\r\n      while ((!exitg3) && (k + 1 > L)) {\r\n        hoffset = ((k - 1) << 2) + k;\r\n        if (fabs(h[hoffset]) <= 4.0083367200179456E-292) {\r\n          exitg3 = true;\r\n        } else {\r\n          nr = (k << 2) + k;\r\n          localDW->tst = fabs(h[hoffset - 1]) + fabs(h[nr]);\r\n          if (localDW->tst == 0.0) {\r\n            if (k - 1 >= 1) {\r\n              localDW->tst = fabs(h[(((k - 2) << 2) + k) - 1]);\r\n            }\r\n\r\n            if (k + 2 <= 4) {\r\n              localDW->tst += fabs(h[nr + 1]);\r\n            }\r\n          }\r\n\r\n          if (fabs(h[hoffset]) <= 2.2204460492503131E-16 * localDW->tst) {\r\n            localDW->htmp1 = fabs(h[hoffset]);\r\n            localDW->tst = fabs(h[nr - 1]);\r\n            if (localDW->htmp1 > localDW->tst) {\r\n              localDW->ab = localDW->htmp1;\r\n              localDW->ba = localDW->tst;\r\n            } else {\r\n              localDW->ab = localDW->tst;\r\n              localDW->ba = localDW->htmp1;\r\n            }\r\n\r\n            localDW->tst = h[nr];\r\n            localDW->htmp1 = fabs(localDW->tst);\r\n            localDW->tst = fabs(h[hoffset - 1] - localDW->tst);\r\n            if (localDW->htmp1 > localDW->tst) {\r\n              localDW->aa = localDW->htmp1;\r\n              localDW->htmp1 = localDW->tst;\r\n            } else {\r\n              localDW->aa = localDW->tst;\r\n            }\r\n\r\n            localDW->tst = localDW->aa + localDW->ab;\r\n            localDW->htmp1 = localDW->aa / localDW->tst * localDW->htmp1 *\r\n              2.2204460492503131E-16;\r\n            if ((localDW->htmp1 <= 4.0083367200179456E-292) || rtIsNaN\r\n                (localDW->htmp1)) {\r\n              localDW->htmp1 = 4.0083367200179456E-292;\r\n            }\r\n\r\n            if (localDW->ab / localDW->tst * localDW->ba <= localDW->htmp1) {\r\n              exitg3 = true;\r\n            } else {\r\n              k--;\r\n            }\r\n          } else {\r\n            k--;\r\n          }\r\n        }\r\n      }\r\n\r\n      L = k + 1;\r\n      if (k + 1 > 1) {\r\n        h[k + ((k - 1) << 2)] = 0.0;\r\n      }\r\n\r\n      if (k + 1 >= localDW->i_l) {\r\n        goto150 = true;\r\n        exitg2 = true;\r\n      } else {\r\n        switch (its) {\r\n         case 10:\r\n          nr = (k << 2) + k;\r\n          localDW->tst = fabs(h[(((k + 1) << 2) + k) + 2]) + fabs(h[nr + 1]);\r\n          localDW->ba = 0.75 * localDW->tst + h[nr];\r\n          localDW->h12 = -0.4375 * localDW->tst;\r\n          localDW->aa = localDW->tst;\r\n          localDW->htmp1 = localDW->ba;\r\n          break;\r\n\r\n         case 20:\r\n          localDW->tst = fabs(h[(((localDW->i_l - 2) << 2) + localDW->i_l) - 1])\r\n            + fabs(h[((localDW->i_l - 1) << 2) + localDW->i_l]);\r\n          localDW->ba = h[(localDW->i_l << 2) + localDW->i_l] + 0.75 *\r\n            localDW->tst;\r\n          localDW->h12 = -0.4375 * localDW->tst;\r\n          localDW->aa = localDW->tst;\r\n          localDW->htmp1 = localDW->ba;\r\n          break;\r\n\r\n         default:\r\n          m = ((localDW->i_l - 1) << 2) + localDW->i_l;\r\n          localDW->ba = h[m - 1];\r\n          localDW->aa = h[m];\r\n          localDW->h12 = h[((localDW->i_l << 2) + localDW->i_l) - 1];\r\n          localDW->htmp1 = h[(localDW->i_l << 2) + localDW->i_l];\r\n          break;\r\n        }\r\n\r\n        localDW->tst = ((fabs(localDW->ba) + fabs(localDW->h12)) + fabs\r\n                        (localDW->aa)) + fabs(localDW->htmp1);\r\n        if (localDW->tst == 0.0) {\r\n          localDW->ba = 0.0;\r\n          localDW->htmp1 = 0.0;\r\n          localDW->ab = 0.0;\r\n          localDW->aa = 0.0;\r\n        } else {\r\n          localDW->ba /= localDW->tst;\r\n          localDW->htmp1 /= localDW->tst;\r\n          localDW->ab = (localDW->ba + localDW->htmp1) / 2.0;\r\n          localDW->ba = (localDW->ba - localDW->ab) * (localDW->htmp1 -\r\n            localDW->ab) - localDW->h12 / localDW->tst * (localDW->aa /\r\n            localDW->tst);\r\n          localDW->aa = sqrt(fabs(localDW->ba));\r\n          if (localDW->ba >= 0.0) {\r\n            localDW->ba = localDW->ab * localDW->tst;\r\n            localDW->ab = localDW->ba;\r\n            localDW->htmp1 = localDW->aa * localDW->tst;\r\n            localDW->aa = -localDW->htmp1;\r\n          } else {\r\n            localDW->ba = localDW->ab + localDW->aa;\r\n            localDW->ab -= localDW->aa;\r\n            if (fabs(localDW->ba - localDW->htmp1) <= fabs(localDW->ab -\r\n                 localDW->htmp1)) {\r\n              localDW->ba *= localDW->tst;\r\n              localDW->ab = localDW->ba;\r\n            } else {\r\n              localDW->ab *= localDW->tst;\r\n              localDW->ba = localDW->ab;\r\n            }\r\n\r\n            localDW->htmp1 = 0.0;\r\n            localDW->aa = 0.0;\r\n          }\r\n        }\r\n\r\n        m = localDW->i_l - 1;\r\n        exitg3 = false;\r\n        while ((!exitg3) && (m >= k + 1)) {\r\n          nr = ((m - 1) << 2) + m;\r\n          localDW->h12 = h[nr];\r\n          localDW->tst_tmp_tmp = h[nr - 1];\r\n          localDW->tst_tmp = localDW->tst_tmp_tmp - localDW->ab;\r\n          localDW->tst = (fabs(localDW->tst_tmp) + fabs(localDW->aa)) + fabs\r\n            (localDW->h12);\r\n          localDW->h12 /= localDW->tst;\r\n          nr = (m << 2) + m;\r\n          localDW->v[0] = (localDW->tst_tmp / localDW->tst *\r\n                           (localDW->tst_tmp_tmp - localDW->ba) + h[nr - 1] *\r\n                           localDW->h12) - localDW->aa / localDW->tst *\r\n            localDW->htmp1;\r\n          localDW->tst_tmp = h[nr];\r\n          localDW->v[1] = (((localDW->tst_tmp_tmp + localDW->tst_tmp) -\r\n                            localDW->ba) - localDW->ab) * localDW->h12;\r\n          localDW->v[2] = h[nr + 1] * localDW->h12;\r\n          localDW->tst = (fabs(localDW->v[0]) + fabs(localDW->v[1])) + fabs\r\n            (localDW->v[2]);\r\n          localDW->v[0] /= localDW->tst;\r\n          localDW->v[1] /= localDW->tst;\r\n          localDW->v[2] /= localDW->tst;\r\n          if (k + 1 == m) {\r\n            exitg3 = true;\r\n          } else {\r\n            hoffset = ((m - 2) << 2) + m;\r\n            if (fabs(h[hoffset - 1]) * (fabs(localDW->v[1]) + fabs(localDW->v[2]))\r\n                <= ((fabs(h[hoffset - 2]) + fabs(localDW->tst_tmp_tmp)) + fabs\r\n                    (localDW->tst_tmp)) * (2.2204460492503131E-16 * fabs\r\n                 (localDW->v[0]))) {\r\n              exitg3 = true;\r\n            } else {\r\n              m--;\r\n            }\r\n          }\r\n        }\r\n\r\n        for (b_k = m; b_k <= localDW->i_l; b_k++) {\r\n          nr = (localDW->i_l - b_k) + 2;\r\n          if (nr >= 3) {\r\n            nr = 3;\r\n          }\r\n\r\n          if (b_k > m) {\r\n            hoffset = ((b_k - 2) << 2) + b_k;\r\n            for (j = 0; j < nr; j++) {\r\n              localDW->v[j] = h[(j + hoffset) - 1];\r\n            }\r\n          }\r\n\r\n          localDW->htmp1 = localDW->v[0];\r\n          localDW->tst = xzlarfg(nr, &localDW->htmp1, localDW->v, localDW);\r\n          localDW->v[0] = localDW->htmp1;\r\n          if (b_k > m) {\r\n            h[(b_k + ((b_k - 2) << 2)) - 1] = localDW->htmp1;\r\n            h[b_k + ((b_k - 2) << 2)] = 0.0;\r\n            if (b_k < localDW->i_l) {\r\n              h[(b_k + ((b_k - 2) << 2)) + 1] = 0.0;\r\n            }\r\n          } else if (m > k + 1) {\r\n            hoffset = (((b_k - 2) << 2) + b_k) - 1;\r\n            h[hoffset] *= 1.0 - localDW->tst;\r\n          }\r\n\r\n          localDW->htmp1 = localDW->v[1];\r\n          localDW->ab = localDW->tst * localDW->v[1];\r\n          switch (nr) {\r\n           case 3:\r\n            localDW->ba = localDW->v[2];\r\n            localDW->aa = localDW->tst * localDW->v[2];\r\n            for (nr = b_k - 1; nr + 1 < 5; nr++) {\r\n              h12_tmp = (nr << 2) + b_k;\r\n              localDW->h12 = (h[h12_tmp - 1] + h[h12_tmp] * localDW->htmp1) +\r\n                h[h12_tmp + 1] * localDW->ba;\r\n              h[h12_tmp - 1] -= localDW->h12 * localDW->tst;\r\n              h[h12_tmp] -= localDW->h12 * localDW->ab;\r\n              h[h12_tmp + 1] -= localDW->h12 * localDW->aa;\r\n            }\r\n\r\n            if (b_k + 3 <= localDW->i_l + 1) {\r\n              nr = b_k + 3;\r\n            } else {\r\n              nr = localDW->i_l + 1;\r\n            }\r\n\r\n            for (hoffset = 0; hoffset < nr; hoffset++) {\r\n              h12_tmp = ((b_k - 1) << 2) + hoffset;\r\n              j = (b_k << 2) + hoffset;\r\n              h12_tmp_0 = ((b_k + 1) << 2) + hoffset;\r\n              localDW->h12 = (h[j] * localDW->htmp1 + h[h12_tmp]) + h[h12_tmp_0]\r\n                * localDW->ba;\r\n              h[h12_tmp] -= localDW->h12 * localDW->tst;\r\n              h[j] -= localDW->h12 * localDW->ab;\r\n              h[h12_tmp_0] -= localDW->h12 * localDW->aa;\r\n            }\r\n\r\n            for (nr = 0; nr < 4; nr++) {\r\n              h12_tmp = ((b_k - 1) << 2) + nr;\r\n              j = (b_k << 2) + nr;\r\n              h12_tmp_0 = ((b_k + 1) << 2) + nr;\r\n              localDW->h12 = (z[j] * localDW->htmp1 + z[h12_tmp]) + z[h12_tmp_0]\r\n                * localDW->ba;\r\n              z[h12_tmp] -= localDW->h12 * localDW->tst;\r\n              z[j] -= localDW->h12 * localDW->ab;\r\n              z[h12_tmp_0] -= localDW->h12 * localDW->aa;\r\n            }\r\n            break;\r\n\r\n           case 2:\r\n            for (nr = b_k - 1; nr + 1 < 5; nr++) {\r\n              h12_tmp = (nr << 2) + b_k;\r\n              localDW->ba = h[h12_tmp - 1];\r\n              localDW->h12 = h[h12_tmp] * localDW->htmp1 + localDW->ba;\r\n              h[h12_tmp - 1] = localDW->ba - localDW->h12 * localDW->tst;\r\n              h[h12_tmp] -= localDW->h12 * localDW->ab;\r\n            }\r\n\r\n            for (nr = 0; nr <= localDW->i_l; nr++) {\r\n              h12_tmp = ((b_k - 1) << 2) + nr;\r\n              j = (b_k << 2) + nr;\r\n              localDW->h12 = h[j] * localDW->htmp1 + h[h12_tmp];\r\n              h[h12_tmp] -= localDW->h12 * localDW->tst;\r\n              h[j] -= localDW->h12 * localDW->ab;\r\n            }\r\n\r\n            for (nr = 0; nr < 4; nr++) {\r\n              h12_tmp = (b_k - 1) << 2;\r\n              j = b_k << 2;\r\n              localDW->h12 = z[j + nr] * localDW->htmp1 + z[h12_tmp + nr];\r\n              hoffset = h12_tmp + nr;\r\n              z[hoffset] -= localDW->h12 * localDW->tst;\r\n              hoffset = j + nr;\r\n              z[hoffset] -= localDW->h12 * localDW->ab;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n\r\n        its++;\r\n      }\r\n    }\r\n\r\n    if (!goto150) {\r\n      info = localDW->i_l + 1;\r\n      exitg1 = true;\r\n    } else {\r\n      if ((localDW->i_l + 1 != L) && (L == localDW->i_l)) {\r\n        nr = (localDW->i_l << 2) + localDW->i_l;\r\n        localDW->tst = h[nr - 1];\r\n        its = ((localDW->i_l - 1) << 2) + localDW->i_l;\r\n        localDW->htmp1 = h[its];\r\n        localDW->ab = h[nr];\r\n        xdlanv2(&h[(localDW->i_l + ((localDW->i_l - 1) << 2)) - 1],\r\n                &localDW->tst, &localDW->htmp1, &localDW->ab, &localDW->ba,\r\n                &localDW->aa, &localDW->h12, &localDW->tst_tmp_tmp,\r\n                &localDW->tst_tmp, &localDW->sn, localDW);\r\n        h[nr - 1] = localDW->tst;\r\n        h[its] = localDW->htmp1;\r\n        h[nr] = localDW->ab;\r\n        if (localDW->i_l + 1 < 4) {\r\n          xrot(3 - localDW->i_l, h, localDW->i_l + ((localDW->i_l + 1) << 2),\r\n               (localDW->i_l + ((localDW->i_l + 1) << 2)) + 1, localDW->tst_tmp,\r\n               localDW->sn, localDW);\r\n        }\r\n\r\n        xrot_g(localDW->i_l - 1, h, ((localDW->i_l - 1) << 2) + 1, (localDW->i_l\r\n                << 2) + 1, localDW->tst_tmp, localDW->sn, localDW);\r\n        xrot_gn(z, ((localDW->i_l - 1) << 2) + 1, (localDW->i_l << 2) + 1,\r\n                localDW->tst_tmp, localDW->sn, localDW);\r\n      }\r\n\r\n      localDW->i_l = L - 2;\r\n    }\r\n  }\r\n\r\n  return info;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void schur(const real_T A[16], real_T V[16], real_T T[16], DW_VandD\r\n                  *localDW)\r\n{\r\n  if (anyNonFinite(A)) {\r\n    for (localDW->iaii = 0; localDW->iaii < 16; localDW->iaii++) {\r\n      V[localDW->iaii] = (rtNaN);\r\n    }\r\n\r\n    localDW->iaii = 2;\r\n    while (localDW->iaii < 5) {\r\n      V[localDW->iaii - 1] = 0.0;\r\n      localDW->iaii++;\r\n    }\r\n\r\n    localDW->iaii = 3;\r\n    while (localDW->iaii < 5) {\r\n      V[localDW->iaii + 3] = 0.0;\r\n      localDW->iaii++;\r\n    }\r\n\r\n    V[11] = 0.0;\r\n    for (localDW->iaii = 0; localDW->iaii < 16; localDW->iaii++) {\r\n      T[localDW->iaii] = (rtNaN);\r\n    }\r\n  } else {\r\n    memcpy(&T[0], &A[0], sizeof(real_T) << 4U);\r\n    xgehrd(T, localDW->tau, localDW);\r\n    memcpy(&V[0], &T[0], sizeof(real_T) << 4U);\r\n    localDW->iaii = 0;\r\n    while (localDW->iaii <= 2) {\r\n      V[localDW->iaii + 12] = 0.0;\r\n      localDW->iaii++;\r\n    }\r\n\r\n    localDW->iaii = 0;\r\n    while (localDW->iaii <= 1) {\r\n      V[localDW->iaii + 8] = 0.0;\r\n      localDW->iaii++;\r\n    }\r\n\r\n    localDW->iaii = 1;\r\n    while (localDW->iaii + 3 <= 4) {\r\n      V[localDW->iaii + 10] = V[localDW->iaii + 6];\r\n      localDW->iaii++;\r\n    }\r\n\r\n    V[4] = 0.0;\r\n    localDW->iaii = 0;\r\n    while (localDW->iaii + 3 <= 4) {\r\n      V[localDW->iaii + 6] = V[localDW->iaii + 2];\r\n      localDW->iaii++;\r\n    }\r\n\r\n    localDW->work[0] = 0.0;\r\n    V[1] = 0.0;\r\n    localDW->work[1] = 0.0;\r\n    V[2] = 0.0;\r\n    localDW->work[2] = 0.0;\r\n    V[3] = 0.0;\r\n    localDW->work[3] = 0.0;\r\n    V[0] = 1.0;\r\n    V[15] = 1.0 - localDW->tau[2];\r\n    localDW->iaii = 0;\r\n    while (localDW->iaii <= 1) {\r\n      V[14 - localDW->iaii] = 0.0;\r\n      localDW->iaii++;\r\n    }\r\n\r\n    V[10] = 1.0;\r\n    xzlarf(2, 1, 11, localDW->tau[1], V, 15, localDW->work, localDW);\r\n    localDW->iaii = 11;\r\n    while (localDW->iaii + 1 <= 12) {\r\n      V[localDW->iaii] *= -localDW->tau[1];\r\n      localDW->iaii++;\r\n    }\r\n\r\n    V[10] = 1.0 - localDW->tau[1];\r\n    V[9] = 0.0;\r\n    V[5] = 1.0;\r\n    xzlarf(3, 2, 6, localDW->tau[0], V, 10, localDW->work, localDW);\r\n    localDW->iaii = 6;\r\n    while (localDW->iaii + 1 <= 8) {\r\n      V[localDW->iaii] *= -localDW->tau[0];\r\n      localDW->iaii++;\r\n    }\r\n\r\n    V[5] = 1.0 - localDW->tau[0];\r\n    eml_dlahqr(T, V, localDW);\r\n    T[3] = 0.0;\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic real_T norm(const real_T x[16])\r\n{\r\n  real_T s;\r\n  real_T y;\r\n  int32_T j;\r\n  int32_T s_tmp;\r\n  boolean_T exitg1;\r\n  y = 0.0;\r\n  j = 0;\r\n  exitg1 = false;\r\n  while ((!exitg1) && (j < 4)) {\r\n    s_tmp = j << 2;\r\n    s = ((fabs(x[s_tmp + 1]) + fabs(x[s_tmp])) + fabs(x[s_tmp + 2])) + fabs\r\n      (x[s_tmp + 3]);\r\n    if (rtIsNaN(s)) {\r\n      y = (rtNaN);\r\n      exitg1 = true;\r\n    } else {\r\n      if (s > y) {\r\n        y = s;\r\n      }\r\n\r\n      j++;\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\nreal_T rt_powd_snf(real_T u0, real_T u1)\r\n{\r\n  real_T tmp;\r\n  real_T tmp_0;\r\n  real_T y;\r\n  if (rtIsNaN(u0) || rtIsNaN(u1)) {\r\n    y = (rtNaN);\r\n  } else {\r\n    tmp = fabs(u0);\r\n    tmp_0 = fabs(u1);\r\n    if (rtIsInf(u1)) {\r\n      if (tmp == 1.0) {\r\n        y = 1.0;\r\n      } else if (tmp > 1.0) {\r\n        if (u1 > 0.0) {\r\n          y = (rtInf);\r\n        } else {\r\n          y = 0.0;\r\n        }\r\n      } else if (u1 > 0.0) {\r\n        y = 0.0;\r\n      } else {\r\n        y = (rtInf);\r\n      }\r\n    } else if (tmp_0 == 0.0) {\r\n      y = 1.0;\r\n    } else if (tmp_0 == 1.0) {\r\n      if (u1 > 0.0) {\r\n        y = u0;\r\n      } else {\r\n        y = 1.0 / u0;\r\n      }\r\n    } else if (u1 == 2.0) {\r\n      y = u0 * u0;\r\n    } else if ((u1 == 0.5) && (u0 >= 0.0)) {\r\n      y = sqrt(u0);\r\n    } else if ((u0 < 0.0) && (u1 > floor(u1))) {\r\n      y = (rtNaN);\r\n    } else {\r\n      y = pow(u0, u1);\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xzgetrf(real_T A[16], int32_T ipiv[4], int32_T *info, DW_VandD\r\n                    *localDW)\r\n{\r\n  int32_T b_ix;\r\n  int32_T c;\r\n  int32_T c_ix;\r\n  int32_T ijA;\r\n  int32_T ix;\r\n  int32_T j;\r\n  int32_T jA;\r\n  int32_T jj;\r\n  ipiv[0] = 1;\r\n  ipiv[1] = 2;\r\n  ipiv[2] = 3;\r\n  ipiv[3] = 4;\r\n  *info = 0;\r\n  for (j = 0; j < 3; j++) {\r\n    jj = j * 5;\r\n    jA = 0;\r\n    ix = jj;\r\n    localDW->smax = fabs(A[jj]);\r\n    for (b_ix = 2; b_ix <= 4 - j; b_ix++) {\r\n      ix++;\r\n      localDW->s = fabs(A[ix]);\r\n      if (localDW->s > localDW->smax) {\r\n        jA = b_ix - 1;\r\n        localDW->smax = localDW->s;\r\n      }\r\n    }\r\n\r\n    if (A[jj + jA] != 0.0) {\r\n      if (jA != 0) {\r\n        jA += j;\r\n        ipiv[j] = jA + 1;\r\n        localDW->smax = A[j];\r\n        A[j] = A[jA];\r\n        A[jA] = localDW->smax;\r\n        localDW->smax = A[j + 4];\r\n        A[j + 4] = A[jA + 4];\r\n        A[jA + 4] = localDW->smax;\r\n        localDW->smax = A[j + 8];\r\n        A[j + 8] = A[jA + 8];\r\n        A[jA + 8] = localDW->smax;\r\n        localDW->smax = A[j + 12];\r\n        A[j + 12] = A[jA + 12];\r\n        A[jA + 12] = localDW->smax;\r\n      }\r\n\r\n      jA = (jj - j) + 4;\r\n      for (ix = jj + 1; ix < jA; ix++) {\r\n        A[ix] /= A[jj];\r\n      }\r\n    } else {\r\n      *info = j + 1;\r\n    }\r\n\r\n    jA = jj;\r\n    ix = jj + 4;\r\n    for (b_ix = 0; b_ix <= 2 - j; b_ix++) {\r\n      if (A[ix] != 0.0) {\r\n        localDW->smax = -A[ix];\r\n        c_ix = jj + 1;\r\n        ijA = jA + 5;\r\n        c = (jA - j) + 8;\r\n        while (ijA + 1 <= c) {\r\n          A[ijA] += A[c_ix] * localDW->smax;\r\n          c_ix++;\r\n          ijA++;\r\n        }\r\n      }\r\n\r\n      ix += 4;\r\n      jA += 4;\r\n    }\r\n  }\r\n\r\n  if ((*info == 0) && (!(A[15] != 0.0))) {\r\n    *info = 4;\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void xtrsm(const real_T A[16], real_T B_0[16])\r\n{\r\n  real_T tmp;\r\n  int32_T i;\r\n  int32_T j;\r\n  int32_T jBcol;\r\n  int32_T tmp_0;\r\n  for (j = 0; j < 4; j++) {\r\n    jBcol = j << 2;\r\n    tmp = B_0[jBcol + 3];\r\n    if (tmp != 0.0) {\r\n      B_0[jBcol + 3] = tmp / A[15];\r\n      for (i = 0; i < 3; i++) {\r\n        tmp_0 = i + jBcol;\r\n        B_0[tmp_0] -= B_0[jBcol + 3] * A[i + 12];\r\n      }\r\n    }\r\n\r\n    tmp = B_0[jBcol + 2];\r\n    if (tmp != 0.0) {\r\n      B_0[jBcol + 2] = tmp / A[10];\r\n      for (i = 0; i < 2; i++) {\r\n        tmp_0 = i + jBcol;\r\n        B_0[tmp_0] -= B_0[jBcol + 2] * A[i + 8];\r\n      }\r\n    }\r\n\r\n    tmp = B_0[jBcol + 1];\r\n    if (tmp != 0.0) {\r\n      B_0[jBcol + 1] = tmp / A[5];\r\n      B_0[jBcol] -= B_0[jBcol + 1] * A[4];\r\n    }\r\n\r\n    if (B_0[jBcol] != 0.0) {\r\n      B_0[jBcol] /= A[0];\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void inv(const real_T x[16], real_T y[16], DW_VandD *localDW)\r\n{\r\n  int32_T info;\r\n  int32_T pipk;\r\n  int32_T y_tmp;\r\n  int32_T y_tmp_0;\r\n  for (info = 0; info < 16; info++) {\r\n    y[info] = 0.0;\r\n    localDW->b_x[info] = x[info];\r\n  }\r\n\r\n  xzgetrf(localDW->b_x, localDW->ipiv, &info, localDW);\r\n  localDW->p_h[0] = 1;\r\n  localDW->p_h[1] = 2;\r\n  localDW->p_h[2] = 3;\r\n  localDW->p_h[3] = 4;\r\n  if (localDW->ipiv[0] > 1) {\r\n    pipk = localDW->p_h[localDW->ipiv[0] - 1];\r\n    localDW->p_h[localDW->ipiv[0] - 1] = 1;\r\n    localDW->p_h[0] = (int8_T)pipk;\r\n  }\r\n\r\n  if (localDW->ipiv[1] > 2) {\r\n    pipk = localDW->p_h[localDW->ipiv[1] - 1];\r\n    localDW->p_h[localDW->ipiv[1] - 1] = localDW->p_h[1];\r\n    localDW->p_h[1] = (int8_T)pipk;\r\n  }\r\n\r\n  if (localDW->ipiv[2] > 3) {\r\n    pipk = localDW->p_h[localDW->ipiv[2] - 1];\r\n    localDW->p_h[localDW->ipiv[2] - 1] = localDW->p_h[2];\r\n    localDW->p_h[2] = (int8_T)pipk;\r\n  }\r\n\r\n  pipk = localDW->p_h[0] - 1;\r\n  y[(localDW->p_h[0] - 1) << 2] = 1.0;\r\n  localDW->j = 0;\r\n  while (localDW->j + 1 < 5) {\r\n    info = pipk << 2;\r\n    y_tmp_0 = info + localDW->j;\r\n    if (y[y_tmp_0] != 0.0) {\r\n      localDW->i_n = localDW->j + 1;\r\n      while (localDW->i_n + 1 < 5) {\r\n        y_tmp = info + localDW->i_n;\r\n        y[y_tmp] -= localDW->b_x[(localDW->j << 2) + localDW->i_n] * y[y_tmp_0];\r\n        localDW->i_n++;\r\n      }\r\n    }\r\n\r\n    localDW->j++;\r\n  }\r\n\r\n  pipk = localDW->p_h[1] - 1;\r\n  y[((localDW->p_h[1] - 1) << 2) + 1] = 1.0;\r\n  localDW->j = 1;\r\n  while (localDW->j + 1 < 5) {\r\n    info = pipk << 2;\r\n    y_tmp_0 = info + localDW->j;\r\n    if (y[y_tmp_0] != 0.0) {\r\n      localDW->i_n = localDW->j + 1;\r\n      while (localDW->i_n + 1 < 5) {\r\n        y_tmp = info + localDW->i_n;\r\n        y[y_tmp] -= localDW->b_x[(localDW->j << 2) + localDW->i_n] * y[y_tmp_0];\r\n        localDW->i_n++;\r\n      }\r\n    }\r\n\r\n    localDW->j++;\r\n  }\r\n\r\n  info = (localDW->p_h[2] - 1) << 2;\r\n  y[info + 2] = 1.0;\r\n  localDW->j = 2;\r\n  while (localDW->j + 1 < 5) {\r\n    y_tmp_0 = info + localDW->j;\r\n    if (y[y_tmp_0] != 0.0) {\r\n      localDW->i_n = localDW->j + 1;\r\n      while (localDW->i_n + 1 < 5) {\r\n        y_tmp = info + localDW->i_n;\r\n        y[y_tmp] -= localDW->b_x[(localDW->j << 2) + localDW->i_n] * y[y_tmp_0];\r\n        localDW->i_n++;\r\n      }\r\n    }\r\n\r\n    localDW->j++;\r\n  }\r\n\r\n  y_tmp = (localDW->p_h[3] - 1) << 2;\r\n  y[y_tmp + 3] = 1.0;\r\n  localDW->j = 3;\r\n  while (localDW->j + 1 < 5) {\r\n    info = y_tmp + localDW->j;\r\n    if (y[info] != 0.0) {\r\n      localDW->i_n = localDW->j + 1;\r\n      while (localDW->i_n + 1 < 5) {\r\n        y_tmp_0 = y_tmp + localDW->i_n;\r\n        y[y_tmp_0] -= localDW->b_x[(localDW->j << 2) + localDW->i_n] * y[info];\r\n        localDW->i_n++;\r\n      }\r\n    }\r\n\r\n    localDW->j++;\r\n  }\r\n\r\n  xtrsm(localDW->b_x, y);\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void mpower(const real_T a[16], real_T b, real_T c[16], DW_VandD *localDW)\r\n{\r\n  int32_T exitg1;\r\n  boolean_T aBufferInUse;\r\n  boolean_T firstmult;\r\n  boolean_T lsb;\r\n  if (floor(b) == b) {\r\n    localDW->e_m = fabs(b);\r\n    if (localDW->e_m <= 2.147483647E+9) {\r\n      memcpy(&localDW->b_a[0], &a[0], sizeof(real_T) << 4U);\r\n      localDW->n = (int32_T)localDW->e_m;\r\n      localDW->b_n = localDW->n;\r\n      localDW->nbitson = 0;\r\n      localDW->nb = -2;\r\n      while (localDW->b_n > 0) {\r\n        localDW->nb++;\r\n        if ((localDW->b_n & 1U) != 0U) {\r\n          localDW->nbitson++;\r\n        }\r\n\r\n        localDW->b_n >>= 1;\r\n      }\r\n\r\n      if (localDW->e_m <= 2.0) {\r\n        if (b == 2.0) {\r\n          for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++) {\r\n            for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n              localDW->c_tmp_tmp = localDW->nbitson << 2;\r\n              localDW->c_tmp = localDW->i1 + localDW->c_tmp_tmp;\r\n              c[localDW->c_tmp] = 0.0;\r\n              c[localDW->c_tmp] += a[localDW->c_tmp_tmp] * a[localDW->i1];\r\n              c[localDW->c_tmp] += a[localDW->c_tmp_tmp + 1] * a[localDW->i1 + 4];\r\n              c[localDW->c_tmp] += a[localDW->c_tmp_tmp + 2] * a[localDW->i1 + 8];\r\n              c[localDW->c_tmp] += a[localDW->c_tmp_tmp + 3] * a[localDW->i1 +\r\n                12];\r\n            }\r\n          }\r\n        } else if (b == 1.0) {\r\n          memcpy(&c[0], &a[0], sizeof(real_T) << 4U);\r\n        } else if (b == -1.0) {\r\n          inv(a, c, localDW);\r\n        } else if (b == -2.0) {\r\n          for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++) {\r\n            for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n              localDW->n = localDW->nbitson << 2;\r\n              localDW->b_n = localDW->i1 + localDW->n;\r\n              localDW->b_a[localDW->b_n] = 0.0;\r\n              localDW->b_a[localDW->b_n] += a[localDW->n] * a[localDW->i1];\r\n              localDW->b_a[localDW->b_n] += a[localDW->n + 1] * a[localDW->i1 +\r\n                4];\r\n              localDW->b_a[localDW->b_n] += a[localDW->n + 2] * a[localDW->i1 +\r\n                8];\r\n              localDW->b_a[localDW->b_n] += a[localDW->n + 3] * a[localDW->i1 +\r\n                12];\r\n            }\r\n          }\r\n\r\n          inv(localDW->b_a, c, localDW);\r\n        } else {\r\n          firstmult = false;\r\n          for (localDW->n = 0; localDW->n < 16; localDW->n++) {\r\n            if (!firstmult) {\r\n              firstmult = rtIsNaN(a[localDW->n]);\r\n            }\r\n          }\r\n\r\n          if (firstmult) {\r\n            for (localDW->nbitson = 0; localDW->nbitson < 16; localDW->nbitson++)\r\n            {\r\n              c[localDW->nbitson] = (rtNaN);\r\n            }\r\n          } else {\r\n            memset(&c[0], 0, sizeof(real_T) << 4U);\r\n            c[0] = 1.0;\r\n            c[5] = 1.0;\r\n            c[10] = 1.0;\r\n            c[15] = 1.0;\r\n          }\r\n        }\r\n      } else {\r\n        firstmult = true;\r\n        aBufferInUse = false;\r\n        lsb = ((localDW->nbitson & 1U) != 0U);\r\n        lsb = ((lsb && (b < 0.0)) || ((!lsb) && (b >= 0.0)));\r\n        while (localDW->b_n <= localDW->nb) {\r\n          if ((localDW->n & 1U) != 0U) {\r\n            if (firstmult) {\r\n              firstmult = false;\r\n              if (lsb) {\r\n                if (aBufferInUse) {\r\n                  memcpy(&localDW->cBuffer[0], &localDW->aBuffer[0], sizeof\r\n                         (real_T) << 4U);\r\n                } else {\r\n                  memcpy(&localDW->cBuffer[0], &localDW->b_a[0], sizeof(real_T) <<\r\n                         4U);\r\n                }\r\n              } else if (aBufferInUse) {\r\n                memcpy(&c[0], &localDW->aBuffer[0], sizeof(real_T) << 4U);\r\n              } else {\r\n                memcpy(&c[0], &localDW->b_a[0], sizeof(real_T) << 4U);\r\n              }\r\n            } else {\r\n              if (aBufferInUse) {\r\n                if (lsb) {\r\n                  for (localDW->nbitson = 0; localDW->nbitson < 4;\r\n                       localDW->nbitson++) {\r\n                    for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                      localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                      localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                      c[localDW->c_tmp] = 0.0;\r\n                      c[localDW->c_tmp] += localDW->aBuffer[localDW->c_tmp_tmp] *\r\n                        localDW->cBuffer[localDW->nbitson];\r\n                      c[localDW->c_tmp] += localDW->aBuffer[localDW->c_tmp_tmp +\r\n                        1] * localDW->cBuffer[localDW->nbitson + 4];\r\n                      c[localDW->c_tmp] += localDW->aBuffer[localDW->c_tmp_tmp +\r\n                        2] * localDW->cBuffer[localDW->nbitson + 8];\r\n                      c[localDW->c_tmp] += localDW->aBuffer[localDW->c_tmp_tmp +\r\n                        3] * localDW->cBuffer[localDW->nbitson + 12];\r\n                    }\r\n                  }\r\n                } else {\r\n                  for (localDW->nbitson = 0; localDW->nbitson < 4;\r\n                       localDW->nbitson++) {\r\n                    for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                      localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                      localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                      localDW->cBuffer[localDW->c_tmp] = 0.0;\r\n                      localDW->cBuffer[localDW->c_tmp] += localDW->\r\n                        aBuffer[localDW->c_tmp_tmp] * c[localDW->nbitson];\r\n                      localDW->cBuffer[localDW->c_tmp] += localDW->\r\n                        aBuffer[localDW->c_tmp_tmp + 1] * c[localDW->nbitson + 4];\r\n                      localDW->cBuffer[localDW->c_tmp] += localDW->\r\n                        aBuffer[localDW->c_tmp_tmp + 2] * c[localDW->nbitson + 8];\r\n                      localDW->cBuffer[localDW->c_tmp] += localDW->\r\n                        aBuffer[localDW->c_tmp_tmp + 3] * c[localDW->nbitson +\r\n                        12];\r\n                    }\r\n                  }\r\n                }\r\n              } else if (lsb) {\r\n                for (localDW->nbitson = 0; localDW->nbitson < 4;\r\n                     localDW->nbitson++) {\r\n                  for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                    localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                    localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                    c[localDW->c_tmp] = 0.0;\r\n                    c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp] *\r\n                      localDW->cBuffer[localDW->nbitson];\r\n                    c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 1] *\r\n                      localDW->cBuffer[localDW->nbitson + 4];\r\n                    c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 2] *\r\n                      localDW->cBuffer[localDW->nbitson + 8];\r\n                    c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 3] *\r\n                      localDW->cBuffer[localDW->nbitson + 12];\r\n                  }\r\n                }\r\n              } else {\r\n                for (localDW->nbitson = 0; localDW->nbitson < 4;\r\n                     localDW->nbitson++) {\r\n                  for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                    localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                    localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                    localDW->cBuffer[localDW->c_tmp] = 0.0;\r\n                    localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                      [localDW->c_tmp_tmp] * c[localDW->nbitson];\r\n                    localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                      [localDW->c_tmp_tmp + 1] * c[localDW->nbitson + 4];\r\n                    localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                      [localDW->c_tmp_tmp + 2] * c[localDW->nbitson + 8];\r\n                    localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                      [localDW->c_tmp_tmp + 3] * c[localDW->nbitson + 12];\r\n                  }\r\n                }\r\n              }\r\n\r\n              lsb = !lsb;\r\n            }\r\n          }\r\n\r\n          localDW->n >>= 1;\r\n          if (aBufferInUse) {\r\n            for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++)\r\n            {\r\n              for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                localDW->b_a[localDW->c_tmp] = 0.0;\r\n                localDW->b_a[localDW->c_tmp] += localDW->aBuffer\r\n                  [localDW->c_tmp_tmp] * localDW->aBuffer[localDW->nbitson];\r\n                localDW->b_a[localDW->c_tmp] += localDW->aBuffer\r\n                  [localDW->c_tmp_tmp + 1] * localDW->aBuffer[localDW->nbitson +\r\n                  4];\r\n                localDW->b_a[localDW->c_tmp] += localDW->aBuffer\r\n                  [localDW->c_tmp_tmp + 2] * localDW->aBuffer[localDW->nbitson +\r\n                  8];\r\n                localDW->b_a[localDW->c_tmp] += localDW->aBuffer\r\n                  [localDW->c_tmp_tmp + 3] * localDW->aBuffer[localDW->nbitson +\r\n                  12];\r\n              }\r\n            }\r\n          } else {\r\n            for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++)\r\n            {\r\n              for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                localDW->aBuffer[localDW->c_tmp] = 0.0;\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp] * localDW->b_a[localDW->nbitson];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 1] * localDW->b_a[localDW->nbitson + 4];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 2] * localDW->b_a[localDW->nbitson + 8];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 3] * localDW->b_a[localDW->nbitson + 12];\r\n              }\r\n            }\r\n          }\r\n\r\n          aBufferInUse = !aBufferInUse;\r\n          localDW->b_n++;\r\n        }\r\n\r\n        if (firstmult) {\r\n          if (b < 0.0) {\r\n            if (aBufferInUse) {\r\n              inv(localDW->aBuffer, c, localDW);\r\n            } else {\r\n              inv(localDW->b_a, c, localDW);\r\n            }\r\n          } else if (aBufferInUse) {\r\n            memcpy(&c[0], &localDW->aBuffer[0], sizeof(real_T) << 4U);\r\n          } else {\r\n            memcpy(&c[0], &localDW->b_a[0], sizeof(real_T) << 4U);\r\n          }\r\n        } else if (b < 0.0) {\r\n          for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++) {\r\n            for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n              localDW->c_tmp_tmp = localDW->nbitson << 2;\r\n              localDW->c_tmp = localDW->i1 + localDW->c_tmp_tmp;\r\n              localDW->cBuffer[localDW->c_tmp] = 0.0;\r\n              localDW->cBuffer_c[localDW->c_tmp] = 0.0;\r\n              localDW->e_m = c[localDW->i1];\r\n              localDW->cBuffer[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp] * localDW->e_m;\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->b_a\r\n                [localDW->c_tmp_tmp] * localDW->e_m;\r\n              localDW->e_m = c[localDW->i1 + 4];\r\n              localDW->cBuffer[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 1] * localDW->e_m;\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->b_a\r\n                [localDW->c_tmp_tmp + 1] * localDW->e_m;\r\n              localDW->e_m = c[localDW->i1 + 8];\r\n              localDW->cBuffer[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 2] * localDW->e_m;\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->b_a\r\n                [localDW->c_tmp_tmp + 2] * localDW->e_m;\r\n              localDW->e_m = c[localDW->i1 + 12];\r\n              localDW->cBuffer[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 3] * localDW->e_m;\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->b_a\r\n                [localDW->c_tmp_tmp + 3] * localDW->e_m;\r\n            }\r\n          }\r\n\r\n          if (aBufferInUse) {\r\n            memcpy(&localDW->b_a[0], &localDW->cBuffer[0], sizeof(real_T) << 4U);\r\n          } else {\r\n            memcpy(&localDW->b_a[0], &localDW->cBuffer_c[0], sizeof(real_T) <<\r\n                   4U);\r\n          }\r\n\r\n          inv(localDW->b_a, c, localDW);\r\n        } else {\r\n          for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++) {\r\n            for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n              localDW->c_tmp_tmp = localDW->nbitson << 2;\r\n              localDW->c_tmp = localDW->i1 + localDW->c_tmp_tmp;\r\n              localDW->cBuffer_c[localDW->c_tmp] = 0.0;\r\n              c[localDW->c_tmp] = 0.0;\r\n              localDW->e_m = localDW->cBuffer[localDW->i1];\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp] * localDW->e_m;\r\n              c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp] *\r\n                localDW->e_m;\r\n              localDW->e_m = localDW->cBuffer[localDW->i1 + 4];\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 1] * localDW->e_m;\r\n              c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 1] *\r\n                localDW->e_m;\r\n              localDW->e_m = localDW->cBuffer[localDW->i1 + 8];\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 2] * localDW->e_m;\r\n              c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 2] *\r\n                localDW->e_m;\r\n              localDW->e_m = localDW->cBuffer[localDW->i1 + 12];\r\n              localDW->cBuffer_c[localDW->c_tmp] += localDW->aBuffer\r\n                [localDW->c_tmp_tmp + 3] * localDW->e_m;\r\n              c[localDW->c_tmp] += localDW->b_a[localDW->c_tmp_tmp + 3] *\r\n                localDW->e_m;\r\n            }\r\n          }\r\n\r\n          if (aBufferInUse) {\r\n            memcpy(&c[0], &localDW->cBuffer_c[0], sizeof(real_T) << 4U);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      memcpy(&localDW->b_a[0], &a[0], sizeof(real_T) << 4U);\r\n      if (!rtIsInf(b)) {\r\n        firstmult = true;\r\n        do {\r\n          exitg1 = 0;\r\n          localDW->ed2 = floor(localDW->e_m / 2.0);\r\n          if (2.0 * localDW->ed2 != localDW->e_m) {\r\n            if (firstmult) {\r\n              memcpy(&c[0], &localDW->b_a[0], sizeof(real_T) << 4U);\r\n              firstmult = false;\r\n            } else {\r\n              for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson\r\n                   ++) {\r\n                for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                  localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                  localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                  localDW->cBuffer[localDW->c_tmp] = 0.0;\r\n                  localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                    [localDW->c_tmp_tmp] * c[localDW->nbitson];\r\n                  localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                    [localDW->c_tmp_tmp + 1] * c[localDW->nbitson + 4];\r\n                  localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                    [localDW->c_tmp_tmp + 2] * c[localDW->nbitson + 8];\r\n                  localDW->cBuffer[localDW->c_tmp] += localDW->b_a\r\n                    [localDW->c_tmp_tmp + 3] * c[localDW->nbitson + 12];\r\n                }\r\n              }\r\n\r\n              memcpy(&c[0], &localDW->cBuffer[0], sizeof(real_T) << 4U);\r\n            }\r\n          }\r\n\r\n          if (localDW->ed2 == 0.0) {\r\n            exitg1 = 1;\r\n          } else {\r\n            localDW->e_m = localDW->ed2;\r\n            for (localDW->nbitson = 0; localDW->nbitson < 4; localDW->nbitson++)\r\n            {\r\n              for (localDW->i1 = 0; localDW->i1 < 4; localDW->i1++) {\r\n                localDW->c_tmp_tmp = localDW->i1 << 2;\r\n                localDW->c_tmp = localDW->nbitson + localDW->c_tmp_tmp;\r\n                localDW->aBuffer[localDW->c_tmp] = 0.0;\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp] * localDW->b_a[localDW->nbitson];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 1] * localDW->b_a[localDW->nbitson + 4];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 2] * localDW->b_a[localDW->nbitson + 8];\r\n                localDW->aBuffer[localDW->c_tmp] += localDW->b_a\r\n                  [localDW->c_tmp_tmp + 3] * localDW->b_a[localDW->nbitson + 12];\r\n              }\r\n            }\r\n\r\n            memcpy(&localDW->b_a[0], &localDW->aBuffer[0], sizeof(real_T) << 4U);\r\n          }\r\n        } while (exitg1 == 0);\r\n\r\n        if (b < 0.0) {\r\n          memcpy(&localDW->b_a[0], &c[0], sizeof(real_T) << 4);\r\n          inv(localDW->b_a, c, localDW);\r\n        }\r\n      } else {\r\n        for (localDW->nbitson = 0; localDW->nbitson < 16; localDW->nbitson++) {\r\n          c[localDW->nbitson] = (rtNaN);\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    for (localDW->nbitson = 0; localDW->nbitson < 16; localDW->nbitson++) {\r\n      c[localDW->nbitson] = (rtNaN);\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic real_T log2_p(real_T x)\r\n{\r\n  real_T f;\r\n  real_T t;\r\n  int32_T inte;\r\n  if (x == 0.0) {\r\n    f = (rtMinusInf);\r\n  } else if (x < 0.0) {\r\n    f = (rtNaN);\r\n  } else if ((!rtIsInf(x)) && (!rtIsNaN(x))) {\r\n    t = frexp(x, &inte);\r\n    if (t == 0.5) {\r\n      f = (real_T)inte - 1.0;\r\n    } else if ((inte == 1) && (t < 0.75)) {\r\n      f = log(2.0 * t) / 0.69314718055994529;\r\n    } else {\r\n      f = log(t) / 0.69314718055994529 + (real_T)inte;\r\n    }\r\n  } else {\r\n    f = x;\r\n  }\r\n\r\n  return f;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void padeApproximation(const real_T A[16], const real_T A2[16], const\r\n  real_T A4[16], const real_T A6[16], int32_T m, real_T F[16], DW_VandD *localDW)\r\n{\r\n  int32_T A6_tmp;\r\n  int32_T A6_tmp_0;\r\n  int32_T e_k;\r\n  int32_T ip;\r\n  switch (m) {\r\n   case 3:\r\n    memcpy(&F[0], &A2[0], sizeof(real_T) << 4U);\r\n    F[0] += 60.0;\r\n    F[5] += 60.0;\r\n    F[10] += 60.0;\r\n    F[15] += 60.0;\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = e_k << 2;\r\n        A6_tmp_0 = ip + A6_tmp;\r\n        localDW->A6_g[A6_tmp_0] = 0.0;\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp] * A[ip];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 1] * A[ip + 4];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 2] * A[ip + 8];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 3] * A[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = localDW->A6_g[e_k];\r\n      localDW->V[e_k] = 12.0 * A2[e_k];\r\n    }\r\n\r\n    localDW->d_n = 120.0;\r\n    break;\r\n\r\n   case 5:\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = 420.0 * A2[e_k] + A4[e_k];\r\n    }\r\n\r\n    F[0] += 15120.0;\r\n    F[5] += 15120.0;\r\n    F[10] += 15120.0;\r\n    F[15] += 15120.0;\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = e_k << 2;\r\n        A6_tmp_0 = ip + A6_tmp;\r\n        localDW->A6_g[A6_tmp_0] = 0.0;\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp] * A[ip];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 1] * A[ip + 4];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 2] * A[ip + 8];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 3] * A[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = localDW->A6_g[e_k];\r\n      localDW->V[e_k] = 30.0 * A4[e_k] + 3360.0 * A2[e_k];\r\n    }\r\n\r\n    localDW->d_n = 30240.0;\r\n    break;\r\n\r\n   case 7:\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = (1512.0 * A4[e_k] + A6[e_k]) + 277200.0 * A2[e_k];\r\n    }\r\n\r\n    F[0] += 8.64864E+6;\r\n    F[5] += 8.64864E+6;\r\n    F[10] += 8.64864E+6;\r\n    F[15] += 8.64864E+6;\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = e_k << 2;\r\n        A6_tmp_0 = ip + A6_tmp;\r\n        localDW->A6_g[A6_tmp_0] = 0.0;\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp] * A[ip];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 1] * A[ip + 4];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 2] * A[ip + 8];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 3] * A[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = localDW->A6_g[e_k];\r\n      localDW->V[e_k] = (56.0 * A6[e_k] + 25200.0 * A4[e_k]) + 1.99584E+6 *\r\n        A2[e_k];\r\n    }\r\n\r\n    localDW->d_n = 1.729728E+7;\r\n    break;\r\n\r\n   case 9:\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp_0 = e_k << 2;\r\n        A6_tmp = ip + A6_tmp_0;\r\n        localDW->V[A6_tmp] = 0.0;\r\n        localDW->V[A6_tmp] += A2[A6_tmp_0] * A6[ip];\r\n        localDW->V[A6_tmp] += A2[A6_tmp_0 + 1] * A6[ip + 4];\r\n        localDW->V[A6_tmp] += A2[A6_tmp_0 + 2] * A6[ip + 8];\r\n        localDW->V[A6_tmp] += A2[A6_tmp_0 + 3] * A6[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = ((3960.0 * A6[e_k] + localDW->V[e_k]) + 2.16216E+6 * A4[e_k]) +\r\n        3.027024E+8 * A2[e_k];\r\n    }\r\n\r\n    F[0] += 8.8216128E+9;\r\n    F[5] += 8.8216128E+9;\r\n    F[10] += 8.8216128E+9;\r\n    F[15] += 8.8216128E+9;\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = e_k << 2;\r\n        A6_tmp_0 = ip + A6_tmp;\r\n        localDW->A6_g[A6_tmp_0] = 0.0;\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp] * A[ip];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 1] * A[ip + 4];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 2] * A[ip + 8];\r\n        localDW->A6_g[A6_tmp_0] += F[A6_tmp + 3] * A[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      F[e_k] = localDW->A6_g[e_k];\r\n      localDW->V[e_k] = ((90.0 * localDW->V[e_k] + 110880.0 * A6[e_k]) +\r\n                         3.027024E+7 * A4[e_k]) + 2.0756736E+9 * A2[e_k];\r\n    }\r\n\r\n    localDW->d_n = 1.76432256E+10;\r\n    break;\r\n\r\n   default:\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      localDW->d_n = A2[e_k];\r\n      localDW->A4_l = A4[e_k];\r\n      localDW->A6_p = A6[e_k];\r\n      F[e_k] = (3.352212864E+10 * localDW->A6_p + 1.05594705216E+13 *\r\n                localDW->A4_l) + 1.1873537964288E+15 * localDW->d_n;\r\n      localDW->V[e_k] = (16380.0 * localDW->A4_l + localDW->A6_p) + 4.08408E+7 *\r\n        localDW->d_n;\r\n    }\r\n\r\n    F[0] += 3.238237626624E+16;\r\n    F[5] += 3.238237626624E+16;\r\n    F[10] += 3.238237626624E+16;\r\n    F[15] += 3.238237626624E+16;\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = ip << 2;\r\n        A6_tmp_0 = A6_tmp + e_k;\r\n        localDW->A6_g[A6_tmp_0] = (((localDW->V[A6_tmp + 1] * A6[e_k + 4] +\r\n          localDW->V[A6_tmp] * A6[e_k]) + localDW->V[A6_tmp + 2] * A6[e_k + 8])\r\n          + localDW->V[A6_tmp + 3] * A6[e_k + 12]) + F[A6_tmp_0];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp_0 = e_k << 2;\r\n        A6_tmp = ip + A6_tmp_0;\r\n        F[A6_tmp] = 0.0;\r\n        F[A6_tmp] += localDW->A6_g[A6_tmp_0] * A[ip];\r\n        F[A6_tmp] += localDW->A6_g[A6_tmp_0 + 1] * A[ip + 4];\r\n        F[A6_tmp] += localDW->A6_g[A6_tmp_0 + 2] * A[ip + 8];\r\n        F[A6_tmp] += localDW->A6_g[A6_tmp_0 + 3] * A[ip + 12];\r\n      }\r\n    }\r\n\r\n    for (e_k = 0; e_k < 16; e_k++) {\r\n      localDW->A6_g[e_k] = (182.0 * A6[e_k] + 960960.0 * A4[e_k]) +\r\n        1.32324192E+9 * A2[e_k];\r\n    }\r\n\r\n    for (e_k = 0; e_k < 4; e_k++) {\r\n      for (ip = 0; ip < 4; ip++) {\r\n        A6_tmp = ip << 2;\r\n        A6_tmp_0 = A6_tmp + e_k;\r\n        localDW->V[A6_tmp_0] = (((((localDW->A6_g[A6_tmp + 1] * A6[e_k + 4] +\r\n          localDW->A6_g[A6_tmp] * A6[e_k]) + localDW->A6_g[A6_tmp + 2] * A6[e_k\r\n          + 8]) + localDW->A6_g[A6_tmp + 3] * A6[e_k + 12]) + A6[A6_tmp_0] *\r\n          6.704425728E+11) + A4[A6_tmp_0] * 1.29060195264E+14) + A2[A6_tmp_0] *\r\n          7.7717703038976E+15;\r\n      }\r\n    }\r\n\r\n    localDW->d_n = 6.476475253248E+16;\r\n    break;\r\n  }\r\n\r\n  localDW->V[0] += localDW->d_n;\r\n  localDW->V[5] += localDW->d_n;\r\n  localDW->V[10] += localDW->d_n;\r\n  localDW->V[15] += localDW->d_n;\r\n  for (e_k = 0; e_k < 16; e_k++) {\r\n    localDW->d_n = F[e_k];\r\n    localDW->V[e_k] -= localDW->d_n;\r\n    F[e_k] = 2.0 * localDW->d_n;\r\n  }\r\n\r\n  xzgetrf(localDW->V, localDW->ipiv_b, &e_k, localDW);\r\n  for (e_k = 0; e_k < 3; e_k++) {\r\n    ip = localDW->ipiv_b[e_k];\r\n    if (e_k + 1 != ip) {\r\n      localDW->d_n = F[e_k];\r\n      F[e_k] = F[ip - 1];\r\n      F[ip - 1] = localDW->d_n;\r\n      localDW->d_n = F[e_k + 4];\r\n      F[e_k + 4] = F[ip + 3];\r\n      F[ip + 3] = localDW->d_n;\r\n      localDW->d_n = F[e_k + 8];\r\n      F[e_k + 8] = F[ip + 7];\r\n      F[ip + 7] = localDW->d_n;\r\n      localDW->d_n = F[e_k + 12];\r\n      F[e_k + 12] = F[ip + 11];\r\n      F[ip + 11] = localDW->d_n;\r\n    }\r\n  }\r\n\r\n  for (e_k = 0; e_k < 4; e_k++) {\r\n    ip = e_k << 2;\r\n    if (F[ip] != 0.0) {\r\n      for (A6_tmp_0 = 2; A6_tmp_0 < 5; A6_tmp_0++) {\r\n        A6_tmp = (A6_tmp_0 + ip) - 1;\r\n        F[A6_tmp] -= localDW->V[A6_tmp_0 - 1] * F[ip];\r\n      }\r\n    }\r\n\r\n    if (F[ip + 1] != 0.0) {\r\n      for (A6_tmp_0 = 3; A6_tmp_0 < 5; A6_tmp_0++) {\r\n        A6_tmp = (A6_tmp_0 + ip) - 1;\r\n        F[A6_tmp] -= F[ip + 1] * localDW->V[A6_tmp_0 + 3];\r\n      }\r\n    }\r\n\r\n    localDW->d_n = F[ip + 2];\r\n    if (localDW->d_n != 0.0) {\r\n      F[ip + 3] -= localDW->d_n * localDW->V[11];\r\n    }\r\n  }\r\n\r\n  xtrsm(localDW->V, F);\r\n  F[0]++;\r\n  F[5]++;\r\n  F[10]++;\r\n  F[15]++;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void recomputeBlockDiag(const real_T A[16], real_T F[16], const int32_T\r\n  blockFormat[3])\r\n{\r\n  real_T avg;\r\n  real_T expa11;\r\n  real_T expa22;\r\n  real_T u1;\r\n  switch (blockFormat[0]) {\r\n   case 0:\r\n    break;\r\n\r\n   case 1:\r\n    expa11 = exp(A[0]);\r\n    expa22 = exp(A[5]);\r\n    avg = (A[0] + A[5]) / 2.0;\r\n    u1 = fabs(A[0] - A[5]) / 2.0;\r\n    if ((avg >= u1) || rtIsNaN(u1)) {\r\n      u1 = avg;\r\n    }\r\n\r\n    if (u1 < 709.782712893384) {\r\n      u1 = (A[5] - A[0]) / 2.0;\r\n      if (u1 == 0.0) {\r\n        u1 = 1.0;\r\n      } else {\r\n        u1 = sinh(u1) / u1;\r\n      }\r\n\r\n      avg = A[4] * exp(avg) * u1;\r\n    } else {\r\n      avg = (expa22 - expa11) * A[4] / (A[5] - A[0]);\r\n    }\r\n\r\n    F[0] = expa11;\r\n    F[4] = avg;\r\n    F[5] = expa22;\r\n    break;\r\n\r\n   case 2:\r\n    expa11 = sqrt(fabs(A[1] * A[4]));\r\n    expa22 = exp(A[0]);\r\n    if (expa11 == 0.0) {\r\n      avg = 1.0;\r\n    } else {\r\n      avg = sin(expa11) / expa11;\r\n    }\r\n\r\n    F[0] = expa22 * cos(expa11);\r\n    F[1] = expa22 * A[1] * avg;\r\n    F[4] = expa22 * A[4] * avg;\r\n    F[5] = F[0];\r\n    break;\r\n  }\r\n\r\n  switch (blockFormat[1]) {\r\n   case 0:\r\n    break;\r\n\r\n   case 1:\r\n    expa11 = exp(A[5]);\r\n    expa22 = exp(A[10]);\r\n    avg = (A[5] + A[10]) / 2.0;\r\n    u1 = fabs(A[5] - A[10]) / 2.0;\r\n    if ((avg >= u1) || rtIsNaN(u1)) {\r\n      u1 = avg;\r\n    }\r\n\r\n    if (u1 < 709.782712893384) {\r\n      u1 = (A[10] - A[5]) / 2.0;\r\n      if (u1 == 0.0) {\r\n        u1 = 1.0;\r\n      } else {\r\n        u1 = sinh(u1) / u1;\r\n      }\r\n\r\n      avg = A[9] * exp(avg) * u1;\r\n    } else {\r\n      avg = (expa22 - expa11) * A[9] / (A[10] - A[5]);\r\n    }\r\n\r\n    F[5] = expa11;\r\n    F[9] = avg;\r\n    F[10] = expa22;\r\n    break;\r\n\r\n   case 2:\r\n    expa11 = sqrt(fabs(A[6] * A[9]));\r\n    expa22 = exp(A[5]);\r\n    if (expa11 == 0.0) {\r\n      avg = 1.0;\r\n    } else {\r\n      avg = sin(expa11) / expa11;\r\n    }\r\n\r\n    F[5] = expa22 * cos(expa11);\r\n    F[6] = expa22 * A[6] * avg;\r\n    F[9] = expa22 * A[9] * avg;\r\n    F[10] = F[5];\r\n    break;\r\n  }\r\n\r\n  switch (blockFormat[2]) {\r\n   case 0:\r\n    break;\r\n\r\n   case 1:\r\n    expa11 = exp(A[10]);\r\n    expa22 = exp(A[15]);\r\n    avg = (A[10] + A[15]) / 2.0;\r\n    u1 = fabs(A[10] - A[15]) / 2.0;\r\n    if ((avg >= u1) || rtIsNaN(u1)) {\r\n      u1 = avg;\r\n    }\r\n\r\n    if (u1 < 709.782712893384) {\r\n      u1 = (A[15] - A[10]) / 2.0;\r\n      if (u1 == 0.0) {\r\n        u1 = 1.0;\r\n      } else {\r\n        u1 = sinh(u1) / u1;\r\n      }\r\n\r\n      avg = A[14] * exp(avg) * u1;\r\n    } else {\r\n      avg = (expa22 - expa11) * A[14] / (A[15] - A[10]);\r\n    }\r\n\r\n    F[10] = expa11;\r\n    F[14] = avg;\r\n    F[15] = expa22;\r\n    break;\r\n\r\n   case 2:\r\n    expa11 = sqrt(fabs(A[11] * A[14]));\r\n    expa22 = exp(A[10]);\r\n    if (expa11 == 0.0) {\r\n      avg = 1.0;\r\n    } else {\r\n      avg = sin(expa11) / expa11;\r\n    }\r\n\r\n    F[10] = expa22 * cos(expa11);\r\n    F[11] = expa22 * A[11] * avg;\r\n    F[14] = expa22 * A[14] * avg;\r\n    F[15] = F[10];\r\n    break;\r\n  }\r\n\r\n  if (blockFormat[2] == 0) {\r\n    F[15] = exp(A[15]);\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function' */\r\nstatic void expm(real_T A[16], real_T F[16], DW_VandD *localDW)\r\n{\r\n  int32_T exitg1;\r\n  boolean_T exitg2;\r\n  boolean_T guard1 = false;\r\n  boolean_T guard2 = false;\r\n  boolean_T guard3 = false;\r\n  boolean_T guard4 = false;\r\n  boolean_T recomputeDiags;\r\n  if (anyNonFinite(A)) {\r\n    for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n      F[localDW->e_i] = (rtNaN);\r\n    }\r\n  } else {\r\n    recomputeDiags = true;\r\n    localDW->e_j = 0;\r\n    exitg2 = false;\r\n    while ((!exitg2) && (localDW->e_j < 4)) {\r\n      localDW->e_i = 0;\r\n      do {\r\n        exitg1 = 0;\r\n        if (localDW->e_i < 4) {\r\n          if ((localDW->e_i != localDW->e_j) && (!(A[(localDW->e_j << 2) +\r\n                localDW->e_i] == 0.0))) {\r\n            recomputeDiags = false;\r\n            exitg1 = 1;\r\n          } else {\r\n            localDW->e_i++;\r\n          }\r\n        } else {\r\n          localDW->e_j++;\r\n          exitg1 = 2;\r\n        }\r\n      } while (exitg1 == 0);\r\n\r\n      if (exitg1 == 1) {\r\n        exitg2 = true;\r\n      }\r\n    }\r\n\r\n    if (recomputeDiags) {\r\n      memset(&F[0], 0, sizeof(real_T) << 4U);\r\n      F[0] = exp(A[0]);\r\n      F[5] = exp(A[5]);\r\n      F[10] = exp(A[10]);\r\n      F[15] = exp(A[15]);\r\n    } else {\r\n      recomputeDiags = true;\r\n      localDW->e_j = 0;\r\n      exitg2 = false;\r\n      while ((!exitg2) && (localDW->e_j < 4)) {\r\n        localDW->e_i = 0;\r\n        do {\r\n          exitg1 = 0;\r\n          if (localDW->e_i <= localDW->e_j) {\r\n            if (!(A[(localDW->e_j << 2) + localDW->e_i] == A[(localDW->e_i << 2)\r\n                  + localDW->e_j])) {\r\n              recomputeDiags = false;\r\n              exitg1 = 1;\r\n            } else {\r\n              localDW->e_i++;\r\n            }\r\n          } else {\r\n            localDW->e_j++;\r\n            exitg1 = 2;\r\n          }\r\n        } while (exitg1 == 0);\r\n\r\n        if (exitg1 == 1) {\r\n          exitg2 = true;\r\n        }\r\n      }\r\n\r\n      if (recomputeDiags) {\r\n        schur(A, localDW->Q, localDW->T, localDW);\r\n        for (localDW->b_s = 0; localDW->b_s < 4; localDW->b_s++) {\r\n          localDW->e_i = localDW->b_s << 2;\r\n          localDW->exptj = exp(localDW->T[localDW->e_i + localDW->b_s]);\r\n          localDW->A2[localDW->e_i] = localDW->Q[localDW->e_i] * localDW->exptj;\r\n          localDW->A2[localDW->e_i + 1] = localDW->Q[localDW->e_i + 1] *\r\n            localDW->exptj;\r\n          localDW->A2[localDW->e_i + 2] = localDW->Q[localDW->e_i + 2] *\r\n            localDW->exptj;\r\n          localDW->A2[localDW->e_i + 3] = localDW->Q[localDW->e_i + 3] *\r\n            localDW->exptj;\r\n        }\r\n\r\n        for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n          for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n            localDW->A2_tmp = (localDW->i << 2) + localDW->e_i;\r\n            F[localDW->A2_tmp] = 0.0;\r\n            F[localDW->A2_tmp] += localDW->A2[localDW->e_i] * localDW->Q\r\n              [localDW->i];\r\n            F[localDW->A2_tmp] += localDW->A2[localDW->e_i + 4] * localDW->\r\n              Q[localDW->i + 4];\r\n            F[localDW->A2_tmp] += localDW->A2[localDW->e_i + 8] * localDW->\r\n              Q[localDW->i + 8];\r\n            F[localDW->A2_tmp] += localDW->A2[localDW->e_i + 12] * localDW->\r\n              Q[localDW->i + 12];\r\n          }\r\n        }\r\n\r\n        for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n          localDW->A2_tmp = localDW->e_i << 2;\r\n          localDW->A2[localDW->A2_tmp] = (F[localDW->A2_tmp] + F[localDW->e_i]) /\r\n            2.0;\r\n          localDW->A2[localDW->A2_tmp + 1] = (F[localDW->A2_tmp + 1] + F\r\n            [localDW->e_i + 4]) / 2.0;\r\n          localDW->A2[localDW->A2_tmp + 2] = (F[localDW->A2_tmp + 2] + F\r\n            [localDW->e_i + 8]) / 2.0;\r\n          localDW->A2[localDW->A2_tmp + 3] = (F[localDW->A2_tmp + 3] + F\r\n            [localDW->e_i + 12]) / 2.0;\r\n        }\r\n\r\n        memcpy(&F[0], &localDW->A2[0], sizeof(real_T) << 4U);\r\n      } else {\r\n        recomputeDiags = true;\r\n        localDW->e_j = 3;\r\n        while (recomputeDiags && (localDW->e_j <= 4)) {\r\n          localDW->e_i = localDW->e_j;\r\n          while (recomputeDiags && (localDW->e_i <= 4)) {\r\n            recomputeDiags = (A[(((localDW->e_j - 3) << 2) + localDW->e_i) - 1] ==\r\n                              0.0);\r\n            localDW->e_i++;\r\n          }\r\n\r\n          localDW->e_j++;\r\n        }\r\n\r\n        if (recomputeDiags) {\r\n          localDW->e_j = 1;\r\n          exitg2 = false;\r\n          while ((!exitg2) && (localDW->e_j - 1 < 3)) {\r\n            localDW->e_i = ((localDW->e_j - 1) << 2) + localDW->e_j;\r\n            localDW->exptj = A[localDW->e_i];\r\n            if (localDW->exptj != 0.0) {\r\n              if ((localDW->e_j != 3) && (A[((localDW->e_j << 2) + localDW->e_j)\r\n                   + 1] != 0.0)) {\r\n                recomputeDiags = false;\r\n                exitg2 = true;\r\n              } else {\r\n                localDW->i = (localDW->e_j << 2) + localDW->e_j;\r\n                if (A[localDW->e_i - 1] != A[localDW->i]) {\r\n                  recomputeDiags = false;\r\n                  exitg2 = true;\r\n                } else {\r\n                  localDW->d6 = A[localDW->i - 1];\r\n                  if (!rtIsNaN(localDW->exptj)) {\r\n                    if (localDW->exptj < 0.0) {\r\n                      localDW->exptj = -1.0;\r\n                    } else {\r\n                      localDW->exptj = (localDW->exptj > 0.0);\r\n                    }\r\n                  }\r\n\r\n                  if (!rtIsNaN(localDW->d6)) {\r\n                    if (localDW->d6 < 0.0) {\r\n                      localDW->d6 = -1.0;\r\n                    } else {\r\n                      localDW->d6 = (localDW->d6 > 0.0);\r\n                    }\r\n                  }\r\n\r\n                  if (localDW->exptj * localDW->d6 != -1.0) {\r\n                    recomputeDiags = false;\r\n                    exitg2 = true;\r\n                  } else {\r\n                    localDW->e_j++;\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              localDW->e_j++;\r\n            }\r\n          }\r\n        }\r\n\r\n        localDW->exptj = 0.0;\r\n        for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n          for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n            localDW->e_j = localDW->e_i << 2;\r\n            localDW->A2_tmp = localDW->i + localDW->e_j;\r\n            localDW->A2[localDW->A2_tmp] = 0.0;\r\n            localDW->A2[localDW->A2_tmp] += A[localDW->e_j] * A[localDW->i];\r\n            localDW->A2[localDW->A2_tmp] += A[localDW->e_j + 1] * A[localDW->i +\r\n              4];\r\n            localDW->A2[localDW->A2_tmp] += A[localDW->e_j + 2] * A[localDW->i +\r\n              8];\r\n            localDW->A2[localDW->A2_tmp] += A[localDW->e_j + 3] * A[localDW->i +\r\n              12];\r\n          }\r\n        }\r\n\r\n        for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n          for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n            localDW->e_j = localDW->i << 2;\r\n            localDW->A2_tmp = localDW->e_i + localDW->e_j;\r\n            localDW->A4[localDW->A2_tmp] = 0.0;\r\n            localDW->A4[localDW->A2_tmp] += localDW->A2[localDW->e_j] *\r\n              localDW->A2[localDW->e_i];\r\n            localDW->A4[localDW->A2_tmp] += localDW->A2[localDW->e_j + 1] *\r\n              localDW->A2[localDW->e_i + 4];\r\n            localDW->A4[localDW->A2_tmp] += localDW->A2[localDW->e_j + 2] *\r\n              localDW->A2[localDW->e_i + 8];\r\n            localDW->A4[localDW->A2_tmp] += localDW->A2[localDW->e_j + 3] *\r\n              localDW->A2[localDW->e_i + 12];\r\n          }\r\n\r\n          for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n            localDW->e_j = localDW->i << 2;\r\n            localDW->A2_tmp = localDW->e_i + localDW->e_j;\r\n            localDW->A6[localDW->A2_tmp] = 0.0;\r\n            localDW->A6[localDW->A2_tmp] += localDW->A2[localDW->e_j] *\r\n              localDW->A4[localDW->e_i];\r\n            localDW->A6[localDW->A2_tmp] += localDW->A2[localDW->e_j + 1] *\r\n              localDW->A4[localDW->e_i + 4];\r\n            localDW->A6[localDW->A2_tmp] += localDW->A2[localDW->e_j + 2] *\r\n              localDW->A4[localDW->e_i + 8];\r\n            localDW->A6[localDW->A2_tmp] += localDW->A2[localDW->e_j + 3] *\r\n              localDW->A4[localDW->e_i + 12];\r\n          }\r\n        }\r\n\r\n        localDW->d6 = rt_powd_snf(norm(localDW->A6), 0.16666666666666666);\r\n        localDW->eta1 = rt_powd_snf(norm(localDW->A4), 0.25);\r\n        if ((!(localDW->eta1 >= localDW->d6)) && (!rtIsNaN(localDW->d6))) {\r\n          localDW->eta1 = localDW->d6;\r\n        }\r\n\r\n        guard1 = false;\r\n        guard2 = false;\r\n        guard3 = false;\r\n        guard4 = false;\r\n        if (localDW->eta1 <= 0.01495585217958292) {\r\n          for (localDW->e_j = 0; localDW->e_j < 16; localDW->e_j++) {\r\n            localDW->dv[localDW->e_j] = 0.19285012468241128 * fabs(A\r\n              [localDW->e_j]);\r\n          }\r\n\r\n          mpower(localDW->dv, 7.0, localDW->Q, localDW);\r\n          localDW->b_varargin_1 = log2_p(norm(localDW->Q) / norm(A) * 2.0 /\r\n            2.2204460492503131E-16) / 6.0;\r\n          localDW->b_varargin_1 = ceil(localDW->b_varargin_1);\r\n          if (!(localDW->b_varargin_1 >= 0.0)) {\r\n            localDW->b_varargin_1 = 0.0;\r\n          }\r\n\r\n          if (localDW->b_varargin_1 == 0.0) {\r\n            localDW->b_s = 3;\r\n          } else {\r\n            guard4 = true;\r\n          }\r\n        } else {\r\n          guard4 = true;\r\n        }\r\n\r\n        if (guard4) {\r\n          if (localDW->eta1 <= 0.253939833006323) {\r\n            for (localDW->e_j = 0; localDW->e_j < 16; localDW->e_j++) {\r\n              localDW->dv[localDW->e_j] = 0.12321872304378752 * fabs(A\r\n                [localDW->e_j]);\r\n            }\r\n\r\n            mpower(localDW->dv, 11.0, localDW->Q, localDW);\r\n            localDW->eta1 = log2_p(norm(localDW->Q) / norm(A) * 2.0 /\r\n              2.2204460492503131E-16) / 10.0;\r\n            localDW->b_varargin_1 = ceil(localDW->eta1);\r\n            if (!(localDW->b_varargin_1 >= 0.0)) {\r\n              localDW->b_varargin_1 = 0.0;\r\n            }\r\n\r\n            if (localDW->b_varargin_1 == 0.0) {\r\n              localDW->b_s = 5;\r\n            } else {\r\n              guard3 = true;\r\n            }\r\n          } else {\r\n            guard3 = true;\r\n          }\r\n        }\r\n\r\n        if (guard3) {\r\n          mpower(localDW->A4, 2.0, localDW->Q, localDW);\r\n          localDW->eta1 = rt_powd_snf(norm(localDW->Q), 0.125);\r\n          if ((!(localDW->d6 >= localDW->eta1)) && (!rtIsNaN(localDW->eta1))) {\r\n            localDW->d6 = localDW->eta1;\r\n          }\r\n\r\n          if (localDW->d6 <= 0.95041789961629319) {\r\n            for (localDW->e_j = 0; localDW->e_j < 16; localDW->e_j++) {\r\n              localDW->dv[localDW->e_j] = 0.090475336558796943 * fabs(A\r\n                [localDW->e_j]);\r\n            }\r\n\r\n            mpower(localDW->dv, 15.0, localDW->Q, localDW);\r\n            localDW->b_varargin_1 = log2_p(norm(localDW->Q) / norm(A) * 2.0 /\r\n              2.2204460492503131E-16) / 14.0;\r\n            localDW->b_varargin_1 = ceil(localDW->b_varargin_1);\r\n            if (!(localDW->b_varargin_1 >= 0.0)) {\r\n              localDW->b_varargin_1 = 0.0;\r\n            }\r\n\r\n            if (localDW->b_varargin_1 == 0.0) {\r\n              localDW->b_s = 7;\r\n            } else {\r\n              guard2 = true;\r\n            }\r\n          } else {\r\n            guard2 = true;\r\n          }\r\n        }\r\n\r\n        if (guard2) {\r\n          if (localDW->d6 <= 2.097847961257068) {\r\n            for (localDW->e_j = 0; localDW->e_j < 16; localDW->e_j++) {\r\n              localDW->dv[localDW->e_j] = 0.071467735648795785 * fabs(A\r\n                [localDW->e_j]);\r\n            }\r\n\r\n            mpower(localDW->dv, 19.0, localDW->Q, localDW);\r\n            localDW->b_varargin_1 = log2_p(norm(localDW->Q) / norm(A) * 2.0 /\r\n              2.2204460492503131E-16) / 18.0;\r\n            localDW->b_varargin_1 = ceil(localDW->b_varargin_1);\r\n            if (!(localDW->b_varargin_1 >= 0.0)) {\r\n              localDW->b_varargin_1 = 0.0;\r\n            }\r\n\r\n            if (localDW->b_varargin_1 == 0.0) {\r\n              localDW->b_s = 9;\r\n            } else {\r\n              guard1 = true;\r\n            }\r\n          } else {\r\n            guard1 = true;\r\n          }\r\n        }\r\n\r\n        if (guard1) {\r\n          for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n            for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n              localDW->e_j = localDW->e_i << 2;\r\n              localDW->A2_tmp = localDW->i + localDW->e_j;\r\n              localDW->Q[localDW->A2_tmp] = 0.0;\r\n              localDW->Q[localDW->A2_tmp] += localDW->A6[localDW->e_j] *\r\n                localDW->A4[localDW->i];\r\n              localDW->Q[localDW->A2_tmp] += localDW->A6[localDW->e_j + 1] *\r\n                localDW->A4[localDW->i + 4];\r\n              localDW->Q[localDW->A2_tmp] += localDW->A6[localDW->e_j + 2] *\r\n                localDW->A4[localDW->i + 8];\r\n              localDW->Q[localDW->A2_tmp] += localDW->A6[localDW->e_j + 3] *\r\n                localDW->A4[localDW->i + 12];\r\n            }\r\n          }\r\n\r\n          localDW->exptj = rt_powd_snf(norm(localDW->Q), 0.1);\r\n          if ((localDW->eta1 >= localDW->exptj) || rtIsNaN(localDW->exptj)) {\r\n            localDW->exptj = localDW->eta1;\r\n          }\r\n\r\n          if ((localDW->d6 <= localDW->exptj) || rtIsNaN(localDW->exptj)) {\r\n            localDW->exptj = localDW->d6;\r\n          }\r\n\r\n          localDW->exptj = log2_p(localDW->exptj / 5.3719203511481517);\r\n          localDW->exptj = ceil(localDW->exptj);\r\n          if (!(localDW->exptj >= 0.0)) {\r\n            localDW->exptj = 0.0;\r\n          }\r\n\r\n          localDW->d6 = rt_powd_snf(2.0, localDW->exptj);\r\n          for (localDW->e_j = 0; localDW->e_j < 16; localDW->e_j++) {\r\n            localDW->eta1 = A[localDW->e_j] / localDW->d6;\r\n            localDW->dv[localDW->e_j] = 0.05031554467093536 * fabs(localDW->eta1);\r\n            localDW->T[localDW->e_j] = localDW->eta1;\r\n          }\r\n\r\n          mpower(localDW->dv, 27.0, localDW->Q, localDW);\r\n          localDW->d6 = log2_p(norm(localDW->Q) / norm(localDW->T) * 2.0 /\r\n                               2.2204460492503131E-16) / 26.0;\r\n          localDW->b_varargin_1 = ceil(localDW->d6);\r\n          if (!(localDW->b_varargin_1 >= 0.0)) {\r\n            localDW->b_varargin_1 = 0.0;\r\n          }\r\n\r\n          localDW->exptj += localDW->b_varargin_1;\r\n          if (rtIsInf(localDW->exptj)) {\r\n            localDW->d6 = norm(A) / 5.3719203511481517;\r\n            if ((!rtIsInf(localDW->d6)) && (!rtIsNaN(localDW->d6))) {\r\n              localDW->d6 = frexp(localDW->d6, &localDW->b_s);\r\n            } else {\r\n              localDW->b_s = 0;\r\n            }\r\n\r\n            localDW->exptj = localDW->b_s;\r\n            if (localDW->d6 == 0.5) {\r\n              localDW->exptj = (real_T)localDW->b_s - 1.0;\r\n            }\r\n          }\r\n\r\n          localDW->b_s = 13;\r\n        }\r\n\r\n        if (localDW->exptj != 0.0) {\r\n          localDW->d6 = rt_powd_snf(2.0, localDW->exptj);\r\n          for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n            A[localDW->e_i] /= localDW->d6;\r\n          }\r\n\r\n          localDW->d6 = rt_powd_snf(2.0, 2.0 * localDW->exptj);\r\n          for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n            localDW->A2[localDW->e_i] /= localDW->d6;\r\n          }\r\n\r\n          localDW->d6 = rt_powd_snf(2.0, 4.0 * localDW->exptj);\r\n          for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n            localDW->A4[localDW->e_i] /= localDW->d6;\r\n          }\r\n\r\n          localDW->d6 = rt_powd_snf(2.0, 6.0 * localDW->exptj);\r\n          for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n            localDW->A6[localDW->e_i] /= localDW->d6;\r\n          }\r\n        }\r\n\r\n        if (recomputeDiags) {\r\n          localDW->blockFormat[0] = 0;\r\n          localDW->blockFormat[1] = 0;\r\n          localDW->blockFormat[2] = 0;\r\n          localDW->e_j = 1;\r\n          while (localDW->e_j < 3) {\r\n            localDW->d6 = A[((localDW->e_j - 1) << 2) + localDW->e_j];\r\n            if (localDW->d6 != 0.0) {\r\n              localDW->blockFormat[localDW->e_j - 1] = 2;\r\n              localDW->blockFormat[localDW->e_j] = 0;\r\n              localDW->e_j += 2;\r\n            } else if ((localDW->d6 == 0.0) && (A[((localDW->e_j << 2) +\r\n                         localDW->e_j) + 1] == 0.0)) {\r\n              localDW->blockFormat[localDW->e_j - 1] = 1;\r\n              localDW->e_j++;\r\n            } else {\r\n              localDW->blockFormat[localDW->e_j - 1] = 0;\r\n              localDW->e_j++;\r\n            }\r\n          }\r\n\r\n          if (A[11] != 0.0) {\r\n            localDW->blockFormat[2] = 2;\r\n          } else {\r\n            switch (localDW->blockFormat[1]) {\r\n             case 0:\r\n              localDW->blockFormat[2] = 1;\r\n              break;\r\n\r\n             case 1:\r\n              localDW->blockFormat[2] = 1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        padeApproximation(A, localDW->A2, localDW->A4, localDW->A6, localDW->b_s,\r\n                          F, localDW);\r\n        if (recomputeDiags) {\r\n          recomputeBlockDiag(A, F, localDW->blockFormat);\r\n        }\r\n\r\n        localDW->b_s = 0;\r\n        while (localDW->b_s <= (int32_T)localDW->exptj - 1) {\r\n          for (localDW->e_i = 0; localDW->e_i < 4; localDW->e_i++) {\r\n            for (localDW->i = 0; localDW->i < 4; localDW->i++) {\r\n              localDW->e_j = localDW->i << 2;\r\n              localDW->A2_tmp = localDW->e_i + localDW->e_j;\r\n              localDW->A2[localDW->A2_tmp] = 0.0;\r\n              localDW->A2[localDW->A2_tmp] += F[localDW->e_j] * F[localDW->e_i];\r\n              localDW->A2[localDW->A2_tmp] += F[localDW->e_j + 1] * F\r\n                [localDW->e_i + 4];\r\n              localDW->A2[localDW->A2_tmp] += F[localDW->e_j + 2] * F\r\n                [localDW->e_i + 8];\r\n              localDW->A2[localDW->A2_tmp] += F[localDW->e_j + 3] * F\r\n                [localDW->e_i + 12];\r\n            }\r\n          }\r\n\r\n          memcpy(&F[0], &localDW->A2[0], sizeof(real_T) << 4U);\r\n          if (recomputeDiags) {\r\n            for (localDW->e_i = 0; localDW->e_i < 16; localDW->e_i++) {\r\n              A[localDW->e_i] *= 2.0;\r\n            }\r\n\r\n            recomputeBlockDiag(A, F, localDW->blockFormat);\r\n          }\r\n\r\n          localDW->b_s++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function1' */\r\nstatic real_T eml_rand_shr3cong(uint32_T state[2])\r\n{\r\n  real_T r;\r\n  real_T s;\r\n  real_T x;\r\n  real_T y;\r\n  int32_T j;\r\n  uint32_T icng;\r\n  uint32_T jsr;\r\n  uint32_T ui;\r\n  static const real_T b[65] = { 0.340945, 0.4573146, 0.5397793, 0.6062427,\r\n    0.6631691, 0.7136975, 0.7596125, 0.8020356, 0.8417227, 0.8792102, 0.9148948,\r\n    0.9490791, 0.9820005, 1.0138492, 1.044781, 1.0749254, 1.1043917, 1.1332738,\r\n    1.161653, 1.189601, 1.2171815, 1.2444516, 1.2714635, 1.298265, 1.3249008,\r\n    1.3514125, 1.3778399, 1.4042211, 1.4305929, 1.4569915, 1.4834527, 1.5100122,\r\n    1.5367061, 1.5635712, 1.5906454, 1.617968, 1.6455802, 1.6735255, 1.7018503,\r\n    1.7306045, 1.7598422, 1.7896223, 1.8200099, 1.851077, 1.8829044, 1.9155831,\r\n    1.9492166, 1.9839239, 2.0198431, 2.0571356, 2.095993, 2.136645, 2.1793713,\r\n    2.2245175, 2.2725186, 2.3239338, 2.3795008, 2.4402218, 2.5075117, 2.5834658,\r\n    2.6713916, 2.7769942, 2.7769942, 2.7769942, 2.7769942 };\r\n\r\n  icng = 69069U * state[0] + 1234567U;\r\n  jsr = state[1] << 13 ^ state[1];\r\n  jsr ^= jsr >> 17;\r\n  jsr ^= jsr << 5;\r\n  ui = icng + jsr;\r\n  j = (int32_T)((ui & 63U) + 1U);\r\n  r = (real_T)(int32_T)ui * 4.6566128730773926E-10 * b[j];\r\n  x = fabs(r);\r\n  y = b[j - 1];\r\n  if (!(x <= y)) {\r\n    x = (x - y) / (b[j] - y);\r\n    icng = 69069U * icng + 1234567U;\r\n    jsr ^= jsr << 13;\r\n    jsr ^= jsr >> 17;\r\n    jsr ^= jsr << 5;\r\n    y = (real_T)(int32_T)(icng + jsr) * 2.328306436538696E-10 + 0.5;\r\n    s = x + y;\r\n    if (s > 1.301198) {\r\n      if (r < 0.0) {\r\n        r = 0.4878992 * x - 0.4878992;\r\n      } else {\r\n        r = 0.4878992 - 0.4878992 * x;\r\n      }\r\n    } else if (!(s <= 0.9689279)) {\r\n      x = 0.4878992 - 0.4878992 * x;\r\n      if (y > 12.67706 - exp(-0.5 * x * x) * 12.37586) {\r\n        if (r < 0.0) {\r\n          r = -x;\r\n        } else {\r\n          r = x;\r\n        }\r\n      } else if (!(exp(-0.5 * b[j] * b[j]) + y * 0.01958303 / b[j] <= exp(-0.5 *\r\n        r * r))) {\r\n        do {\r\n          icng = 69069U * icng + 1234567U;\r\n          jsr ^= jsr << 13;\r\n          jsr ^= jsr >> 17;\r\n          jsr ^= jsr << 5;\r\n          x = log((real_T)(int32_T)(icng + jsr) * 2.328306436538696E-10 + 0.5) /\r\n            2.776994;\r\n          icng = 69069U * icng + 1234567U;\r\n          jsr ^= jsr << 13;\r\n          jsr ^= jsr >> 17;\r\n          jsr ^= jsr << 5;\r\n        } while (!(log((real_T)(int32_T)(icng + jsr) * 2.328306436538696E-10 +\r\n                       0.5) * -2.0 > x * x));\r\n\r\n        if (r < 0.0) {\r\n          r = x - 2.776994;\r\n        } else {\r\n          r = 2.776994 - x;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  state[0] = icng;\r\n  state[1] = jsr;\r\n  return r;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function1' */\r\nstatic void genrandu(uint32_T s, uint32_T *state, real_T *r)\r\n{\r\n  int32_T hi;\r\n  uint32_T a;\r\n  uint32_T b;\r\n  hi = (int32_T)(s / 127773U);\r\n  a = (s - hi * 127773U) * 16807U;\r\n  b = 2836U * hi;\r\n  if (a < b) {\r\n    *state = ~(b - a) & 2147483647U;\r\n  } else {\r\n    *state = a - b;\r\n  }\r\n\r\n  *r = (real_T)*state * 4.6566128752457969E-10;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function1' */\r\nstatic void genrand_uint32_vector(uint32_T mt[625], uint32_T u[2])\r\n{\r\n  int32_T j;\r\n  int32_T kk;\r\n  uint32_T mti;\r\n  uint32_T y;\r\n  for (j = 0; j < 2; j++) {\r\n    mti = mt[624] + 1U;\r\n    if (mt[624] + 1U >= 625U) {\r\n      for (kk = 0; kk < 227; kk++) {\r\n        mti = (mt[kk + 1] & 2147483647U) | (mt[kk] & 2147483648U);\r\n        if ((mti & 1U) == 0U) {\r\n          mti >>= 1U;\r\n        } else {\r\n          mti = mti >> 1U ^ 2567483615U;\r\n        }\r\n\r\n        mt[kk] = mt[kk + 397] ^ mti;\r\n      }\r\n\r\n      for (kk = 0; kk < 396; kk++) {\r\n        mti = (mt[kk + 227] & 2147483648U) | (mt[kk + 228] & 2147483647U);\r\n        if ((mti & 1U) == 0U) {\r\n          mti >>= 1U;\r\n        } else {\r\n          mti = mti >> 1U ^ 2567483615U;\r\n        }\r\n\r\n        mt[kk + 227] = mt[kk] ^ mti;\r\n      }\r\n\r\n      mti = (mt[623] & 2147483648U) | (mt[0] & 2147483647U);\r\n      if ((mti & 1U) == 0U) {\r\n        mti >>= 1U;\r\n      } else {\r\n        mti = mti >> 1U ^ 2567483615U;\r\n      }\r\n\r\n      mt[623] = mt[396] ^ mti;\r\n      mti = 1U;\r\n    }\r\n\r\n    y = mt[(int32_T)mti - 1];\r\n    mt[624] = mti;\r\n    y ^= y >> 11U;\r\n    y ^= y << 7U & 2636928640U;\r\n    y ^= y << 15U & 4022730752U;\r\n    u[j] = y >> 18U ^ y;\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function1' */\r\nstatic real_T genrandu_d(uint32_T mt[625])\r\n{\r\n  real_T r;\r\n  int32_T exitg1;\r\n  int32_T k;\r\n  uint32_T u[2];\r\n  uint32_T b_r;\r\n  boolean_T b_isvalid;\r\n  boolean_T exitg2;\r\n\r\n  /* ========================= COPYRIGHT NOTICE ============================ */\r\n  /*  This is a uniform (0,1) pseudorandom number generator based on:        */\r\n  /*                                                                         */\r\n  /*  A C-program for MT19937, with initialization improved 2002/1/26.       */\r\n  /*  Coded by Takuji Nishimura and Makoto Matsumoto.                        */\r\n  /*                                                                         */\r\n  /*  Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,      */\r\n  /*  All rights reserved.                                                   */\r\n  /*                                                                         */\r\n  /*  Redistribution and use in source and binary forms, with or without     */\r\n  /*  modification, are permitted provided that the following conditions     */\r\n  /*  are met:                                                               */\r\n  /*                                                                         */\r\n  /*    1. Redistributions of source code must retain the above copyright    */\r\n  /*       notice, this list of conditions and the following disclaimer.     */\r\n  /*                                                                         */\r\n  /*    2. Redistributions in binary form must reproduce the above copyright */\r\n  /*       notice, this list of conditions and the following disclaimer      */\r\n  /*       in the documentation and/or other materials provided with the     */\r\n  /*       distribution.                                                     */\r\n  /*                                                                         */\r\n  /*    3. The names of its contributors may not be used to endorse or       */\r\n  /*       promote products derived from this software without specific      */\r\n  /*       prior written permission.                                         */\r\n  /*                                                                         */\r\n  /*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    */\r\n  /*  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      */\r\n  /*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  */\r\n  /*  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT  */\r\n  /*  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  */\r\n  /*  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       */\r\n  /*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  */\r\n  /*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  */\r\n  /*  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    */\r\n  /*  (INCLUDING  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE */\r\n  /*  OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */\r\n  /*                                                                         */\r\n  /* =============================   END   ================================= */\r\n  do {\r\n    exitg1 = 0;\r\n    genrand_uint32_vector(mt, u);\r\n    r = ((real_T)(u[0] >> 5U) * 6.7108864E+7 + (real_T)(u[1] >> 6U)) *\r\n      1.1102230246251565E-16;\r\n    if (r == 0.0) {\r\n      b_isvalid = ((mt[624] >= 1U) && (mt[624] < 625U));\r\n      if (b_isvalid) {\r\n        b_isvalid = false;\r\n        k = 1;\r\n        exitg2 = false;\r\n        while ((!exitg2) && (k < 625)) {\r\n          if (mt[k - 1] == 0U) {\r\n            k++;\r\n          } else {\r\n            b_isvalid = true;\r\n            exitg2 = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!b_isvalid) {\r\n        b_r = 5489U;\r\n        mt[0] = 5489U;\r\n        for (k = 0; k < 623; k++) {\r\n          b_r = ((b_r >> 30U ^ b_r) * 1812433253U + k) + 1U;\r\n          mt[k + 1] = b_r;\r\n        }\r\n\r\n        mt[624] = 624U;\r\n      }\r\n    } else {\r\n      exitg1 = 1;\r\n    }\r\n  } while (exitg1 == 0);\r\n\r\n  return r;\r\n}\r\n\r\n/* Function for MATLAB Function: '<S113>/MATLAB Function1' */\r\nstatic real_T randn(DW_VandD *localDW)\r\n{\r\n  real_T r;\r\n  int32_T i;\r\n  uint32_T c_state;\r\n  uint32_T d_state;\r\n  static const real_T b[257] = { 0.0, 0.215241895984875, 0.286174591792068,\r\n    0.335737519214422, 0.375121332878378, 0.408389134611989, 0.43751840220787,\r\n    0.46363433679088, 0.487443966139235, 0.50942332960209, 0.529909720661557,\r\n    0.549151702327164, 0.567338257053817, 0.584616766106378, 0.601104617755991,\r\n    0.61689699000775, 0.63207223638606, 0.646695714894993, 0.660822574244419,\r\n    0.674499822837293, 0.687767892795788, 0.700661841106814, 0.713212285190975,\r\n    0.725446140909999, 0.737387211434295, 0.749056662017815, 0.760473406430107,\r\n    0.771654424224568, 0.782615023307232, 0.793369058840623, 0.80392911698997,\r\n    0.814306670135215, 0.824512208752291, 0.834555354086381, 0.844444954909153,\r\n    0.854189171008163, 0.863795545553308, 0.87327106808886, 0.882622229585165,\r\n    0.891855070732941, 0.900975224461221, 0.909987953496718, 0.91889818364959,\r\n    0.927710533401999, 0.936429340286575, 0.945058684468165, 0.953602409881086,\r\n    0.96206414322304, 0.970447311064224, 0.978755155294224, 0.986990747099062,\r\n    0.99515699963509, 1.00325667954467, 1.01129241744, 1.01926671746548,\r\n    1.02718196603564, 1.03504043983344, 1.04284431314415, 1.05059566459093,\r\n    1.05829648333067, 1.06594867476212, 1.07355406579244, 1.0811144097034,\r\n    1.08863139065398, 1.09610662785202, 1.10354167942464, 1.11093804601357,\r\n    1.11829717411934, 1.12562045921553, 1.13290924865253, 1.14016484436815,\r\n    1.14738850542085, 1.15458145035993, 1.16174485944561, 1.16887987673083,\r\n    1.17598761201545, 1.18306914268269, 1.19012551542669, 1.19715774787944,\r\n    1.20416683014438, 1.2111537262437, 1.21811937548548, 1.22506469375653,\r\n    1.23199057474614, 1.23889789110569, 1.24578749554863, 1.2526602218949,\r\n    1.25951688606371, 1.26635828701823, 1.27318520766536, 1.27999841571382,\r\n    1.28679866449324, 1.29358669373695, 1.30036323033084, 1.30712898903073,\r\n    1.31388467315022, 1.32063097522106, 1.32736857762793, 1.33409815321936,\r\n    1.3408203658964, 1.34753587118059, 1.35424531676263, 1.36094934303328,\r\n    1.36764858359748, 1.37434366577317, 1.38103521107586, 1.38772383568998,\r\n    1.39441015092814, 1.40109476367925, 1.4077782768464, 1.41446128977547,\r\n    1.42114439867531, 1.42782819703026, 1.43451327600589, 1.44120022484872,\r\n    1.44788963128058, 1.45458208188841, 1.46127816251028, 1.46797845861808,\r\n    1.47468355569786, 1.48139403962819, 1.48811049705745, 1.49483351578049,\r\n    1.50156368511546, 1.50830159628131, 1.51504784277671, 1.521803020761,\r\n    1.52856772943771, 1.53534257144151, 1.542128153229, 1.54892508547417,\r\n    1.55573398346918, 1.56255546753104, 1.56939016341512, 1.57623870273591,\r\n    1.58310172339603, 1.58997987002419, 1.59687379442279, 1.60378415602609,\r\n    1.61071162236983, 1.61765686957301, 1.62462058283303, 1.63160345693487,\r\n    1.63860619677555, 1.64562951790478, 1.65267414708306, 1.65974082285818,\r\n    1.66683029616166, 1.67394333092612, 1.68108070472517, 1.68824320943719,\r\n    1.69543165193456, 1.70264685479992, 1.7098896570713, 1.71716091501782,\r\n    1.72446150294804, 1.73179231405296, 1.73915426128591, 1.74654827828172,\r\n    1.75397532031767, 1.76143636531891, 1.76893241491127, 1.77646449552452,\r\n    1.78403365954944, 1.79164098655216, 1.79928758454972, 1.80697459135082,\r\n    1.81470317596628, 1.82247454009388, 1.83028991968276, 1.83815058658281,\r\n    1.84605785028518, 1.8540130597602, 1.86201760539967, 1.87007292107127,\r\n    1.878180486293, 1.88634182853678, 1.8945585256707, 1.90283220855043,\r\n    1.91116456377125, 1.91955733659319, 1.92801233405266, 1.93653142827569,\r\n    1.94511656000868, 1.95376974238465, 1.96249306494436, 1.97128869793366,\r\n    1.98015889690048, 1.98910600761744, 1.99813247135842, 2.00724083056053,\r\n    2.0164337349062, 2.02571394786385, 2.03508435372962, 2.04454796521753,\r\n    2.05410793165065, 2.06376754781173, 2.07353026351874, 2.0833996939983,\r\n    2.09337963113879, 2.10347405571488, 2.11368715068665, 2.12402331568952,\r\n    2.13448718284602, 2.14508363404789, 2.15581781987674, 2.16669518035431,\r\n    2.17772146774029, 2.18890277162636, 2.20024554661128, 2.21175664288416,\r\n    2.22344334009251, 2.23531338492992, 2.24737503294739, 2.25963709517379,\r\n    2.27210899022838, 2.28480080272449, 2.29772334890286, 2.31088825060137,\r\n    2.32430801887113, 2.33799614879653, 2.35196722737914, 2.36623705671729,\r\n    2.38082279517208, 2.39574311978193, 2.41101841390112, 2.42667098493715,\r\n    2.44272531820036, 2.4592083743347, 2.47614993967052, 2.49358304127105,\r\n    2.51154444162669, 2.53007523215985, 2.54922155032478, 2.56903545268184,\r\n    2.58957598670829, 2.61091051848882, 2.63311639363158, 2.65628303757674,\r\n    2.68051464328574, 2.70593365612306, 2.73268535904401, 2.76094400527999,\r\n    2.79092117400193, 2.82287739682644, 2.85713873087322, 2.89412105361341,\r\n    2.93436686720889, 2.97860327988184, 3.02783779176959, 3.08352613200214,\r\n    3.147889289518, 3.2245750520478, 3.32024473383983, 3.44927829856143,\r\n    3.65415288536101, 3.91075795952492 };\r\n\r\n  static const real_T c[257] = { 1.0, 0.977101701267673, 0.959879091800108,\r\n    0.9451989534423, 0.932060075959231, 0.919991505039348, 0.908726440052131,\r\n    0.898095921898344, 0.887984660755834, 0.878309655808918, 0.869008688036857,\r\n    0.860033621196332, 0.851346258458678, 0.842915653112205, 0.834716292986884,\r\n    0.826726833946222, 0.818929191603703, 0.811307874312656, 0.803849483170964,\r\n    0.796542330422959, 0.789376143566025, 0.782341832654803, 0.775431304981187,\r\n    0.768637315798486, 0.761953346836795, 0.755373506507096, 0.748892447219157,\r\n    0.742505296340151, 0.736207598126863, 0.729995264561476, 0.72386453346863,\r\n    0.717811932630722, 0.711834248878248, 0.705928501332754, 0.700091918136512,\r\n    0.694321916126117, 0.688616083004672, 0.682972161644995, 0.677388036218774,\r\n    0.671861719897082, 0.66639134390875, 0.660975147776663, 0.655611470579697,\r\n    0.650298743110817, 0.645035480820822, 0.639820277453057, 0.634651799287624,\r\n    0.629528779924837, 0.624450015547027, 0.619414360605834, 0.614420723888914,\r\n    0.609468064925773, 0.604555390697468, 0.599681752619125, 0.594846243767987,\r\n    0.590047996332826, 0.585286179263371, 0.580559996100791, 0.575868682972354,\r\n    0.571211506735253, 0.566587763256165, 0.561996775814525, 0.557437893618766,\r\n    0.552910490425833, 0.548413963255266, 0.543947731190026, 0.539511234256952,\r\n    0.535103932380458, 0.530725304403662, 0.526374847171684, 0.522052074672322,\r\n    0.517756517229756, 0.513487720747327, 0.509245245995748, 0.505028667943468,\r\n    0.500837575126149, 0.49667156905249, 0.492530263643869, 0.488413284705458,\r\n    0.484320269426683, 0.480250865909047, 0.476204732719506, 0.47218153846773,\r\n    0.468180961405694, 0.464202689048174, 0.460246417812843, 0.456311852678716,\r\n    0.452398706861849, 0.448506701507203, 0.444635565395739, 0.440785034665804,\r\n    0.436954852547985, 0.433144769112652, 0.429354541029442, 0.425583931338022,\r\n    0.421832709229496, 0.418100649837848, 0.414387534040891, 0.410693148270188,\r\n    0.407017284329473, 0.403359739221114, 0.399720314980197, 0.396098818515832,\r\n    0.392495061459315, 0.388908860018789, 0.385340034840077, 0.381788410873393,\r\n    0.378253817245619, 0.374736087137891, 0.371235057668239, 0.367750569779032,\r\n    0.364282468129004, 0.360830600989648, 0.357394820145781, 0.353974980800077,\r\n    0.350570941481406, 0.347182563956794, 0.343809713146851, 0.340452257044522,\r\n    0.337110066637006, 0.333783015830718, 0.330470981379163, 0.327173842813601,\r\n    0.323891482376391, 0.320623784956905, 0.317370638029914, 0.314131931596337,\r\n    0.310907558126286, 0.307697412504292, 0.30450139197665, 0.301319396100803,\r\n    0.298151326696685, 0.294997087799962, 0.291856585617095, 0.288729728482183,\r\n    0.285616426815502, 0.282516593083708, 0.279430141761638, 0.276356989295668,\r\n    0.273297054068577, 0.270250256365875, 0.267216518343561, 0.264195763997261,\r\n    0.261187919132721, 0.258192911337619, 0.255210669954662, 0.252241126055942,\r\n    0.249284212418529, 0.246339863501264, 0.24340801542275, 0.240488605940501,\r\n    0.237581574431238, 0.23468686187233, 0.231804410824339, 0.228934165414681,\r\n    0.226076071322381, 0.223230075763918, 0.220396127480152, 0.217574176724331,\r\n    0.214764175251174, 0.211966076307031, 0.209179834621125, 0.206405406397881,\r\n    0.203642749310335, 0.200891822494657, 0.198152586545776, 0.195425003514135,\r\n    0.192709036903589, 0.190004651670465, 0.187311814223801, 0.1846304924268,\r\n    0.181960655599523, 0.179302274522848, 0.176655321443735, 0.174019770081839,\r\n    0.171395595637506, 0.168782774801212, 0.166181285764482, 0.163591108232366,\r\n    0.161012223437511, 0.158444614155925, 0.15588826472448, 0.153343161060263,\r\n    0.150809290681846, 0.148286642732575, 0.145775208005994, 0.143274978973514,\r\n    0.140785949814445, 0.138308116448551, 0.135841476571254, 0.133386029691669,\r\n    0.130941777173644, 0.12850872228, 0.126086870220186, 0.123676228201597,\r\n    0.12127680548479, 0.11888861344291, 0.116511665625611, 0.114145977827839,\r\n    0.111791568163838, 0.109448457146812, 0.107116667774684, 0.104796225622487,\r\n    0.102487158941935, 0.10018949876881, 0.0979032790388625, 0.095628536713009,\r\n    0.093365311912691, 0.0911136480663738, 0.0888735920682759,\r\n    0.0866451944505581, 0.0844285095703535, 0.082223595813203,\r\n    0.0800305158146631, 0.0778493367020961, 0.0756801303589272,\r\n    0.0735229737139814, 0.0713779490588905, 0.0692451443970068,\r\n    0.0671246538277886, 0.065016577971243, 0.0629210244377582, 0.06083810834954,\r\n    0.0587679529209339, 0.0567106901062031, 0.0546664613248891,\r\n    0.0526354182767924, 0.0506177238609479, 0.0486135532158687,\r\n    0.0466230949019305, 0.0446465522512946, 0.0426841449164746,\r\n    0.0407361106559411, 0.0388027074045262, 0.0368842156885674,\r\n    0.0349809414617162, 0.0330932194585786, 0.0312214171919203,\r\n    0.0293659397581334, 0.0275272356696031, 0.0257058040085489,\r\n    0.0239022033057959, 0.0221170627073089, 0.0203510962300445,\r\n    0.0186051212757247, 0.0168800831525432, 0.0151770883079353,\r\n    0.0134974506017399, 0.0118427578579079, 0.0102149714397015,\r\n    0.00861658276939875, 0.00705087547137324, 0.00552240329925101,\r\n    0.00403797259336304, 0.00260907274610216, 0.0012602859304986,\r\n    0.000477467764609386 };\r\n\r\n  int32_T exitg1;\r\n  switch (localDW->method) {\r\n   case 0U:\r\n    switch (localDW->method_b) {\r\n     case 4U:\r\n      c_state = localDW->state_g;\r\n      do {\r\n        genrandu(c_state, &d_state, &localDW->c_u);\r\n        genrandu(d_state, &c_state, &localDW->x_d);\r\n        localDW->c_u = 2.0 * localDW->c_u - 1.0;\r\n        localDW->x_d = 2.0 * localDW->x_d - 1.0;\r\n        localDW->x_d = localDW->x_d * localDW->x_d + localDW->c_u * localDW->c_u;\r\n      } while (!(localDW->x_d <= 1.0));\r\n\r\n      r = sqrt(-2.0 * log(localDW->x_d) / localDW->x_d) * localDW->c_u;\r\n      localDW->state_g = c_state;\r\n      break;\r\n\r\n     case 5U:\r\n      r = eml_rand_shr3cong(localDW->state_o);\r\n      break;\r\n\r\n     default:\r\n      do {\r\n        exitg1 = 0;\r\n        genrand_uint32_vector(localDW->state_d, localDW->u32);\r\n        i = (int32_T)((localDW->u32[1] >> 24U) + 1U);\r\n        r = (((real_T)(localDW->u32[0] >> 3U) * 1.6777216E+7 + (real_T)((int32_T)\r\n               localDW->u32[1] & 16777215)) * 2.2204460492503131E-16 - 1.0) *\r\n          b[i];\r\n        if (fabs(r) <= b[i - 1]) {\r\n          exitg1 = 1;\r\n        } else if (i < 256) {\r\n          localDW->x_d = genrandu_d(localDW->state_d);\r\n          if ((c[i - 1] - c[i]) * localDW->x_d + c[i] < exp(-0.5 * r * r)) {\r\n            exitg1 = 1;\r\n          }\r\n        } else {\r\n          do {\r\n            localDW->x_d = genrandu_d(localDW->state_d);\r\n            localDW->x_d = log(localDW->x_d) * 0.273661237329758;\r\n            localDW->c_u = genrandu_d(localDW->state_d);\r\n          } while (!(-2.0 * log(localDW->c_u) > localDW->x_d * localDW->x_d));\r\n\r\n          if (r < 0.0) {\r\n            r = localDW->x_d - 3.65415288536101;\r\n          } else {\r\n            r = 3.65415288536101 - localDW->x_d;\r\n          }\r\n\r\n          exitg1 = 1;\r\n        }\r\n      } while (exitg1 == 0);\r\n      break;\r\n    }\r\n    break;\r\n\r\n   case 4U:\r\n    c_state = localDW->state[0];\r\n    do {\r\n      genrandu(c_state, &d_state, &localDW->c_u);\r\n      genrandu(d_state, &c_state, &localDW->x_d);\r\n      localDW->c_u = 2.0 * localDW->c_u - 1.0;\r\n      localDW->x_d = 2.0 * localDW->x_d - 1.0;\r\n      localDW->x_d = localDW->x_d * localDW->x_d + localDW->c_u * localDW->c_u;\r\n    } while (!(localDW->x_d <= 1.0));\r\n\r\n    r = sqrt(-2.0 * log(localDW->x_d) / localDW->x_d) * localDW->c_u;\r\n    localDW->state[0] = c_state;\r\n    break;\r\n\r\n   default:\r\n    r = eml_rand_shr3cong(localDW->state);\r\n    break;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/* System initialize for atomic system: '<Root>/VandD' */\r\nstatic void VandD_Init(DW_VandD *localDW, P_VandD *localP, X_VandD *localX)\r\n{\r\n  static const uint32_T tmp[625] = { 5489U, 1301868182U, 2938499221U,\r\n    2950281878U, 1875628136U, 751856242U, 944701696U, 2243192071U, 694061057U,\r\n    219885934U, 2066767472U, 3182869408U, 485472502U, 2336857883U, 1071588843U,\r\n    3418470598U, 951210697U, 3693558366U, 2923482051U, 1793174584U, 2982310801U,\r\n    1586906132U, 1951078751U, 1808158765U, 1733897588U, 431328322U, 4202539044U,\r\n    530658942U, 1714810322U, 3025256284U, 3342585396U, 1937033938U, 2640572511U,\r\n    1654299090U, 3692403553U, 4233871309U, 3497650794U, 862629010U, 2943236032U,\r\n    2426458545U, 1603307207U, 1133453895U, 3099196360U, 2208657629U, 2747653927U,\r\n    931059398U, 761573964U, 3157853227U, 785880413U, 730313442U, 124945756U,\r\n    2937117055U, 3295982469U, 1724353043U, 3021675344U, 3884886417U, 4010150098U,\r\n    4056961966U, 699635835U, 2681338818U, 1339167484U, 720757518U, 2800161476U,\r\n    2376097373U, 1532957371U, 3902664099U, 1238982754U, 3725394514U, 3449176889U,\r\n    3570962471U, 4287636090U, 4087307012U, 3603343627U, 202242161U, 2995682783U,\r\n    1620962684U, 3704723357U, 371613603U, 2814834333U, 2111005706U, 624778151U,\r\n    2094172212U, 4284947003U, 1211977835U, 991917094U, 1570449747U, 2962370480U,\r\n    1259410321U, 170182696U, 146300961U, 2836829791U, 619452428U, 2723670296U,\r\n    1881399711U, 1161269684U, 1675188680U, 4132175277U, 780088327U, 3409462821U,\r\n    1036518241U, 1834958505U, 3048448173U, 161811569U, 618488316U, 44795092U,\r\n    3918322701U, 1924681712U, 3239478144U, 383254043U, 4042306580U, 2146983041U,\r\n    3992780527U, 3518029708U, 3545545436U, 3901231469U, 1896136409U, 2028528556U,\r\n    2339662006U, 501326714U, 2060962201U, 2502746480U, 561575027U, 581893337U,\r\n    3393774360U, 1778912547U, 3626131687U, 2175155826U, 319853231U, 986875531U,\r\n    819755096U, 2915734330U, 2688355739U, 3482074849U, 2736559U, 2296975761U,\r\n    1029741190U, 2876812646U, 690154749U, 579200347U, 4027461746U, 1285330465U,\r\n    2701024045U, 4117700889U, 759495121U, 3332270341U, 2313004527U, 2277067795U,\r\n    4131855432U, 2722057515U, 1264804546U, 3848622725U, 2211267957U, 4100593547U,\r\n    959123777U, 2130745407U, 3194437393U, 486673947U, 1377371204U, 17472727U,\r\n    352317554U, 3955548058U, 159652094U, 1232063192U, 3835177280U, 49423123U,\r\n    3083993636U, 733092U, 2120519771U, 2573409834U, 1112952433U, 3239502554U,\r\n    761045320U, 1087580692U, 2540165110U, 641058802U, 1792435497U, 2261799288U,\r\n    1579184083U, 627146892U, 2165744623U, 2200142389U, 2167590760U, 2381418376U,\r\n    1793358889U, 3081659520U, 1663384067U, 2009658756U, 2689600308U, 739136266U,\r\n    2304581039U, 3529067263U, 591360555U, 525209271U, 3131882996U, 294230224U,\r\n    2076220115U, 3113580446U, 1245621585U, 1386885462U, 3203270426U, 123512128U,\r\n    12350217U, 354956375U, 4282398238U, 3356876605U, 3888857667U, 157639694U,\r\n    2616064085U, 1563068963U, 2762125883U, 4045394511U, 4180452559U, 3294769488U,\r\n    1684529556U, 1002945951U, 3181438866U, 22506664U, 691783457U, 2685221343U,\r\n    171579916U, 3878728600U, 2475806724U, 2030324028U, 3331164912U, 1708711359U,\r\n    1970023127U, 2859691344U, 2588476477U, 2748146879U, 136111222U, 2967685492U,\r\n    909517429U, 2835297809U, 3206906216U, 3186870716U, 341264097U, 2542035121U,\r\n    3353277068U, 548223577U, 3170936588U, 1678403446U, 297435620U, 2337555430U,\r\n    466603495U, 1132321815U, 1208589219U, 696392160U, 894244439U, 2562678859U,\r\n    470224582U, 3306867480U, 201364898U, 2075966438U, 1767227936U, 2929737987U,\r\n    3674877796U, 2654196643U, 3692734598U, 3528895099U, 2796780123U, 3048728353U,\r\n    842329300U, 191554730U, 2922459673U, 3489020079U, 3979110629U, 1022523848U,\r\n    2202932467U, 3583655201U, 3565113719U, 587085778U, 4176046313U, 3013713762U,\r\n    950944241U, 396426791U, 3784844662U, 3477431613U, 3594592395U, 2782043838U,\r\n    3392093507U, 3106564952U, 2829419931U, 1358665591U, 2206918825U, 3170783123U,\r\n    31522386U, 2988194168U, 1782249537U, 1105080928U, 843500134U, 1225290080U,\r\n    1521001832U, 3605886097U, 2802786495U, 2728923319U, 3996284304U, 903417639U,\r\n    1171249804U, 1020374987U, 2824535874U, 423621996U, 1988534473U, 2493544470U,\r\n    1008604435U, 1756003503U, 1488867287U, 1386808992U, 732088248U, 1780630732U,\r\n    2482101014U, 976561178U, 1543448953U, 2602866064U, 2021139923U, 1952599828U,\r\n    2360242564U, 2117959962U, 2753061860U, 2388623612U, 4138193781U, 2962920654U,\r\n    2284970429U, 766920861U, 3457264692U, 2879611383U, 815055854U, 2332929068U,\r\n    1254853997U, 3740375268U, 3799380844U, 4091048725U, 2006331129U, 1982546212U,\r\n    686850534U, 1907447564U, 2682801776U, 2780821066U, 998290361U, 1342433871U,\r\n    4195430425U, 607905174U, 3902331779U, 2454067926U, 1708133115U, 1170874362U,\r\n    2008609376U, 3260320415U, 2211196135U, 433538229U, 2728786374U, 2189520818U,\r\n    262554063U, 1182318347U, 3710237267U, 1221022450U, 715966018U, 2417068910U,\r\n    2591870721U, 2870691989U, 3418190842U, 4238214053U, 1540704231U, 1575580968U,\r\n    2095917976U, 4078310857U, 2313532447U, 2110690783U, 4056346629U, 4061784526U,\r\n    1123218514U, 551538993U, 597148360U, 4120175196U, 3581618160U, 3181170517U,\r\n    422862282U, 3227524138U, 1713114790U, 662317149U, 1230418732U, 928171837U,\r\n    1324564878U, 1928816105U, 1786535431U, 2878099422U, 3290185549U, 539474248U,\r\n    1657512683U, 552370646U, 1671741683U, 3655312128U, 1552739510U, 2605208763U,\r\n    1441755014U, 181878989U, 3124053868U, 1447103986U, 3183906156U, 1728556020U,\r\n    3502241336U, 3055466967U, 1013272474U, 818402132U, 1715099063U, 2900113506U,\r\n    397254517U, 4194863039U, 1009068739U, 232864647U, 2540223708U, 2608288560U,\r\n    2415367765U, 478404847U, 3455100648U, 3182600021U, 2115988978U, 434269567U,\r\n    4117179324U, 3461774077U, 887256537U, 3545801025U, 286388911U, 3451742129U,\r\n    1981164769U, 786667016U, 3310123729U, 3097811076U, 2224235657U, 2959658883U,\r\n    3370969234U, 2514770915U, 3345656436U, 2677010851U, 2206236470U, 271648054U,\r\n    2342188545U, 4292848611U, 3646533909U, 3754009956U, 3803931226U, 4160647125U,\r\n    1477814055U, 4043852216U, 1876372354U, 3133294443U, 3871104810U, 3177020907U,\r\n    2074304428U, 3479393793U, 759562891U, 164128153U, 1839069216U, 2114162633U,\r\n    3989947309U, 3611054956U, 1333547922U, 835429831U, 494987340U, 171987910U,\r\n    1252001001U, 370809172U, 3508925425U, 2535703112U, 1276855041U, 1922855120U,\r\n    835673414U, 3030664304U, 613287117U, 171219893U, 3423096126U, 3376881639U,\r\n    2287770315U, 1658692645U, 1262815245U, 3957234326U, 1168096164U, 2968737525U,\r\n    2655813712U, 2132313144U, 3976047964U, 326516571U, 353088456U, 3679188938U,\r\n    3205649712U, 2654036126U, 1249024881U, 880166166U, 691800469U, 2229503665U,\r\n    1673458056U, 4032208375U, 1851778863U, 2563757330U, 376742205U, 1794655231U,\r\n    340247333U, 1505873033U, 396524441U, 879666767U, 3335579166U, 3260764261U,\r\n    3335999539U, 506221798U, 4214658741U, 975887814U, 2080536343U, 3360539560U,\r\n    571586418U, 138896374U, 4234352651U, 2737620262U, 3928362291U, 1516365296U,\r\n    38056726U, 3599462320U, 3585007266U, 3850961033U, 471667319U, 1536883193U,\r\n    2310166751U, 1861637689U, 2530999841U, 4139843801U, 2710569485U, 827578615U,\r\n    2012334720U, 2907369459U, 3029312804U, 2820112398U, 1965028045U, 35518606U,\r\n    2478379033U, 643747771U, 1924139484U, 4123405127U, 3811735531U, 3429660832U,\r\n    3285177704U, 1948416081U, 1311525291U, 1183517742U, 1739192232U, 3979815115U,\r\n    2567840007U, 4116821529U, 213304419U, 4125718577U, 1473064925U, 2442436592U,\r\n    1893310111U, 4195361916U, 3747569474U, 828465101U, 2991227658U, 750582866U,\r\n    1205170309U, 1409813056U, 678418130U, 1171531016U, 3821236156U, 354504587U,\r\n    4202874632U, 3882511497U, 1893248677U, 1903078632U, 26340130U, 2069166240U,\r\n    3657122492U, 3725758099U, 831344905U, 811453383U, 3447711422U, 2434543565U,\r\n    4166886888U, 3358210805U, 4142984013U, 2988152326U, 3527824853U, 982082992U,\r\n    2809155763U, 190157081U, 3340214818U, 2365432395U, 2548636180U, 2894533366U,\r\n    3474657421U, 2372634704U, 2845748389U, 43024175U, 2774226648U, 1987702864U,\r\n    3186502468U, 453610222U, 4204736567U, 1392892630U, 2471323686U, 2470534280U,\r\n    3541393095U, 4269885866U, 3909911300U, 759132955U, 1482612480U, 667715263U,\r\n    1795580598U, 2337923983U, 3390586366U, 581426223U, 1515718634U, 476374295U,\r\n    705213300U, 363062054U, 2084697697U, 2407503428U, 2292957699U, 2426213835U,\r\n    2199989172U, 1987356470U, 4026755612U, 2147252133U, 270400031U, 1367820199U,\r\n    2369854699U, 2844269403U, 79981964U, 624U };\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator20' */\r\n  localX->Integrator20_CSTATE = localP->Integrator20_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator21' */\r\n  localX->Integrator21_CSTATE = localP->Integrator21_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator22' */\r\n  localX->Integrator22_CSTATE = localP->Integrator22_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator' */\r\n  localX->Integrator_CSTATE = rtP.vxo;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator2' */\r\n  localX->Integrator2_CSTATE = rtP.ro;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator1' */\r\n  localX->Integrator1_CSTATE = rtP.vyo;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator15' */\r\n  localX->Integrator15_CSTATE = localP->Integrator15_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator14' */\r\n  localX->Integrator14_CSTATE = localP->Integrator14_IC;\r\n\r\n  /* InitializeConditions for Derivative: '<S4>/Derivative' */\r\n  localDW->TimeStampA = (rtInf);\r\n  localDW->TimeStampB = (rtInf);\r\n\r\n  /* InitializeConditions for Derivative: '<S4>/Derivative1' */\r\n  localDW->TimeStampA_l = (rtInf);\r\n  localDW->TimeStampB_o = (rtInf);\r\n\r\n  /* InitializeConditions for Derivative: '<S4>/Derivative2' */\r\n  localDW->TimeStampA_p = (rtInf);\r\n  localDW->TimeStampB_n = (rtInf);\r\n\r\n  /* InitializeConditions for Derivative: '<S4>/Derivative3' */\r\n  localDW->TimeStampA_o = (rtInf);\r\n  localDW->TimeStampB_l = (rtInf);\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator11' */\r\n  localX->Integrator11_CSTATE = rtP.zu3_0;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator10' */\r\n  localX->Integrator10_CSTATE = localP->Integrator10_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator13' */\r\n  localX->Integrator13_CSTATE = rtP.zu4_0;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator12' */\r\n  localX->Integrator12_CSTATE = localP->Integrator12_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator7' */\r\n  localX->Integrator7_CSTATE = rtP.zu1_0;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator3' */\r\n  localX->Integrator3_CSTATE = localP->Integrator3_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator9' */\r\n  localX->Integrator9_CSTATE = rtP.zu2_0;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator8' */\r\n  localX->Integrator8_CSTATE = localP->Integrator8_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S48>/Integrator' */\r\n  localX->Integrator_CSTATE_p =\r\n    localP->PIDController_InitialConditionForIntegrator;\r\n\r\n  /* InitializeConditions for Integrator: '<S43>/Filter' */\r\n  localX->Filter_CSTATE = localP->PIDController_InitialConditionForFilter;\r\n\r\n  /* InitializeConditions for Integrator: '<S96>/Integrator' */\r\n  localX->Integrator_CSTATE_b =\r\n    localP->PIDController1_InitialConditionForIntegrator;\r\n\r\n  /* InitializeConditions for Integrator: '<S91>/Filter' */\r\n  localX->Filter_CSTATE_n = localP->PIDController1_InitialConditionForFilter;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator19' */\r\n  localX->Integrator19_CSTATE = localP->Integrator19_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator17' */\r\n  localX->Integrator17_CSTATE = localP->Integrator17_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator16' */\r\n  localX->Integrator16_CSTATE = localP->Integrator16_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator18' */\r\n  localX->Integrator18_CSTATE = localP->Integrator18_IC;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator5' */\r\n  localX->Integrator5_CSTATE = rtP.Xo;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator6' */\r\n  localX->Integrator6_CSTATE = rtP.Yo;\r\n\r\n  /* InitializeConditions for TransferFcn: '<S3>/Transfer Fcn' */\r\n  localX->TransferFcn_CSTATE = 0.0;\r\n\r\n  /* InitializeConditions for Memory: '<S113>/Memory' */\r\n  localDW->Memory_PreviousInput = localP->Memory_InitialCondition;\r\n\r\n  /* InitializeConditions for Memory: '<S113>/Memory1' */\r\n  localDW->Memory1_PreviousInput = localP->Memory1_InitialCondition;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator4' */\r\n  localX->Integrator4_CSTATE = rtP.THETAo;\r\n\r\n  /* InitializeConditions for Integrator: '<S4>/Integrator23' */\r\n  localX->Integrator23_CSTATE = rtP.Yo;\r\n\r\n  /* SystemInitialize for MATLAB Function: '<S113>/MATLAB Function1' */\r\n  memcpy(&localDW->state_d[0], &tmp[0], 625U * sizeof(uint32_T));\r\n  localDW->method_b = 7U;\r\n  localDW->state_g = 1144108930U;\r\n  localDW->state[0] = 362436069U;\r\n  localDW->state_o[0] = 362436069U;\r\n  localDW->state[1] = 521288629U;\r\n  localDW->state_o[1] = 521288629U;\r\n}\r\n\r\n/* Outputs for atomic system: '<Root>/VandD' */\r\nstatic void VandD_g(RT_MODEL * const rtM, const real_T rtu_lamda[4], real_T\r\n                    rtyyyy_Fy1Fy2Fy3Fy4[4], real_T rty_throttleforce[4], real_T *\r\n                    rty_Steeringwheelangle, real_T\r\n                    *rtyy_ActualVelocityLateralAcceleration, real_T\r\n                    *rty_AngularVelocity, real_T *rty_LateralVelocity, DW_VandD *\r\n                    localDW, P_VandD *localP, X_VandD *localX)\r\n{\r\n  real_T *lastU;\r\n  boolean_T rEQ0;\r\n  static const real_T a[5] = { 1.8, 3.6, 5.3999999999999995, 7.2, 9.0 };\r\n\r\n  static const real_T g[5] = { 0.2, 0.6, 1.0, 0.8, 0.4 };\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function3' incorporates:\r\n   *  Integrator: '<S4>/Integrator20'\r\n   *  Integrator: '<S4>/Integrator21'\r\n   *  Integrator: '<S4>/Integrator22'\r\n   */\r\n  localDW->absx11 = cos(localX->Integrator22_CSTATE);\r\n  localDW->absx21 = sin(localX->Integrator20_CSTATE);\r\n  localDW->absx31 = sin(localX->Integrator22_CSTATE);\r\n  localDW->Derivative2 = cos(localX->Integrator20_CSTATE);\r\n  localDW->Derivative3 = sin(localX->Integrator21_CSTATE);\r\n  localDW->rtb_alpha_idx_0 = cos(localX->Integrator21_CSTATE);\r\n  localDW->x[0] = localDW->rtb_alpha_idx_0 * localDW->absx11;\r\n  localDW->x[3] = localDW->absx21 * localDW->Derivative3 * localDW->absx11 +\r\n    localDW->Derivative2 * localDW->absx31;\r\n  localDW->x[6] = localDW->absx21 * localDW->absx31 - localDW->Derivative2 *\r\n    localDW->Derivative3 * localDW->absx11;\r\n  localDW->x[1] = -localDW->rtb_alpha_idx_0 * localDW->absx31;\r\n  localDW->x[4] = localDW->Derivative2 * localDW->absx11 - sin\r\n    (localX->Integrator20_CSTATE) * sin(localX->Integrator21_CSTATE) *\r\n    localDW->absx31;\r\n  localDW->x[7] = cos(localX->Integrator20_CSTATE) * sin\r\n    (localX->Integrator21_CSTATE) * localDW->absx31 + localDW->absx21 *\r\n    localDW->absx11;\r\n  localDW->x[2] = localDW->Derivative3;\r\n  localDW->x[5] = -localDW->absx21 * localDW->rtb_alpha_idx_0;\r\n  localDW->x[8] = localDW->Derivative2 * localDW->rtb_alpha_idx_0;\r\n  memcpy(&localDW->b_x_k[0], &localDW->x[0], 9U * sizeof(real_T));\r\n  localDW->p1 = 0;\r\n  localDW->p2 = 3;\r\n  localDW->p3 = 6;\r\n  localDW->absx11 = fabs(localDW->x[0]);\r\n  localDW->absx21 = fabs(localDW->x[1]);\r\n  localDW->absx31 = fabs(localDW->Derivative3);\r\n  if ((localDW->absx21 > localDW->absx11) && (localDW->absx21 > localDW->absx31))\r\n  {\r\n    localDW->p1 = 3;\r\n    localDW->p2 = 0;\r\n    localDW->b_x_k[0] = localDW->x[1];\r\n    localDW->b_x_k[1] = localDW->x[0];\r\n    localDW->b_x_k[3] = localDW->x[4];\r\n    localDW->b_x_k[4] = localDW->x[3];\r\n    localDW->b_x_k[6] = localDW->x[7];\r\n    localDW->b_x_k[7] = localDW->x[6];\r\n  } else if (localDW->absx31 > localDW->absx11) {\r\n    localDW->p1 = 6;\r\n    localDW->p3 = 0;\r\n    localDW->b_x_k[0] = localDW->Derivative3;\r\n    localDW->b_x_k[2] = localDW->x[0];\r\n    localDW->b_x_k[3] = localDW->x[5];\r\n    localDW->b_x_k[5] = localDW->x[3];\r\n    localDW->b_x_k[6] = localDW->x[8];\r\n    localDW->b_x_k[8] = localDW->x[6];\r\n  }\r\n\r\n  localDW->b_x_k[1] /= localDW->b_x_k[0];\r\n  localDW->b_x_k[2] /= localDW->b_x_k[0];\r\n  localDW->b_x_k[4] -= localDW->b_x_k[1] * localDW->b_x_k[3];\r\n  localDW->b_x_k[5] -= localDW->b_x_k[2] * localDW->b_x_k[3];\r\n  localDW->b_x_k[7] -= localDW->b_x_k[1] * localDW->b_x_k[6];\r\n  localDW->b_x_k[8] -= localDW->b_x_k[2] * localDW->b_x_k[6];\r\n  if (fabs(localDW->b_x_k[5]) > fabs(localDW->b_x_k[4])) {\r\n    localDW->itmp = localDW->p2;\r\n    localDW->p2 = localDW->p3;\r\n    localDW->p3 = localDW->itmp;\r\n    localDW->absx11 = localDW->b_x_k[1];\r\n    localDW->b_x_k[1] = localDW->b_x_k[2];\r\n    localDW->b_x_k[2] = localDW->absx11;\r\n    localDW->absx11 = localDW->b_x_k[4];\r\n    localDW->b_x_k[4] = localDW->b_x_k[5];\r\n    localDW->b_x_k[5] = localDW->absx11;\r\n    localDW->absx11 = localDW->b_x_k[7];\r\n    localDW->b_x_k[7] = localDW->b_x_k[8];\r\n    localDW->b_x_k[8] = localDW->absx11;\r\n  }\r\n\r\n  localDW->b_x_k[5] /= localDW->b_x_k[4];\r\n  localDW->b_x_k[8] -= localDW->b_x_k[5] * localDW->b_x_k[7];\r\n  localDW->absx11 = (localDW->b_x_k[1] * localDW->b_x_k[5] - localDW->b_x_k[2]) /\r\n    localDW->b_x_k[8];\r\n  localDW->absx21 = -(localDW->b_x_k[7] * localDW->absx11 + localDW->b_x_k[1]) /\r\n    localDW->b_x_k[4];\r\n  localDW->y[localDW->p1] = ((1.0 - localDW->b_x_k[3] * localDW->absx21) -\r\n    localDW->b_x_k[6] * localDW->absx11) / localDW->b_x_k[0];\r\n  localDW->y[localDW->p1 + 1] = localDW->absx21;\r\n  localDW->y[localDW->p1 + 2] = localDW->absx11;\r\n  localDW->absx11 = -localDW->b_x_k[5] / localDW->b_x_k[8];\r\n  localDW->absx21 = (1.0 - localDW->b_x_k[7] * localDW->absx11) / localDW->\r\n    b_x_k[4];\r\n  localDW->y[localDW->p2] = -(localDW->b_x_k[3] * localDW->absx21 +\r\n    localDW->b_x_k[6] * localDW->absx11) / localDW->b_x_k[0];\r\n  localDW->y[localDW->p2 + 1] = localDW->absx21;\r\n  localDW->y[localDW->p2 + 2] = localDW->absx11;\r\n  localDW->absx11 = 1.0 / localDW->b_x_k[8];\r\n  localDW->absx21 = -localDW->b_x_k[7] * localDW->absx11 / localDW->b_x_k[4];\r\n  localDW->y[localDW->p3] = -(localDW->b_x_k[3] * localDW->absx21 +\r\n    localDW->b_x_k[6] * localDW->absx11) / localDW->b_x_k[0];\r\n  localDW->y[localDW->p3 + 1] = localDW->absx21;\r\n  localDW->y[localDW->p3 + 2] = localDW->absx11;\r\n\r\n  /* End of MATLAB Function: '<S4>/MATLAB Function3' */\r\n\r\n  /* Integrator: '<S4>/Integrator' */\r\n  *rtyy_ActualVelocityLateralAcceleration = localX->Integrator_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator2' */\r\n  *rty_AngularVelocity = localX->Integrator2_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator1' */\r\n  *rty_LateralVelocity = localX->Integrator1_CSTATE;\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function1' */\r\n  localDW->absx11 = (rtP.l1 * *rty_AngularVelocity + *rty_LateralVelocity) /\r\n    *rtyy_ActualVelocityLateralAcceleration;\r\n  localDW->rtb_alpha_idx_0 = rtu_lamda[0] - localDW->absx11;\r\n  localDW->rtb_alpha_idx_1 = rtu_lamda[1] - localDW->absx11;\r\n  localDW->absx11 = (*rty_LateralVelocity - rtP.l2 * *rty_AngularVelocity) /\r\n    *rtyy_ActualVelocityLateralAcceleration;\r\n  localDW->rtb_alpha_idx_2 = rtu_lamda[2] - localDW->absx11;\r\n  localDW->rtb_alpha_idx_3 = rtu_lamda[3] - localDW->absx11;\r\n\r\n  /* Integrator: '<S4>/Integrator14' */\r\n  localDW->zs_dot = localX->Integrator14_CSTATE;\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function' */\r\n  for (localDW->p1 = 0; localDW->p1 < 3; localDW->p1++) {\r\n    localDW->absx11 = localDW->y[localDW->p1] * rtP.l1;\r\n    localDW->rtb_Fs_idx_0 = localDW->y[localDW->p1 + 3];\r\n    localDW->rtb_Fs_idx_1 = localDW->y[localDW->p1 + 6] * 0.0;\r\n    localDW->rtb_Fs_idx_2 = localDW->y[localDW->p1] * -rtP.l2;\r\n    localDW->rtb_y_b[localDW->p1] = (localDW->rtb_Fs_idx_0 * -rtP.b1 +\r\n      localDW->absx11) + localDW->rtb_Fs_idx_1;\r\n    localDW->rtb_y_p[localDW->p1] = (localDW->rtb_Fs_idx_0 * rtP.b2 +\r\n      localDW->absx11) + localDW->rtb_Fs_idx_1;\r\n    localDW->rtb_y_c[localDW->p1] = (localDW->rtb_Fs_idx_0 * -rtP.b3 +\r\n      localDW->rtb_Fs_idx_2) + localDW->rtb_Fs_idx_1;\r\n    localDW->rtb_y_f[localDW->p1] = (localDW->rtb_Fs_idx_0 * rtP.b4 +\r\n      localDW->rtb_Fs_idx_2) + localDW->rtb_Fs_idx_1;\r\n  }\r\n\r\n  localDW->Dz1 = localDW->rtb_y_b[2];\r\n  localDW->Dz2 = localDW->rtb_y_p[2];\r\n  localDW->Dz3 = localDW->rtb_y_c[2];\r\n  localDW->Dz4 = localDW->rtb_y_f[2];\r\n\r\n  /* End of MATLAB Function: '<S4>/MATLAB Function' */\r\n\r\n  /* Derivative: '<S4>/Derivative' incorporates:\r\n   *  Clock: '<S113>/Clock'\r\n   *  Derivative: '<S4>/Derivative1'\r\n   *  Derivative: '<S4>/Derivative2'\r\n   *  Derivative: '<S4>/Derivative3'\r\n   */\r\n  localDW->absx11 = rtM->Timing.t[0];\r\n  if ((localDW->TimeStampA >= localDW->absx11) && (localDW->TimeStampB >=\r\n       localDW->absx11)) {\r\n    localDW->absx21 = 0.0;\r\n  } else {\r\n    localDW->Derivative3 = localDW->TimeStampA;\r\n    lastU = &localDW->LastUAtTimeA;\r\n    if (localDW->TimeStampA < localDW->TimeStampB) {\r\n      if (localDW->TimeStampB < localDW->absx11) {\r\n        localDW->Derivative3 = localDW->TimeStampB;\r\n        lastU = &localDW->LastUAtTimeB;\r\n      }\r\n    } else if (localDW->TimeStampA >= localDW->absx11) {\r\n      localDW->Derivative3 = localDW->TimeStampB;\r\n      lastU = &localDW->LastUAtTimeB;\r\n    }\r\n\r\n    localDW->absx21 = (localDW->Dz1 - *lastU) / (localDW->absx11 -\r\n      localDW->Derivative3);\r\n  }\r\n\r\n  /* End of Derivative: '<S4>/Derivative' */\r\n\r\n  /* Derivative: '<S4>/Derivative1' */\r\n  if ((localDW->TimeStampA_l >= localDW->absx11) && (localDW->TimeStampB_o >=\r\n       localDW->absx11)) {\r\n    localDW->absx31 = 0.0;\r\n  } else {\r\n    localDW->Derivative3 = localDW->TimeStampA_l;\r\n    lastU = &localDW->LastUAtTimeA_k;\r\n    if (localDW->TimeStampA_l < localDW->TimeStampB_o) {\r\n      if (localDW->TimeStampB_o < localDW->absx11) {\r\n        localDW->Derivative3 = localDW->TimeStampB_o;\r\n        lastU = &localDW->LastUAtTimeB_a;\r\n      }\r\n    } else if (localDW->TimeStampA_l >= localDW->absx11) {\r\n      localDW->Derivative3 = localDW->TimeStampB_o;\r\n      lastU = &localDW->LastUAtTimeB_a;\r\n    }\r\n\r\n    localDW->absx31 = (localDW->Dz2 - *lastU) / (localDW->absx11 -\r\n      localDW->Derivative3);\r\n  }\r\n\r\n  /* Derivative: '<S4>/Derivative2' */\r\n  if ((localDW->TimeStampA_p >= localDW->absx11) && (localDW->TimeStampB_n >=\r\n       localDW->absx11)) {\r\n    localDW->Derivative2 = 0.0;\r\n  } else {\r\n    localDW->Derivative3 = localDW->TimeStampA_p;\r\n    lastU = &localDW->LastUAtTimeA_n;\r\n    if (localDW->TimeStampA_p < localDW->TimeStampB_n) {\r\n      if (localDW->TimeStampB_n < localDW->absx11) {\r\n        localDW->Derivative3 = localDW->TimeStampB_n;\r\n        lastU = &localDW->LastUAtTimeB_e;\r\n      }\r\n    } else if (localDW->TimeStampA_p >= localDW->absx11) {\r\n      localDW->Derivative3 = localDW->TimeStampB_n;\r\n      lastU = &localDW->LastUAtTimeB_e;\r\n    }\r\n\r\n    localDW->Derivative2 = (localDW->Dz3 - *lastU) / (localDW->absx11 -\r\n      localDW->Derivative3);\r\n  }\r\n\r\n  /* Derivative: '<S4>/Derivative3' */\r\n  if ((localDW->TimeStampA_o >= localDW->absx11) && (localDW->TimeStampB_l >=\r\n       localDW->absx11)) {\r\n    localDW->Derivative3 = 0.0;\r\n  } else {\r\n    localDW->Derivative3 = localDW->TimeStampA_o;\r\n    lastU = &localDW->LastUAtTimeA_e;\r\n    if (localDW->TimeStampA_o < localDW->TimeStampB_l) {\r\n      if (localDW->TimeStampB_l < localDW->absx11) {\r\n        localDW->Derivative3 = localDW->TimeStampB_l;\r\n        lastU = &localDW->LastUAtTimeB_h;\r\n      }\r\n    } else if (localDW->TimeStampA_o >= localDW->absx11) {\r\n      localDW->Derivative3 = localDW->TimeStampB_l;\r\n      lastU = &localDW->LastUAtTimeB_h;\r\n    }\r\n\r\n    localDW->Derivative3 = (localDW->Dz4 - *lastU) / (localDW->absx11 -\r\n      localDW->Derivative3);\r\n  }\r\n\r\n  /* Integrator: '<S4>/Integrator10' */\r\n  localDW->Integrator10 = localX->Integrator10_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator12' */\r\n  localDW->Integrator12 = localX->Integrator12_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator3' */\r\n  localDW->Integrator3 = localX->Integrator3_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator8' */\r\n  localDW->Integrator8 = localX->Integrator8_CSTATE;\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function4' incorporates:\r\n   *  Integrator: '<S4>/Integrator11'\r\n   *  Integrator: '<S4>/Integrator13'\r\n   *  Integrator: '<S4>/Integrator15'\r\n   *  Integrator: '<S4>/Integrator7'\r\n   *  Integrator: '<S4>/Integrator9'\r\n   */\r\n  localDW->rtb_Fs_idx_0 = -(((localX->Integrator15_CSTATE - localDW->Dz1) -\r\n    localX->Integrator7_CSTATE) * 265000.0 + ((localDW->zs_dot - localDW->absx21)\r\n    - localDW->Integrator3) * 4500.0);\r\n  localDW->rtb_Fs_idx_1 = -(((localX->Integrator15_CSTATE - localDW->Dz2) -\r\n    localX->Integrator9_CSTATE) * 265000.0 + ((localDW->zs_dot - localDW->absx31)\r\n    - localDW->Integrator8) * 4500.0);\r\n  localDW->rtb_Fs_idx_2 = -(((localX->Integrator15_CSTATE - localDW->Dz3) -\r\n    localX->Integrator11_CSTATE) * 52500.0 + ((localDW->zs_dot -\r\n    localDW->Derivative2) - localDW->Integrator10) * 11207.0);\r\n  localDW->Derivative3 = -(((localX->Integrator15_CSTATE - localDW->Dz4) -\r\n    localX->Integrator13_CSTATE) * 52500.0 + ((localDW->zs_dot -\r\n    localDW->Derivative3) - localDW->Integrator12) * 11207.0);\r\n  localDW->Ft[0] = -(200000.0 * localX->Integrator7_CSTATE);\r\n  localDW->Ft[1] = -(200000.0 * localX->Integrator9_CSTATE);\r\n  localDW->Ft[2] = -(200000.0 * localX->Integrator11_CSTATE);\r\n  localDW->Ft[3] = -(200000.0 * localX->Integrator13_CSTATE);\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function2' */\r\n  localDW->Fz = localDW->Ft[0] / 1000.0;\r\n  localDW->absx21 = localDW->Fz * localDW->Fz * -22.1 + 1011.0 * localDW->Fz;\r\n  localDW->Derivative2 = sin(atan(0.208 * localDW->Fz) * 1.82) * 1078.0;\r\n  localDW->absx31 = localDW->Derivative2 / (1.3 * localDW->absx21);\r\n  localDW->Fz_idx_0 = localDW->Fz;\r\n  localDW->D_idx_0 = localDW->absx21;\r\n  localDW->BCD_idx_0 = localDW->Derivative2;\r\n  localDW->Fz = localDW->Ft[1] / 1000.0;\r\n  localDW->absx21 = localDW->Fz * localDW->Fz * -22.1 + 1011.0 * localDW->Fz;\r\n  localDW->Derivative2 = sin(atan(0.208 * localDW->Fz) * 1.82) * 1078.0;\r\n  localDW->B_idx_1 = localDW->Derivative2 / (1.3 * localDW->absx21);\r\n  localDW->Fz_idx_1 = localDW->Fz;\r\n  localDW->D_idx_1 = localDW->absx21;\r\n  localDW->BCD_idx_1 = localDW->Derivative2;\r\n  localDW->Fz = localDW->Ft[2] / 1000.0;\r\n  localDW->absx21 = localDW->Fz * localDW->Fz * -22.1 + 1011.0 * localDW->Fz;\r\n  localDW->Derivative2 = sin(atan(0.208 * localDW->Fz) * 1.82) * 1078.0;\r\n  localDW->B_idx_2 = localDW->Derivative2 / (1.3 * localDW->absx21);\r\n  localDW->Fz_idx_2 = localDW->Fz;\r\n  localDW->D_idx_2 = localDW->absx21;\r\n  localDW->BCD_idx_2 = localDW->Derivative2;\r\n  localDW->Fz = localDW->Ft[3] / 1000.0;\r\n  localDW->D_tmp = localDW->Fz * localDW->Fz;\r\n  localDW->absx21 = localDW->D_tmp * -22.1 + 1011.0 * localDW->Fz;\r\n  localDW->Derivative2 = sin(atan(0.208 * localDW->Fz) * 1.82) * 1078.0;\r\n  localDW->B_idx_3 = localDW->Derivative2 / (1.3 * localDW->absx21);\r\n  localDW->BCD_idx_0 = (localDW->BCD_idx_0 + localDW->BCD_idx_1) * 57.3;\r\n  localDW->Fz_idx_0 = (localDW->Fz_idx_0 * localDW->Fz_idx_0 * 0.0 + -0.354 *\r\n                       localDW->Fz_idx_0) + 0.707;\r\n  localDW->Fz_idx_1 = (localDW->Fz_idx_1 * localDW->Fz_idx_1 * 0.0 + -0.354 *\r\n                       localDW->Fz_idx_1) + 0.707;\r\n  localDW->Fz_idx_2 = (localDW->Fz_idx_2 * localDW->Fz_idx_2 * 0.0 + -0.354 *\r\n                       localDW->Fz_idx_2) + 0.707;\r\n  localDW->Fz = (localDW->D_tmp * 0.0 + -0.354 * localDW->Fz) + 0.707;\r\n  if (rtP.Model == 1.0) {\r\n    rtyyyy_Fy1Fy2Fy3Fy4[0] = localDW->BCD_idx_0 * localDW->rtb_alpha_idx_0;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[1] = localDW->BCD_idx_0 * localDW->rtb_alpha_idx_1;\r\n    localDW->D_idx_0 = (localDW->BCD_idx_2 + localDW->Derivative2) * 57.3;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[2] = localDW->D_idx_0 * localDW->rtb_alpha_idx_2;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[3] = localDW->D_idx_0 * localDW->rtb_alpha_idx_3;\r\n  } else {\r\n    rtyyyy_Fy1Fy2Fy3Fy4[0] = sin(atan(((1.0 - localDW->Fz_idx_0) * 57.3 *\r\n      localDW->rtb_alpha_idx_0 + atan(localDW->absx31 * 57.3 *\r\n      localDW->rtb_alpha_idx_0) * (localDW->Fz_idx_0 / localDW->absx31)) *\r\n      localDW->absx31) * 1.3) * localDW->D_idx_0;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[1] = sin(atan(((1.0 - localDW->Fz_idx_1) * 57.3 *\r\n      localDW->rtb_alpha_idx_1 + atan(localDW->B_idx_1 * 57.3 *\r\n      localDW->rtb_alpha_idx_1) * (localDW->Fz_idx_1 / localDW->B_idx_1)) *\r\n      localDW->B_idx_1) * 1.3) * localDW->D_idx_1;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[2] = sin(atan(((1.0 - localDW->Fz_idx_2) * 57.3 *\r\n      localDW->rtb_alpha_idx_2 + atan(localDW->B_idx_2 * 57.3 *\r\n      localDW->rtb_alpha_idx_2) * (localDW->Fz_idx_2 / localDW->B_idx_2)) *\r\n      localDW->B_idx_2) * 1.3) * localDW->D_idx_2;\r\n    rtyyyy_Fy1Fy2Fy3Fy4[3] = sin(atan(((1.0 - localDW->Fz) * 57.3 *\r\n      localDW->rtb_alpha_idx_3 + atan(localDW->B_idx_3 * 57.3 *\r\n      localDW->rtb_alpha_idx_3) * (localDW->Fz / localDW->B_idx_3)) *\r\n      localDW->B_idx_3) * 1.3) * localDW->absx21;\r\n  }\r\n\r\n  /* Sum: '<S6>/Sum' incorporates:\r\n   *  Constant: '<S6>/Constant'\r\n   */\r\n  localDW->absx21 = localP->Constant_Value -\r\n    *rtyy_ActualVelocityLateralAcceleration;\r\n\r\n  /* Product: '<S42>/DProd Out' incorporates:\r\n   *  MATLAB Function: '<S6>/MATLAB Function'\r\n   *  Product: '<S45>/IProd Out'\r\n   */\r\n  localDW->rtb_alpha_idx_0 = 0.05 * *rtyy_ActualVelocityLateralAcceleration *\r\n    localDW->absx21;\r\n\r\n  /* Product: '<S51>/NProd Out' incorporates:\r\n   *  Constant: '<S6>/Constant1'\r\n   *  Integrator: '<S43>/Filter'\r\n   *  Product: '<S42>/DProd Out'\r\n   *  Sum: '<S43>/SumD'\r\n   */\r\n  localDW->NProdOut = (localDW->rtb_alpha_idx_0 - localX->Filter_CSTATE) *\r\n    localP->Constant1_Value;\r\n\r\n  /* Sum: '<S57>/Sum' incorporates:\r\n   *  Integrator: '<S48>/Integrator'\r\n   *  MATLAB Function: '<S6>/MATLAB Function'\r\n   *  Product: '<S53>/PProd Out'\r\n   */\r\n  localDW->absx31 = ((70.0 * *rtyy_ActualVelocityLateralAcceleration + 5.0) *\r\n                     localDW->absx21 + localX->Integrator_CSTATE_p) +\r\n    localDW->NProdOut;\r\n\r\n  /* Integrator: '<S91>/Filter' */\r\n  *rty_Steeringwheelangle = localX->Filter_CSTATE_n;\r\n\r\n  /* Gain: '<S99>/Filter Coefficient' incorporates:\r\n   *  Gain: '<S90>/Derivative Gain'\r\n   *  Sum: '<S91>/SumD'\r\n   */\r\n  localDW->FilterCoefficient = (localP->PIDController1_D * localDW->absx21 -\r\n    *rty_Steeringwheelangle) * localP->PIDController1_N;\r\n\r\n  /* Sum: '<S105>/Sum' incorporates:\r\n   *  Gain: '<S101>/Proportional Gain'\r\n   *  Integrator: '<S96>/Integrator'\r\n   */\r\n  localDW->Derivative2 = (localP->PIDController1_P * localDW->absx21 +\r\n    localX->Integrator_CSTATE_b) + localDW->FilterCoefficient;\r\n\r\n  /* ManualSwitch: '<S6>/Manual Switch' */\r\n  if (localP->ManualSwitch_CurrentSetting == 1) {\r\n    rty_throttleforce[0] = localDW->absx31;\r\n    rty_throttleforce[1] = localDW->absx31;\r\n    rty_throttleforce[2] = localDW->absx31;\r\n    rty_throttleforce[3] = localDW->absx31;\r\n  } else {\r\n    rty_throttleforce[0] = localDW->Derivative2;\r\n    rty_throttleforce[1] = localDW->Derivative2;\r\n    rty_throttleforce[2] = localDW->Derivative2;\r\n    rty_throttleforce[3] = localDW->Derivative2;\r\n  }\r\n\r\n  /* End of ManualSwitch: '<S6>/Manual Switch' */\r\n  for (localDW->p1 = 0; localDW->p1 < 3; localDW->p1++) {\r\n    /* Product: '<S4>/Product9' incorporates:\r\n     *  SignalConversion generated from: '<S4>/Vector Concatenate'\r\n     */\r\n    localDW->Product9[localDW->p1] = 0.0;\r\n    localDW->Product9[localDW->p1] += localDW->y[localDW->p1] *\r\n      *rtyy_ActualVelocityLateralAcceleration;\r\n    localDW->Product9[localDW->p1] += localDW->y[localDW->p1 + 3] *\r\n      *rty_LateralVelocity;\r\n    localDW->Product9[localDW->p1] += localDW->y[localDW->p1 + 6] *\r\n      localDW->zs_dot;\r\n  }\r\n\r\n  /* Integrator: '<S4>/Integrator19' */\r\n  localDW->Integrator19 = localX->Integrator19_CSTATE;\r\n\r\n  /* Integrator: '<S4>/Integrator16' */\r\n  localDW->Integrator16 = localX->Integrator16_CSTATE;\r\n\r\n  /* MATLAB Function: '<S4>/MATLAB Function5' incorporates:\r\n   *  Integrator: '<S4>/Integrator21'\r\n   *  Integrator: '<S4>/Integrator22'\r\n   */\r\n  localDW->rtb_alpha_idx_1 = sin(localX->Integrator22_CSTATE) *\r\n    localDW->Integrator16;\r\n  localDW->rtb_alpha_idx_2 = cos(localX->Integrator22_CSTATE) *\r\n    localDW->Integrator19;\r\n  localDW->euler_dot1 = (localDW->rtb_alpha_idx_2 - localDW->rtb_alpha_idx_1) /\r\n    cos(localX->Integrator21_CSTATE);\r\n  localDW->euler_dot2 = sin(localX->Integrator22_CSTATE) * localDW->Integrator19\r\n    + cos(localX->Integrator22_CSTATE) * localDW->Integrator16;\r\n  localDW->euler_dot3 = (localDW->rtb_alpha_idx_1 - localDW->rtb_alpha_idx_2) *\r\n    tan(localDW->Integrator16) + *rty_AngularVelocity;\r\n\r\n  /* Product: '<S4>/Product14' incorporates:\r\n   *  Constant: '<S4>/[hzpc,hzpc,hzpc,hzpc]'\r\n   */\r\n  *rty_Steeringwheelangle = ((localP->hzpchzpchzpchzpc_Value[0] *\r\n    rty_throttleforce[0] + localP->hzpchzpchzpchzpc_Value[1] *\r\n    rty_throttleforce[1]) + localP->hzpchzpchzpchzpc_Value[2] *\r\n    rty_throttleforce[2]) + localP->hzpchzpchzpchzpc_Value[3] *\r\n    rty_throttleforce[3];\r\n\r\n  /* Gain: '<S4>/Gain6' incorporates:\r\n   *  Gain: '<S4>/Gain2'\r\n   *  Product: '<S4>/Product'\r\n   *  Product: '<S4>/Product17'\r\n   *  Sum: '<S4>/Sum'\r\n   *  Sum: '<S4>/Sum of Elements1'\r\n   */\r\n  localDW->Gain6 = (((((rty_throttleforce[0] + rty_throttleforce[1]) +\r\n                       rty_throttleforce[2]) + rty_throttleforce[3]) -\r\n                     (((rtu_lamda[0] * rtyyyy_Fy1Fy2Fy3Fy4[0] + rtu_lamda[1] *\r\n                        rtyyyy_Fy1Fy2Fy3Fy4[1]) + rtu_lamda[2] *\r\n                       rtyyyy_Fy1Fy2Fy3Fy4[2]) + rtu_lamda[3] *\r\n                      rtyyyy_Fy1Fy2Fy3Fy4[3])) + *rty_LateralVelocity *\r\n                    *rty_AngularVelocity * rtP.m) * (rtP.sw_x / rtP.m);\r\n\r\n  /* Gain: '<S4>/Gain11' incorporates:\r\n   *  Constant: '<S4>/Iz-Ix'\r\n   *  Constant: '<S4>/[l1,l1,-l2,-l2]'\r\n   *  Constant: '<S4>/dpc'\r\n   *  Constant: '<S4>/m*g*dpc'\r\n   *  Gain: '<S4>/Gain8'\r\n   *  Integrator: '<S4>/Integrator17'\r\n   *  Product: '<S4>/Product13'\r\n   *  Product: '<S4>/Product15'\r\n   *  Product: '<S4>/Product18'\r\n   *  Product: '<S4>/wywz2'\r\n   *  Product: '<S4>/wzwx'\r\n   *  Sum: '<S4>/Sum8'\r\n   */\r\n  localDW->Gain11 = (((((((localP->l1l1l2l2_Value[0] * localDW->rtb_Fs_idx_0 +\r\n    localP->l1l1l2l2_Value[1] * localDW->rtb_Fs_idx_1) + localP->l1l1l2l2_Value\r\n    [2] * localDW->rtb_Fs_idx_2) + localP->l1l1l2l2_Value[3] *\r\n    localDW->Derivative3) + *rty_Steeringwheelangle) + rtP.m * localDW->Gain6 *\r\n                       rtP.drc) + *rty_AngularVelocity * localDW->Integrator19 *\r\n                      rtP.Iz_Ix) + rtP.m * rtP.g * rtP.dpc *\r\n                     localX->Integrator17_CSTATE) * (rtP.sw_theta / rtP.Iy);\r\n\r\n  /* Product: '<S4>/Product2' incorporates:\r\n   *  Constant: '<S4>/[b1, -b2, b3, -b4]'\r\n   */\r\n  *rty_Steeringwheelangle = ((localP->b1b2b3b4_Value_f[0] * rty_throttleforce[0]\r\n    + localP->b1b2b3b4_Value_f[1] * rty_throttleforce[1]) +\r\n    localP->b1b2b3b4_Value_f[2] * rty_throttleforce[2]) +\r\n    localP->b1b2b3b4_Value_f[3] * rty_throttleforce[3];\r\n\r\n  /* Gain: '<S4>/Gain3' incorporates:\r\n   *  Constant: '<S4>/Ix-Iy'\r\n   *  Constant: '<S4>/[-b1, b2, -b3, b4]'\r\n   *  Constant: '<S4>/[l1, l1, -l2, -l2]'\r\n   *  Product: '<S4>/Product3'\r\n   *  Product: '<S4>/Product4'\r\n   *  Product: '<S4>/Product5'\r\n   *  Product: '<S4>/Product6'\r\n   *  Product: '<S4>/Product7'\r\n   *  Product: '<S4>/wxwy'\r\n   *  Product: '<S4>/wywz3'\r\n   *  Sum: '<S4>/Sum2'\r\n   */\r\n  localDW->Gain3 = (((((((localP->l1l1l2l2_Value_m[0] * rtyyyy_Fy1Fy2Fy3Fy4[0] +\r\n    localP->l1l1l2l2_Value_m[1] * rtyyyy_Fy1Fy2Fy3Fy4[1]) +\r\n    localP->l1l1l2l2_Value_m[2] * rtyyyy_Fy1Fy2Fy3Fy4[2]) +\r\n                        localP->l1l1l2l2_Value_m[3] * rtyyyy_Fy1Fy2Fy3Fy4[3]) + *\r\n                       rty_Steeringwheelangle) + (((localP->l1l1l2l2_Value_m[0] *\r\n    rtu_lamda[0] * rty_throttleforce[0] + localP->l1l1l2l2_Value_m[1] *\r\n    rtu_lamda[1] * rty_throttleforce[1]) + localP->l1l1l2l2_Value_m[2] *\r\n    rtu_lamda[2] * rty_throttleforce[2]) + localP->l1l1l2l2_Value_m[3] *\r\n    rtu_lamda[3] * rty_throttleforce[3])) + (((localP->b1b2b3b4_Value_j[0] *\r\n    rtu_lamda[0] * rtyyyy_Fy1Fy2Fy3Fy4[0] + localP->b1b2b3b4_Value_j[1] *\r\n    rtu_lamda[1] * rtyyyy_Fy1Fy2Fy3Fy4[1]) + localP->b1b2b3b4_Value_j[2] *\r\n    rtu_lamda[2] * rtyyyy_Fy1Fy2Fy3Fy4[2]) + localP->b1b2b3b4_Value_j[3] *\r\n    rtu_lamda[3] * rtyyyy_Fy1Fy2Fy3Fy4[3])) + localDW->Integrator19 *\r\n                    *rty_AngularVelocity * rtP.Ix_Iy) * (rtP.sw_psi / rtP.Iz);\r\n\r\n  /* Integrator: '<S4>/Integrator18' */\r\n  *rty_Steeringwheelangle = localX->Integrator18_CSTATE;\r\n\r\n  /* Product: '<S4>/Product16' incorporates:\r\n   *  Constant: '<S4>/m*g*drc'\r\n   */\r\n  localDW->Derivative2 = rtP.m * rtP.g * rtP.drc * *rty_Steeringwheelangle;\r\n\r\n  /* Gain: '<S4>/Gain1' incorporates:\r\n   *  Product: '<S4>/Product8'\r\n   */\r\n  *rty_Steeringwheelangle = *rtyy_ActualVelocityLateralAcceleration *\r\n    *rty_AngularVelocity * rtP.m;\r\n\r\n  /* Gain: '<S4>/Gain12' incorporates:\r\n   *  Constant: '<S4>/Iy-Iz'\r\n   *  Constant: '<S4>/b1, -b2, b3, -b4'\r\n   *  Constant: '<S4>/drc'\r\n   *  Constant: '<S4>/hzrc'\r\n   *  Product: '<S4>/Product10'\r\n   *  Product: '<S4>/Product11'\r\n   *  Product: '<S4>/Product12'\r\n   *  Product: '<S4>/Product13'\r\n   *  Product: '<S4>/wywz'\r\n   *  Product: '<S4>/wywz1'\r\n   *  Sum: '<S4>/Sum9'\r\n   */\r\n  localDW->Gain12 = (((((((localP->hzrc_Value[0] * rtyyyy_Fy1Fy2Fy3Fy4[0] +\r\n    localP->hzrc_Value[1] * rtyyyy_Fy1Fy2Fy3Fy4[1]) + localP->hzrc_Value[2] *\r\n    rtyyyy_Fy1Fy2Fy3Fy4[2]) + localP->hzrc_Value[3] * rtyyyy_Fy1Fy2Fy3Fy4[3]) +\r\n                        localDW->Derivative2) + *rty_Steeringwheelangle *\r\n                       rtP.dpc) + (((localP->b1b2b3b4_Value[0] *\r\n    localDW->rtb_Fs_idx_0 + localP->b1b2b3b4_Value[1] * localDW->rtb_Fs_idx_1) +\r\n    localP->b1b2b3b4_Value[2] * localDW->rtb_Fs_idx_2) + localP->b1b2b3b4_Value\r\n    [3] * localDW->Derivative3)) + *rty_AngularVelocity * localDW->Integrator16 *\r\n                     rtP.Iy_Iz) * (rtP.sw_phi / rtP.Ix);\r\n\r\n  /* Gain: '<S4>/Gain5' incorporates:\r\n   *  Product: '<S4>/Product1'\r\n   *  Sum: '<S4>/Sum of Elements'\r\n   *  Sum: '<S4>/Sum1'\r\n   */\r\n  localDW->Gain5 = (((((rtu_lamda[0] * rty_throttleforce[0] + rtu_lamda[1] *\r\n                        rty_throttleforce[1]) + rtu_lamda[2] *\r\n                       rty_throttleforce[2]) + rtu_lamda[3] * rty_throttleforce\r\n                      [3]) + (((rtyyyy_Fy1Fy2Fy3Fy4[0] + rtyyyy_Fy1Fy2Fy3Fy4[1])\r\n    + rtyyyy_Fy1Fy2Fy3Fy4[2]) + rtyyyy_Fy1Fy2Fy3Fy4[3])) -\r\n                    *rty_Steeringwheelangle) * (rtP.sw_y / rtP.m);\r\n\r\n  /* Product: '<S45>/IProd Out' */\r\n  localDW->IProdOut = localDW->rtb_alpha_idx_0;\r\n\r\n  /* Gain: '<S93>/Integral Gain' */\r\n  localDW->IntegralGain = localP->PIDController1_I * localDW->absx21;\r\n\r\n  /* TransferFcn: '<S3>/Transfer Fcn' */\r\n  localDW->rtb_alpha_idx_0 = localP->TransferFcn_C * localX->TransferFcn_CSTATE;\r\n\r\n  /* MATLAB Function: '<S5>/FWS Controller' incorporates:\r\n   *  Integrator: '<S4>/Integrator5'\r\n   *  Integrator: '<S4>/Integrator6'\r\n   *  MATLAB Function: '<S4>/MATLAB Function2'\r\n   */\r\n  localDW->absx31 = rtP.radius;\r\n  localDW->Derivative2 = cos(localDW->rtb_alpha_idx_0);\r\n  localDW->absx21 = sin(localDW->rtb_alpha_idx_0);\r\n  localDW->rtb_alpha_idx_0 = localDW->Derivative2;\r\n  localDW->rtb_alpha_idx_2 = localDW->absx21;\r\n  localDW->rtb_alpha_idx_1 = localDW->absx21;\r\n  localDW->rtb_alpha_idx_3 = -localDW->Derivative2;\r\n  if (rtP.radius == 0.0) {\r\n    localDW->absx31 = 1000.0;\r\n  }\r\n\r\n  localDW->Traj_loc[0].f1[0] = localDW->Derivative2 * rtP.x[0];\r\n  localDW->Traj_loc[1].f1[0] = localDW->Derivative2 * rtP.x[1];\r\n  localDW->Traj_loc[2].f1[0] = localDW->Derivative2 * rtP.x[2];\r\n  localDW->Traj_loc[3].f1[0] = localDW->Derivative2 * rtP.x[3];\r\n  localDW->Traj_loc[4].f1[0] = localDW->Derivative2 * rtP.x[4];\r\n  localDW->Traj_loc[5].f1[0] = localDW->Derivative2 * rtP.x[5];\r\n  localDW->Traj_loc[6].f1[0] = localDW->Derivative2 * rtP.x[6];\r\n  localDW->Traj_loc[7].f1[0] = localDW->Derivative2 * rtP.x[7];\r\n  localDW->Traj_loc[8].f1[0] = localDW->Derivative2 * rtP.x[8];\r\n  localDW->Traj_loc[9].f1[0] = localDW->Derivative2 * rtP.x[9];\r\n  localDW->Traj_loc[10].f1[0] = localDW->Derivative2 * rtP.x[10];\r\n  localDW->Traj_loc[11].f1[0] = localDW->Derivative2 * rtP.x[11];\r\n  localDW->Traj_loc[12].f1[0] = localDW->Derivative2 * rtP.x[12];\r\n  localDW->Traj_loc[13].f1[0] = localDW->Derivative2 * rtP.x[13];\r\n  localDW->Traj_loc[14].f1[0] = localDW->Derivative2 * rtP.x[14];\r\n  localDW->Traj_loc[15].f1[0] = localDW->Derivative2 * rtP.x[15];\r\n  localDW->Traj_loc[16].f1[0] = localDW->Derivative2 * rtP.x[16];\r\n  localDW->Traj_loc[17].f1[0] = localDW->Derivative2 * rtP.x[17];\r\n  localDW->Traj_loc[18].f1[0] = localDW->Derivative2 * rtP.x[18];\r\n  localDW->Traj_loc[19].f1[0] = localDW->Derivative2 * rtP.x[19];\r\n  localDW->Traj_loc[20].f1[0] = localDW->Derivative2 * rtP.x[20];\r\n  localDW->Traj_loc[21].f1[0] = localDW->Derivative2 * rtP.x[21];\r\n  localDW->Traj_loc[22].f1[0] = localDW->Derivative2 * rtP.x[22];\r\n  localDW->Traj_loc[23].f1[0] = localDW->Derivative2 * rtP.x[23];\r\n  localDW->Traj_loc[24].f1[0] = localDW->Derivative2 * rtP.x[24];\r\n  localDW->Traj_loc[25].f1[0] = localDW->Derivative2 * rtP.x[25];\r\n  localDW->Traj_loc[26].f1[0] = localDW->Derivative2 * rtP.x[26];\r\n  localDW->Traj_loc[27].f1[0] = localDW->Derivative2 * rtP.x[27];\r\n  localDW->Traj_loc[28].f1[0] = localDW->Derivative2 * rtP.x[28];\r\n  localDW->Traj_loc[29].f1[0] = localDW->Derivative2 * rtP.x[29];\r\n  localDW->Traj_loc[30].f1[0] = localDW->Derivative2 * rtP.x[30];\r\n  localDW->Traj_loc[31].f1[0] = localDW->Derivative2 * rtP.x[31];\r\n  localDW->Traj_loc[32].f1[0] = localDW->Derivative2 * rtP.x[32];\r\n  localDW->Traj_loc[33].f1[0] = localDW->Derivative2 * rtP.x[33];\r\n  localDW->Traj_loc[34].f1[0] = localDW->Derivative2 * rtP.x[34];\r\n  localDW->Traj_loc[35].f1[0] = localDW->Derivative2 * rtP.x[35];\r\n  localDW->Traj_loc[36].f1[0] = localDW->Derivative2 * rtP.x[36];\r\n  localDW->Traj_loc[37].f1[0] = localDW->Derivative2 * rtP.x[37];\r\n  localDW->Traj_loc[38].f1[0] = localDW->Derivative2 * rtP.x[38];\r\n  localDW->Traj_loc[39].f1[0] = localDW->Derivative2 * rtP.x[39];\r\n  localDW->Traj_loc[40].f1[0] = localDW->Derivative2 * rtP.x[40];\r\n  localDW->Traj_loc[41].f1[0] = localDW->Derivative2 * rtP.x[41];\r\n  localDW->Traj_loc[42].f1[0] = localDW->Derivative2 * rtP.x[42];\r\n  localDW->Traj_loc[43].f1[0] = localDW->Derivative2 * rtP.x[43];\r\n  localDW->Traj_loc[44].f1[0] = localDW->Derivative2 * rtP.x[44];\r\n  localDW->Traj_loc[45].f1[0] = localDW->Derivative2 * rtP.x[45];\r\n  localDW->Traj_loc[46].f1[0] = localDW->Derivative2 * rtP.x[46];\r\n  localDW->Traj_loc[47].f1[0] = localDW->Derivative2 * rtP.x[47];\r\n  localDW->Traj_loc[48].f1[0] = localDW->Derivative2 * rtP.x[48];\r\n  localDW->Traj_loc[49].f1[0] = localDW->Derivative2 * rtP.x[49];\r\n  localDW->Traj_loc[50].f1[0] = localDW->Derivative2 * rtP.x[50];\r\n  localDW->Traj_loc[51].f1[0] = localDW->Derivative2 * rtP.x[51];\r\n  localDW->Traj_loc[52].f1[0] = localDW->Derivative2 * rtP.x[52];\r\n  localDW->Traj_loc[53].f1[0] = localDW->Derivative2 * rtP.x[53];\r\n  localDW->Traj_loc[54].f1[0] = localDW->Derivative2 * rtP.x[54];\r\n  localDW->Traj_loc[55].f1[0] = localDW->Derivative2 * rtP.x[55];\r\n  localDW->Traj_loc[56].f1[0] = localDW->Derivative2 * rtP.x[56];\r\n  localDW->Traj_loc[57].f1[0] = localDW->Derivative2 * rtP.x[57];\r\n  localDW->Traj_loc[58].f1[0] = localDW->Derivative2 * rtP.x[58];\r\n  localDW->Traj_loc[59].f1[0] = localDW->Derivative2 * rtP.x[59];\r\n  localDW->Traj_loc[60].f1[0] = localDW->Derivative2 * rtP.x[60];\r\n  localDW->Traj_loc[61].f1[0] = localDW->Derivative2 * rtP.x[61];\r\n  localDW->Traj_loc[62].f1[0] = localDW->Derivative2 * rtP.x[62];\r\n  localDW->Traj_loc[63].f1[0] = localDW->Derivative2 * rtP.x[63];\r\n  localDW->Traj_loc[64].f1[0] = localDW->Derivative2 * rtP.x[64];\r\n  localDW->Traj_loc[65].f1[0] = localDW->Derivative2 * rtP.x[65];\r\n  localDW->Traj_loc[66].f1[0] = localDW->Derivative2 * rtP.x[66];\r\n  localDW->Traj_loc[67].f1[0] = localDW->Derivative2 * rtP.x[67];\r\n  localDW->Traj_loc[68].f1[0] = localDW->Derivative2 * rtP.x[68];\r\n  localDW->Traj_loc[69].f1[0] = localDW->Derivative2 * rtP.x[69];\r\n  localDW->Traj_loc[70].f1[0] = localDW->Derivative2 * rtP.x[70];\r\n  localDW->Traj_loc[71].f1[0] = localDW->Derivative2 * rtP.x[71];\r\n  localDW->Traj_loc[72].f1[0] = localDW->Derivative2 * rtP.x[72];\r\n  localDW->Traj_loc[73].f1[0] = localDW->Derivative2 * rtP.x[73];\r\n  localDW->Traj_loc[74].f1[0] = localDW->Derivative2 * rtP.x[74];\r\n  localDW->Traj_loc[75].f1[0] = localDW->Derivative2 * rtP.x[75];\r\n  localDW->Traj_loc[76].f1[0] = localDW->Derivative2 * rtP.x[76];\r\n  localDW->Traj_loc[77].f1[0] = localDW->Derivative2 * rtP.x[77];\r\n  localDW->Traj_loc[78].f1[0] = localDW->Derivative2 * rtP.x[78];\r\n  localDW->Traj_loc[79].f1[0] = localDW->Derivative2 * rtP.x[79];\r\n  localDW->Traj_loc[80].f1[0] = localDW->Derivative2 * rtP.x[80];\r\n  localDW->Traj_loc[81].f1[0] = localDW->Derivative2 * rtP.x[81];\r\n  localDW->Traj_loc[82].f1[0] = localDW->Derivative2 * rtP.x[82];\r\n  localDW->Traj_loc[83].f1[0] = localDW->Derivative2 * rtP.x[83];\r\n  localDW->Traj_loc[84].f1[0] = localDW->Derivative2 * rtP.x[84];\r\n  localDW->Traj_loc[85].f1[0] = localDW->Derivative2 * rtP.x[85];\r\n  localDW->Traj_loc[86].f1[0] = localDW->Derivative2 * rtP.x[86];\r\n  localDW->Traj_loc[87].f1[0] = localDW->Derivative2 * rtP.x[87];\r\n  localDW->Traj_loc[88].f1[0] = localDW->Derivative2 * rtP.x[88];\r\n  localDW->Traj_loc[89].f1[0] = localDW->Derivative2 * rtP.x[89];\r\n  localDW->Traj_loc[90].f1[0] = localDW->Derivative2 * rtP.x[90];\r\n  localDW->Traj_loc[91].f1[0] = localDW->Derivative2 * rtP.x[91];\r\n  localDW->Traj_loc[92].f1[0] = localDW->Derivative2 * rtP.x[92];\r\n  localDW->Traj_loc[93].f1[0] = localDW->Derivative2 * rtP.x[93];\r\n  localDW->Traj_loc[94].f1[0] = localDW->Derivative2 * rtP.x[94];\r\n  localDW->Traj_loc[95].f1[0] = localDW->Derivative2 * rtP.x[95];\r\n  localDW->Traj_loc[96].f1[0] = localDW->Derivative2 * rtP.x[96];\r\n  localDW->Traj_loc[97].f1[0] = localDW->Derivative2 * rtP.x[97];\r\n  localDW->Traj_loc[98].f1[0] = localDW->Derivative2 * rtP.x[98];\r\n  localDW->Traj_loc[99].f1[0] = localDW->Derivative2 * rtP.x[99];\r\n  localDW->Traj_loc[100].f1[0] = localDW->Derivative2 * rtP.x[100];\r\n  localDW->Traj_loc[101].f1[0] = localDW->Derivative2 * rtP.x[101];\r\n  localDW->Traj_loc[102].f1[0] = localDW->Derivative2 * rtP.x[102];\r\n  localDW->Traj_loc[103].f1[0] = localDW->Derivative2 * rtP.x[103];\r\n  localDW->Traj_loc[104].f1[0] = localDW->Derivative2 * rtP.x[104];\r\n  localDW->Traj_loc[105].f1[0] = localDW->Derivative2 * rtP.x[105];\r\n  localDW->Traj_loc[106].f1[0] = localDW->Derivative2 * rtP.x[106];\r\n  localDW->Traj_loc[107].f1[0] = localDW->Derivative2 * rtP.x[107];\r\n  localDW->Traj_loc[108].f1[0] = localDW->Derivative2 * rtP.x[108];\r\n  localDW->Traj_loc[109].f1[0] = localDW->Derivative2 * rtP.x[109];\r\n  localDW->Traj_loc[110].f1[0] = localDW->Derivative2 * rtP.x[110];\r\n  localDW->Traj_loc[111].f1[0] = localDW->Derivative2 * rtP.x[111];\r\n  localDW->Traj_loc[112].f1[0] = localDW->Derivative2 * rtP.x[112];\r\n  localDW->Traj_loc[113].f1[0] = localDW->Derivative2 * rtP.x[113];\r\n  localDW->Traj_loc[114].f1[0] = localDW->Derivative2 * rtP.x[114];\r\n  localDW->Traj_loc[115].f1[0] = localDW->Derivative2 * rtP.x[115];\r\n  localDW->Traj_loc[116].f1[0] = localDW->Derivative2 * rtP.x[116];\r\n  localDW->Traj_loc[117].f1[0] = localDW->Derivative2 * rtP.x[117];\r\n  localDW->Traj_loc[118].f1[0] = localDW->Derivative2 * rtP.x[118];\r\n  localDW->Traj_loc[119].f1[0] = localDW->Derivative2 * rtP.x[119];\r\n  localDW->Traj_loc[120].f1[0] = localDW->Derivative2 * rtP.x[120];\r\n  localDW->Traj_loc[121].f1[0] = localDW->Derivative2 * rtP.x[121];\r\n  localDW->Traj_loc[122].f1[0] = localDW->Derivative2 * rtP.x[122];\r\n  localDW->Traj_loc[123].f1[0] = localDW->Derivative2 * rtP.x[123];\r\n  localDW->Traj_loc[124].f1[0] = localDW->Derivative2 * rtP.x[124];\r\n  localDW->Traj_loc[125].f1[0] = localDW->Derivative2 * rtP.x[125];\r\n  localDW->Traj_loc[126].f1[0] = localDW->Derivative2 * rtP.x[126];\r\n  localDW->Traj_loc[127].f1[0] = localDW->Derivative2 * rtP.x[127];\r\n  localDW->Traj_loc[128].f1[0] = localDW->Derivative2 * rtP.x[128];\r\n  localDW->Traj_loc[129].f1[0] = localDW->Derivative2 * rtP.x[129];\r\n  localDW->Traj_loc[130].f1[0] = localDW->Derivative2 * rtP.x[130];\r\n  localDW->Traj_loc[131].f1[0] = localDW->Derivative2 * rtP.x[131];\r\n  localDW->Traj_loc[132].f1[0] = localDW->Derivative2 * rtP.x[132];\r\n  localDW->Traj_loc[133].f1[0] = localDW->Derivative2 * rtP.x[133];\r\n  localDW->Traj_loc[134].f1[0] = localDW->Derivative2 * rtP.x[134];\r\n  localDW->Traj_loc[135].f1[0] = localDW->Derivative2 * rtP.x[135];\r\n  localDW->Traj_loc[136].f1[0] = localDW->Derivative2 * rtP.x[136];\r\n  localDW->Traj_loc[137].f1[0] = localDW->Derivative2 * rtP.x[137];\r\n  localDW->Traj_loc[138].f1[0] = localDW->Derivative2 * rtP.x[138];\r\n  localDW->Traj_loc[139].f1[0] = localDW->Derivative2 * rtP.x[139];\r\n  localDW->Traj_loc[140].f1[0] = localDW->Derivative2 * rtP.x[140];\r\n  localDW->Traj_loc[141].f1[0] = localDW->Derivative2 * rtP.x[141];\r\n  localDW->Traj_loc[142].f1[0] = localDW->Derivative2 * rtP.x[142];\r\n  localDW->Traj_loc[143].f1[0] = localDW->Derivative2 * rtP.x[143];\r\n  localDW->Traj_loc[144].f1[0] = localDW->Derivative2 * rtP.x[144];\r\n  localDW->Traj_loc[145].f1[0] = localDW->Derivative2 * rtP.x[145];\r\n  localDW->Traj_loc[146].f1[0] = localDW->Derivative2 * rtP.x[146];\r\n  localDW->Traj_loc[147].f1[0] = localDW->Derivative2 * rtP.x[147];\r\n  localDW->Traj_loc[148].f1[0] = localDW->Derivative2 * rtP.x[148];\r\n  localDW->Traj_loc[149].f1[0] = localDW->Derivative2 * rtP.x[149];\r\n  localDW->Traj_loc[150].f1[0] = localDW->Derivative2 * rtP.x[150];\r\n  localDW->Traj_loc[151].f1[0] = localDW->Derivative2 * rtP.x[151];\r\n  localDW->Traj_loc[152].f1[0] = localDW->Derivative2 * rtP.x[152];\r\n  localDW->Traj_loc[153].f1[0] = localDW->Derivative2 * rtP.x[153];\r\n  localDW->Traj_loc[154].f1[0] = localDW->Derivative2 * rtP.x[154];\r\n  localDW->Traj_loc[155].f1[0] = localDW->Derivative2 * rtP.x[155];\r\n  localDW->Traj_loc[156].f1[0] = localDW->Derivative2 * rtP.x[156];\r\n  localDW->Traj_loc[157].f1[0] = localDW->Derivative2 * rtP.x[157];\r\n  localDW->Traj_loc[158].f1[0] = localDW->Derivative2 * rtP.x[158];\r\n  localDW->Traj_loc[159].f1[0] = localDW->Derivative2 * rtP.x[159];\r\n  localDW->Traj_loc[160].f1[0] = localDW->Derivative2 * rtP.x[160];\r\n  localDW->Traj_loc[161].f1[0] = localDW->Derivative2 * rtP.x[161];\r\n  localDW->Traj_loc[162].f1[0] = localDW->Derivative2 * rtP.x[162];\r\n  localDW->Traj_loc[163].f1[0] = localDW->Derivative2 * rtP.x[163];\r\n  localDW->Traj_loc[164].f1[0] = localDW->Derivative2 * rtP.x[164];\r\n  localDW->Traj_loc[165].f1[0] = localDW->Derivative2 * rtP.x[165];\r\n  localDW->Traj_loc[166].f1[0] = localDW->Derivative2 * rtP.x[166];\r\n  localDW->Traj_loc[167].f1[0] = localDW->Derivative2 * rtP.x[167];\r\n  localDW->Traj_loc[168].f1[0] = localDW->Derivative2 * rtP.x[168];\r\n  localDW->Traj_loc[169].f1[0] = localDW->Derivative2 * rtP.x[169];\r\n  localDW->Traj_loc[170].f1[0] = localDW->Derivative2 * rtP.x[170];\r\n  localDW->Traj_loc[171].f1[0] = localDW->Derivative2 * rtP.x[171];\r\n  localDW->Traj_loc[172].f1[0] = localDW->Derivative2 * rtP.x[172];\r\n  localDW->Traj_loc[173].f1[0] = localDW->Derivative2 * rtP.x[173];\r\n  localDW->Traj_loc[174].f1[0] = localDW->Derivative2 * rtP.x[174];\r\n  localDW->Traj_loc[175].f1[0] = localDW->Derivative2 * rtP.x[175];\r\n  localDW->Traj_loc[176].f1[0] = localDW->Derivative2 * rtP.x[176];\r\n  localDW->Traj_loc[177].f1[0] = localDW->Derivative2 * rtP.x[177];\r\n  localDW->Traj_loc[178].f1[0] = localDW->Derivative2 * rtP.x[178];\r\n  localDW->Traj_loc[179].f1[0] = localDW->Derivative2 * rtP.x[179];\r\n  localDW->Traj_loc[180].f1[0] = localDW->Derivative2 * rtP.x[180];\r\n  localDW->Traj_loc[181].f1[0] = localDW->Derivative2 * rtP.x[181];\r\n  localDW->Traj_loc[182].f1[0] = localDW->Derivative2 * rtP.x[182];\r\n  localDW->Traj_loc[183].f1[0] = localDW->Derivative2 * rtP.x[183];\r\n  localDW->Traj_loc[184].f1[0] = localDW->Derivative2 * rtP.x[184];\r\n  localDW->Traj_loc[185].f1[0] = localDW->Derivative2 * rtP.x[185];\r\n  localDW->Traj_loc[186].f1[0] = localDW->Derivative2 * rtP.x[186];\r\n  localDW->Traj_loc[187].f1[0] = localDW->Derivative2 * rtP.x[187];\r\n  localDW->Traj_loc[188].f1[0] = localDW->Derivative2 * rtP.x[188];\r\n  localDW->Traj_loc[189].f1[0] = localDW->Derivative2 * rtP.x[189];\r\n  localDW->Traj_loc[190].f1[0] = localDW->Derivative2 * rtP.x[190];\r\n  localDW->Traj_loc[191].f1[0] = localDW->Derivative2 * rtP.x[191];\r\n  localDW->Traj_loc[192].f1[0] = localDW->Derivative2 * rtP.x[192];\r\n  localDW->Traj_loc[193].f1[0] = localDW->Derivative2 * rtP.x[193];\r\n  localDW->Traj_loc[194].f1[0] = localDW->Derivative2 * rtP.x[194];\r\n  localDW->Traj_loc[195].f1[0] = localDW->Derivative2 * rtP.x[195];\r\n  localDW->Traj_loc[196].f1[0] = localDW->Derivative2 * rtP.x[196];\r\n  localDW->Traj_loc[197].f1[0] = localDW->Derivative2 * rtP.x[197];\r\n  localDW->Traj_loc[198].f1[0] = localDW->Derivative2 * rtP.x[198];\r\n  localDW->Traj_loc[199].f1[0] = localDW->Derivative2 * rtP.x[199];\r\n  localDW->Traj_loc[200].f1[0] = localDW->Derivative2 * rtP.x[200];\r\n  localDW->Traj_loc[201].f1[0] = localDW->Derivative2 * rtP.x[201];\r\n  localDW->Traj_loc[202].f1[0] = localDW->Derivative2 * rtP.x[202];\r\n  localDW->Traj_loc[203].f1[0] = localDW->Derivative2 * rtP.x[203];\r\n  localDW->Traj_loc[204].f1[0] = localDW->Derivative2 * rtP.x[204];\r\n  localDW->Traj_loc[205].f1[0] = localDW->Derivative2 * rtP.x[205];\r\n  localDW->Traj_loc[206].f1[0] = localDW->Derivative2 * rtP.x[206];\r\n  localDW->Traj_loc[207].f1[0] = localDW->Derivative2 * rtP.x[207];\r\n  localDW->Traj_loc[208].f1[0] = localDW->Derivative2 * rtP.x[208];\r\n  localDW->Traj_loc[209].f1[0] = localDW->Derivative2 * rtP.x[209];\r\n  localDW->Traj_loc[210].f1[0] = localDW->Derivative2 * rtP.x[210];\r\n  localDW->Traj_loc[211].f1[0] = localDW->Derivative2 * rtP.x[211];\r\n  localDW->Traj_loc[212].f1[0] = localDW->Derivative2 * rtP.x[212];\r\n  localDW->Traj_loc[213].f1[0] = localDW->Derivative2 * rtP.x[213];\r\n  localDW->Traj_loc[214].f1[0] = localDW->Derivative2 * rtP.x[214];\r\n  localDW->Traj_loc[215].f1[0] = localDW->Derivative2 * rtP.x[215];\r\n  localDW->Traj_loc[216].f1[0] = localDW->Derivative2 * rtP.x[216];\r\n  localDW->Traj_loc[217].f1[0] = localDW->Derivative2 * rtP.x[217];\r\n  localDW->Traj_loc[218].f1[0] = localDW->Derivative2 * rtP.x[218];\r\n  localDW->Traj_loc[219].f1[0] = localDW->Derivative2 * rtP.x[219];\r\n  localDW->Traj_loc[220].f1[0] = localDW->Derivative2 * rtP.x[220];\r\n  localDW->Traj_loc[221].f1[0] = localDW->Derivative2 * rtP.x[221];\r\n  localDW->Traj_loc[222].f1[0] = localDW->Derivative2 * rtP.x[222];\r\n  localDW->Traj_loc[223].f1[0] = localDW->Derivative2 * rtP.x[223];\r\n  localDW->Traj_loc[224].f1[0] = localDW->Derivative2 * rtP.x[224];\r\n  localDW->Traj_loc[225].f1[0] = localDW->Derivative2 * rtP.x[225];\r\n  localDW->Traj_loc[226].f1[0] = localDW->Derivative2 * rtP.x[226];\r\n  localDW->Traj_loc[227].f1[0] = localDW->Derivative2 * rtP.x[227];\r\n  localDW->Traj_loc[228].f1[0] = localDW->Derivative2 * rtP.x[228];\r\n  localDW->Traj_loc[229].f1[0] = localDW->Derivative2 * rtP.x[229];\r\n  localDW->Traj_loc[230].f1[0] = localDW->Derivative2 * rtP.x[230];\r\n  localDW->Traj_loc[231].f1[0] = localDW->Derivative2 * rtP.x[231];\r\n  localDW->Traj_loc[232].f1[0] = localDW->Derivative2 * rtP.x[232];\r\n  localDW->Traj_loc[233].f1[0] = localDW->Derivative2 * rtP.x[233];\r\n  localDW->Traj_loc[234].f1[0] = localDW->Derivative2 * rtP.x[234];\r\n  localDW->Traj_loc[235].f1[0] = localDW->Derivative2 * rtP.x[235];\r\n  localDW->Traj_loc[236].f1[0] = localDW->Derivative2 * rtP.x[236];\r\n  localDW->Traj_loc[237].f1[0] = localDW->Derivative2 * rtP.x[237];\r\n  localDW->Traj_loc[238].f1[0] = localDW->Derivative2 * rtP.x[238];\r\n  localDW->Traj_loc[239].f1[0] = localDW->Derivative2 * rtP.x[239];\r\n  localDW->Traj_loc[240].f1[0] = localDW->Derivative2 * rtP.x[240];\r\n  localDW->Traj_loc[241].f1[0] = localDW->Derivative2 * rtP.x[241];\r\n  localDW->Traj_loc[242].f1[0] = localDW->Derivative2 * rtP.x[242];\r\n  localDW->Traj_loc[243].f1[0] = localDW->Derivative2 * rtP.x[243];\r\n  localDW->Traj_loc[244].f1[0] = localDW->Derivative2 * rtP.x[244];\r\n  localDW->Traj_loc[245].f1[0] = localDW->Derivative2 * rtP.x[245];\r\n  localDW->Traj_loc[246].f1[0] = localDW->Derivative2 * rtP.x[246];\r\n  localDW->Traj_loc[247].f1[0] = localDW->Derivative2 * rtP.x[247];\r\n  localDW->Traj_loc[248].f1[0] = localDW->Derivative2 * rtP.x[248];\r\n  localDW->Traj_loc[249].f1[0] = localDW->Derivative2 * rtP.x[249];\r\n  localDW->Traj_loc[250].f1[0] = localDW->Derivative2 * rtP.x[250];\r\n  localDW->Traj_loc[251].f1[0] = localDW->Derivative2 * rtP.x[251];\r\n  localDW->Traj_loc[252].f1[0] = localDW->Derivative2 * rtP.x[252];\r\n  localDW->Traj_loc[253].f1[0] = localDW->Derivative2 * rtP.x[253];\r\n  localDW->Traj_loc[254].f1[0] = localDW->Derivative2 * rtP.x[254];\r\n  localDW->Traj_loc[255].f1[0] = localDW->Derivative2 * rtP.x[255];\r\n  localDW->Traj_loc[256].f1[0] = localDW->Derivative2 * rtP.x[256];\r\n  localDW->Traj_loc[257].f1[0] = localDW->Derivative2 * rtP.x[257];\r\n  localDW->Traj_loc[258].f1[0] = localDW->Derivative2 * rtP.x[258];\r\n  localDW->Traj_loc[259].f1[0] = localDW->Derivative2 * rtP.x[259];\r\n  localDW->Traj_loc[260].f1[0] = localDW->Derivative2 * rtP.x[260];\r\n  localDW->Traj_loc[261].f1[0] = localDW->Derivative2 * rtP.x[261];\r\n  localDW->Traj_loc[262].f1[0] = localDW->Derivative2 * rtP.x[262];\r\n  localDW->Traj_loc[263].f1[0] = localDW->Derivative2 * rtP.x[263];\r\n  localDW->Traj_loc[264].f1[0] = localDW->Derivative2 * rtP.x[264];\r\n  localDW->Traj_loc[265].f1[0] = localDW->Derivative2 * rtP.x[265];\r\n  localDW->Traj_loc[266].f1[0] = localDW->Derivative2 * rtP.x[266];\r\n  localDW->Traj_loc[267].f1[0] = localDW->Derivative2 * rtP.x[267];\r\n  localDW->Traj_loc[268].f1[0] = localDW->Derivative2 * rtP.x[268];\r\n  localDW->Traj_loc[269].f1[0] = localDW->Derivative2 * rtP.x[269];\r\n  localDW->Traj_loc[270].f1[0] = localDW->Derivative2 * rtP.x[270];\r\n  localDW->Traj_loc[271].f1[0] = localDW->Derivative2 * rtP.x[271];\r\n  localDW->Traj_loc[272].f1[0] = localDW->Derivative2 * rtP.x[272];\r\n  localDW->Traj_loc[273].f1[0] = localDW->Derivative2 * rtP.x[273];\r\n  localDW->Traj_loc[274].f1[0] = localDW->Derivative2 * rtP.x[274];\r\n  localDW->Traj_loc[275].f1[0] = localDW->Derivative2 * rtP.x[275];\r\n  localDW->Traj_loc[276].f1[0] = localDW->Derivative2 * rtP.x[276];\r\n  localDW->Traj_loc[277].f1[0] = localDW->Derivative2 * rtP.x[277];\r\n  localDW->Traj_loc[278].f1[0] = localDW->Derivative2 * rtP.x[278];\r\n  localDW->Traj_loc[279].f1[0] = localDW->Derivative2 * rtP.x[279];\r\n  localDW->Traj_loc[280].f1[0] = localDW->Derivative2 * rtP.x[280];\r\n  localDW->Traj_loc[281].f1[0] = localDW->Derivative2 * rtP.x[281];\r\n  localDW->Traj_loc[282].f1[0] = localDW->Derivative2 * rtP.x[282];\r\n  localDW->Traj_loc[283].f1[0] = localDW->Derivative2 * rtP.x[283];\r\n  localDW->Traj_loc[284].f1[0] = localDW->Derivative2 * rtP.x[284];\r\n  localDW->Traj_loc[285].f1[0] = localDW->Derivative2 * rtP.x[285];\r\n  localDW->Traj_loc[286].f1[0] = localDW->Derivative2 * rtP.x[286];\r\n  localDW->Traj_loc[287].f1[0] = localDW->Derivative2 * rtP.x[287];\r\n  localDW->Traj_loc[288].f1[0] = localDW->Derivative2 * rtP.x[288];\r\n  localDW->Traj_loc[289].f1[0] = localDW->Derivative2 * rtP.x[289];\r\n  localDW->Traj_loc[290].f1[0] = localDW->Derivative2 * rtP.x[290];\r\n  localDW->Traj_loc[291].f1[0] = localDW->Derivative2 * rtP.x[291];\r\n  localDW->Traj_loc[292].f1[0] = localDW->Derivative2 * rtP.x[292];\r\n  localDW->Traj_loc[293].f1[0] = localDW->Derivative2 * rtP.x[293];\r\n  localDW->Traj_loc[294].f1[0] = localDW->Derivative2 * rtP.x[294];\r\n  localDW->Traj_loc[295].f1[0] = localDW->Derivative2 * rtP.x[295];\r\n  localDW->Traj_loc[296].f1[0] = localDW->Derivative2 * rtP.x[296];\r\n  localDW->Traj_loc[297].f1[0] = localDW->Derivative2 * rtP.x[297];\r\n  localDW->Traj_loc[298].f1[0] = localDW->Derivative2 * rtP.x[298];\r\n  localDW->Traj_loc[299].f1[0] = localDW->Derivative2 * rtP.x[299];\r\n  localDW->Traj_loc[300].f1[0] = localDW->Derivative2 * rtP.x[300];\r\n  localDW->Traj_loc[301].f1[0] = localDW->Derivative2 * rtP.x[301];\r\n  localDW->Traj_loc[302].f1[0] = localDW->Derivative2 * rtP.x[302];\r\n  localDW->Traj_loc[303].f1[0] = localDW->Derivative2 * rtP.x[303];\r\n  localDW->Traj_loc[304].f1[0] = localDW->Derivative2 * rtP.x[304];\r\n  localDW->Traj_loc[305].f1[0] = localDW->Derivative2 * rtP.x[305];\r\n  localDW->Traj_loc[306].f1[0] = localDW->Derivative2 * rtP.x[306];\r\n  localDW->Traj_loc[307].f1[0] = localDW->Derivative2 * rtP.x[307];\r\n  localDW->Traj_loc[308].f1[0] = localDW->Derivative2 * rtP.x[308];\r\n  localDW->Traj_loc[309].f1[0] = localDW->Derivative2 * rtP.x[309];\r\n  localDW->Traj_loc[310].f1[0] = localDW->Derivative2 * rtP.x[310];\r\n  localDW->Traj_loc[311].f1[0] = localDW->Derivative2 * rtP.x[311];\r\n  localDW->Traj_loc[312].f1[0] = localDW->Derivative2 * rtP.x[312];\r\n  localDW->Traj_loc[313].f1[0] = localDW->Derivative2 * rtP.x[313];\r\n  localDW->Traj_loc[314].f1[0] = localDW->Derivative2 * rtP.x[314];\r\n  localDW->Traj_loc[315].f1[0] = localDW->Derivative2 * rtP.x[315];\r\n  localDW->Traj_loc[316].f1[0] = localDW->Derivative2 * rtP.x[316];\r\n  localDW->Traj_loc[317].f1[0] = localDW->Derivative2 * rtP.x[317];\r\n  localDW->Traj_loc[318].f1[0] = localDW->Derivative2 * rtP.x[318];\r\n  localDW->Traj_loc[319].f1[0] = localDW->Derivative2 * rtP.x[319];\r\n  localDW->Traj_loc[320].f1[0] = localDW->Derivative2 * rtP.x[320];\r\n  localDW->Traj_loc[321].f1[0] = localDW->Derivative2 * rtP.x[321];\r\n  localDW->Traj_loc[322].f1[0] = localDW->Derivative2 * rtP.x[322];\r\n  localDW->Traj_loc[323].f1[0] = localDW->Derivative2 * rtP.x[323];\r\n  localDW->Traj_loc[324].f1[0] = localDW->Derivative2 * rtP.x[324];\r\n  localDW->Traj_loc[325].f1[0] = localDW->Derivative2 * rtP.x[325];\r\n  localDW->Traj_loc[326].f1[0] = localDW->Derivative2 * rtP.x[326];\r\n  localDW->Traj_loc[327].f1[0] = localDW->Derivative2 * rtP.x[327];\r\n  localDW->Traj_loc[328].f1[0] = localDW->Derivative2 * rtP.x[328];\r\n  localDW->Traj_loc[329].f1[0] = localDW->Derivative2 * rtP.x[329];\r\n  localDW->Traj_loc[330].f1[0] = localDW->Derivative2 * rtP.x[330];\r\n  localDW->Traj_loc[331].f1[0] = localDW->Derivative2 * rtP.x[331];\r\n  localDW->Traj_loc[332].f1[0] = localDW->Derivative2 * rtP.x[332];\r\n  localDW->Traj_loc[333].f1[0] = localDW->Derivative2 * rtP.x[333];\r\n  localDW->Traj_loc[334].f1[0] = localDW->Derivative2 * rtP.x[334];\r\n  localDW->Traj_loc[335].f1[0] = localDW->Derivative2 * rtP.x[335];\r\n  localDW->Traj_loc[336].f1[0] = localDW->Derivative2 * rtP.x[336];\r\n  localDW->Traj_loc[337].f1[0] = localDW->Derivative2 * rtP.x[337];\r\n  localDW->Traj_loc[338].f1[0] = localDW->Derivative2 * rtP.x[338];\r\n  localDW->Traj_loc[339].f1[0] = localDW->Derivative2 * rtP.x[339];\r\n  localDW->Traj_loc[340].f1[0] = localDW->Derivative2 * rtP.x[340];\r\n  localDW->Traj_loc[341].f1[0] = localDW->Derivative2 * rtP.x[341];\r\n  localDW->Traj_loc[342].f1[0] = localDW->Derivative2 * rtP.x[342];\r\n  localDW->Traj_loc[343].f1[0] = localDW->Derivative2 * rtP.x[343];\r\n  localDW->Traj_loc[344].f1[0] = localDW->Derivative2 * rtP.x[344];\r\n  localDW->Traj_loc[345].f1[0] = localDW->Derivative2 * rtP.x[345];\r\n  localDW->Traj_loc[346].f1[0] = localDW->Derivative2 * rtP.x[346];\r\n  localDW->Traj_loc[347].f1[0] = localDW->Derivative2 * rtP.x[347];\r\n  localDW->Traj_loc[348].f1[0] = localDW->Derivative2 * rtP.x[348];\r\n  localDW->Traj_loc[349].f1[0] = localDW->Derivative2 * rtP.x[349];\r\n  localDW->Traj_loc[350].f1[0] = localDW->Derivative2 * rtP.x[350];\r\n  localDW->Traj_loc[351].f1[0] = localDW->Derivative2 * rtP.x[351];\r\n  localDW->Traj_loc[352].f1[0] = localDW->Derivative2 * rtP.x[352];\r\n  localDW->Traj_loc[353].f1[0] = localDW->Derivative2 * rtP.x[353];\r\n  localDW->Traj_loc[354].f1[0] = localDW->Derivative2 * rtP.x[354];\r\n  localDW->Traj_loc[355].f1[0] = localDW->Derivative2 * rtP.x[355];\r\n  localDW->Traj_loc[356].f1[0] = localDW->Derivative2 * rtP.x[356];\r\n  localDW->Traj_loc[357].f1[0] = localDW->Derivative2 * rtP.x[357];\r\n  localDW->Traj_loc[358].f1[0] = localDW->Derivative2 * rtP.x[358];\r\n  localDW->Traj_loc[359].f1[0] = localDW->Derivative2 * rtP.x[359];\r\n  localDW->Traj_loc[360].f1[0] = localDW->Derivative2 * rtP.x[360];\r\n  localDW->Traj_loc[361].f1[0] = localDW->Derivative2 * rtP.x[361];\r\n  localDW->Traj_loc[362].f1[0] = localDW->Derivative2 * rtP.x[362];\r\n  localDW->Traj_loc[363].f1[0] = localDW->Derivative2 * rtP.x[363];\r\n  localDW->Traj_loc[364].f1[0] = localDW->Derivative2 * rtP.x[364];\r\n  localDW->Traj_loc[365].f1[0] = localDW->Derivative2 * rtP.x[365];\r\n  localDW->Traj_loc[366].f1[0] = localDW->Derivative2 * rtP.x[366];\r\n  localDW->Traj_loc[367].f1[0] = localDW->Derivative2 * rtP.x[367];\r\n  localDW->Traj_loc[368].f1[0] = localDW->Derivative2 * rtP.x[368];\r\n  localDW->Traj_loc[369].f1[0] = localDW->Derivative2 * rtP.x[369];\r\n  localDW->Traj_loc[370].f1[0] = localDW->Derivative2 * rtP.x[370];\r\n  localDW->Traj_loc[371].f1[0] = localDW->Derivative2 * rtP.x[371];\r\n  localDW->Traj_loc[372].f1[0] = localDW->Derivative2 * rtP.x[372];\r\n  localDW->Traj_loc[373].f1[0] = localDW->Derivative2 * rtP.x[373];\r\n  localDW->Traj_loc[374].f1[0] = localDW->Derivative2 * rtP.x[374];\r\n  localDW->Traj_loc[375].f1[0] = localDW->Derivative2 * rtP.x[375];\r\n  localDW->Traj_loc[376].f1[0] = localDW->Derivative2 * rtP.x[376];\r\n  localDW->Traj_loc[377].f1[0] = localDW->Derivative2 * rtP.x[377];\r\n  localDW->Traj_loc[378].f1[0] = localDW->Derivative2 * rtP.x[378];\r\n  localDW->Traj_loc[379].f1[0] = localDW->Derivative2 * rtP.x[379];\r\n  localDW->Traj_loc[380].f1[0] = localDW->Derivative2 * rtP.x[380];\r\n  localDW->Traj_loc[381].f1[0] = localDW->Derivative2 * rtP.x[381];\r\n  localDW->Traj_loc[382].f1[0] = localDW->Derivative2 * rtP.x[382];\r\n  localDW->Traj_loc[383].f1[0] = localDW->Derivative2 * rtP.x[383];\r\n  localDW->Traj_loc[384].f1[0] = localDW->Derivative2 * rtP.x[384];\r\n  localDW->Traj_loc[385].f1[0] = localDW->Derivative2 * rtP.x[385];\r\n  localDW->Traj_loc[386].f1[0] = localDW->Derivative2 * rtP.x[386];\r\n  localDW->Traj_loc[387].f1[0] = localDW->Derivative2 * rtP.x[387];\r\n  localDW->Traj_loc[388].f1[0] = localDW->Derivative2 * rtP.x[388];\r\n  localDW->Traj_loc[389].f1[0] = localDW->Derivative2 * rtP.x[389];\r\n  localDW->Traj_loc[390].f1[0] = localDW->Derivative2 * rtP.x[390];\r\n  localDW->Traj_loc[391].f1[0] = localDW->Derivative2 * rtP.x[391];\r\n  localDW->Traj_loc[392].f1[0] = localDW->Derivative2 * rtP.x[392];\r\n  localDW->Traj_loc[393].f1[0] = localDW->Derivative2 * rtP.x[393];\r\n  localDW->Traj_loc[394].f1[0] = localDW->Derivative2 * rtP.x[394];\r\n  localDW->Traj_loc[395].f1[0] = localDW->Derivative2 * rtP.x[395];\r\n  localDW->Traj_loc[396].f1[0] = localDW->Derivative2 * rtP.x[396];\r\n  localDW->Traj_loc[397].f1[0] = localDW->Derivative2 * rtP.x[397];\r\n  localDW->Traj_loc[398].f1[0] = localDW->Derivative2 * rtP.x[398];\r\n  localDW->Traj_loc[399].f1[0] = localDW->Derivative2 * rtP.x[399];\r\n  localDW->Traj_loc[400].f1[0] = localDW->Derivative2 * rtP.x[400];\r\n  localDW->Traj_loc[401].f1[0] = localDW->Derivative2 * rtP.x[401];\r\n  localDW->Traj_loc[402].f1[0] = localDW->Derivative2 * rtP.x[402];\r\n  localDW->Traj_loc[403].f1[0] = localDW->Derivative2 * rtP.x[403];\r\n  localDW->Traj_loc[404].f1[0] = localDW->Derivative2 * rtP.x[404];\r\n  localDW->Traj_loc[405].f1[0] = localDW->Derivative2 * rtP.x[405];\r\n  localDW->Traj_loc[406].f1[0] = localDW->Derivative2 * rtP.x[406];\r\n  localDW->Traj_loc[407].f1[0] = localDW->Derivative2 * rtP.x[407];\r\n  localDW->Traj_loc[408].f1[0] = localDW->Derivative2 * rtP.x[408];\r\n  localDW->Traj_loc[409].f1[0] = localDW->Derivative2 * rtP.x[409];\r\n  localDW->Traj_loc[410].f1[0] = localDW->Derivative2 * rtP.x[410];\r\n  localDW->Traj_loc[411].f1[0] = localDW->Derivative2 * rtP.x[411];\r\n  localDW->Traj_loc[412].f1[0] = localDW->Derivative2 * rtP.x[412];\r\n  localDW->Traj_loc[413].f1[0] = localDW->Derivative2 * rtP.x[413];\r\n  localDW->Traj_loc[414].f1[0] = localDW->Derivative2 * rtP.x[414];\r\n  localDW->Traj_loc[415].f1[0] = localDW->Derivative2 * rtP.x[415];\r\n  localDW->Traj_loc[416].f1[0] = localDW->Derivative2 * rtP.x[416];\r\n  localDW->Traj_loc[417].f1[0] = localDW->Derivative2 * rtP.x[417];\r\n  localDW->Traj_loc[418].f1[0] = localDW->Derivative2 * rtP.x[418];\r\n  localDW->Traj_loc[419].f1[0] = localDW->Derivative2 * rtP.x[419];\r\n  localDW->Traj_loc[420].f1[0] = localDW->Derivative2 * rtP.x[420];\r\n  localDW->Traj_loc[421].f1[0] = localDW->Derivative2 * rtP.x[421];\r\n  localDW->Traj_loc[422].f1[0] = localDW->Derivative2 * rtP.x[422];\r\n  localDW->Traj_loc[423].f1[0] = localDW->Derivative2 * rtP.x[423];\r\n  localDW->Traj_loc[424].f1[0] = localDW->Derivative2 * rtP.x[424];\r\n  localDW->Traj_loc[425].f1[0] = localDW->Derivative2 * rtP.x[425];\r\n  localDW->Traj_loc[426].f1[0] = localDW->Derivative2 * rtP.x[426];\r\n  localDW->Traj_loc[427].f1[0] = localDW->Derivative2 * rtP.x[427];\r\n  localDW->Traj_loc[428].f1[0] = localDW->Derivative2 * rtP.x[428];\r\n  localDW->Traj_loc[429].f1[0] = localDW->Derivative2 * rtP.x[429];\r\n  localDW->Traj_loc[430].f1[0] = localDW->Derivative2 * rtP.x[430];\r\n  localDW->Traj_loc[431].f1[0] = localDW->Derivative2 * rtP.x[431];\r\n  localDW->Traj_loc[432].f1[0] = localDW->Derivative2 * rtP.x[432];\r\n  localDW->Traj_loc[433].f1[0] = localDW->Derivative2 * rtP.x[433];\r\n  localDW->Traj_loc[434].f1[0] = localDW->Derivative2 * rtP.x[434];\r\n  localDW->Traj_loc[435].f1[0] = localDW->Derivative2 * rtP.x[435];\r\n  localDW->Traj_loc[436].f1[0] = localDW->Derivative2 * rtP.x[436];\r\n  localDW->Traj_loc[437].f1[0] = localDW->Derivative2 * rtP.x[437];\r\n  localDW->Traj_loc[438].f1[0] = localDW->Derivative2 * rtP.x[438];\r\n  localDW->Traj_loc[439].f1[0] = localDW->Derivative2 * rtP.x[439];\r\n  localDW->Traj_loc[440].f1[0] = localDW->Derivative2 * rtP.x[440];\r\n  localDW->Traj_loc[441].f1[0] = localDW->Derivative2 * rtP.x[441];\r\n  localDW->Traj_loc[442].f1[0] = localDW->Derivative2 * rtP.x[442];\r\n  localDW->Traj_loc[443].f1[0] = localDW->Derivative2 * rtP.x[443];\r\n  localDW->Traj_loc[444].f1[0] = localDW->Derivative2 * rtP.x[444];\r\n  localDW->Traj_loc[445].f1[0] = localDW->Derivative2 * rtP.x[445];\r\n  localDW->Traj_loc[446].f1[0] = localDW->Derivative2 * rtP.x[446];\r\n  localDW->Traj_loc[447].f1[0] = localDW->Derivative2 * rtP.x[447];\r\n  localDW->Traj_loc[448].f1[0] = localDW->Derivative2 * rtP.x[448];\r\n  localDW->Traj_loc[449].f1[0] = localDW->Derivative2 * rtP.x[449];\r\n  localDW->Traj_loc[450].f1[0] = localDW->Derivative2 * rtP.x[450];\r\n  localDW->Traj_loc[451].f1[0] = localDW->Derivative2 * rtP.x[451];\r\n  localDW->Traj_loc[452].f1[0] = localDW->Derivative2 * rtP.x[452];\r\n  localDW->Traj_loc[453].f1[0] = localDW->Derivative2 * rtP.x[453];\r\n  localDW->Traj_loc[454].f1[0] = localDW->Derivative2 * rtP.x[454];\r\n  localDW->Traj_loc[455].f1[0] = localDW->Derivative2 * rtP.x[455];\r\n  localDW->Traj_loc[456].f1[0] = localDW->Derivative2 * rtP.x[456];\r\n  localDW->Traj_loc[457].f1[0] = localDW->Derivative2 * rtP.x[457];\r\n  localDW->Traj_loc[458].f1[0] = localDW->Derivative2 * rtP.x[458];\r\n  localDW->Traj_loc[459].f1[0] = localDW->Derivative2 * rtP.x[459];\r\n  localDW->Traj_loc[460].f1[0] = localDW->Derivative2 * rtP.x[460];\r\n  localDW->Traj_loc[461].f1[0] = localDW->Derivative2 * rtP.x[461];\r\n  localDW->Traj_loc[462].f1[0] = localDW->Derivative2 * rtP.x[462];\r\n  localDW->Traj_loc[463].f1[0] = localDW->Derivative2 * rtP.x[463];\r\n  localDW->Traj_loc[464].f1[0] = localDW->Derivative2 * rtP.x[464];\r\n  localDW->Traj_loc[465].f1[0] = localDW->Derivative2 * rtP.x[465];\r\n  localDW->Traj_loc[466].f1[0] = localDW->Derivative2 * rtP.x[466];\r\n  localDW->Traj_loc[467].f1[0] = localDW->Derivative2 * rtP.x[467];\r\n  localDW->Traj_loc[468].f1[0] = localDW->Derivative2 * rtP.x[468];\r\n  localDW->Traj_loc[469].f1[0] = localDW->Derivative2 * rtP.x[469];\r\n  localDW->Traj_loc[470].f1[0] = localDW->Derivative2 * rtP.x[470];\r\n  localDW->Traj_loc[471].f1[0] = localDW->Derivative2 * rtP.x[471];\r\n  localDW->Traj_loc[472].f1[0] = localDW->Derivative2 * rtP.x[472];\r\n  localDW->Traj_loc[473].f1[0] = localDW->Derivative2 * rtP.x[473];\r\n  localDW->Traj_loc[474].f1[0] = localDW->Derivative2 * rtP.x[474];\r\n  localDW->Traj_loc[475].f1[0] = localDW->Derivative2 * rtP.x[475];\r\n  localDW->Traj_loc[476].f1[0] = localDW->Derivative2 * rtP.x[476];\r\n  localDW->Traj_loc[477].f1[0] = localDW->Derivative2 * rtP.x[477];\r\n  localDW->Traj_loc[478].f1[0] = localDW->Derivative2 * rtP.x[478];\r\n  localDW->Traj_loc[479].f1[0] = localDW->Derivative2 * rtP.x[479];\r\n  localDW->Traj_loc[480].f1[0] = localDW->Derivative2 * rtP.x[480];\r\n  localDW->Traj_loc[481].f1[0] = localDW->Derivative2 * rtP.x[481];\r\n  localDW->Traj_loc[482].f1[0] = localDW->Derivative2 * rtP.x[482];\r\n  localDW->Traj_loc[483].f1[0] = localDW->Derivative2 * rtP.x[483];\r\n  localDW->Traj_loc[484].f1[0] = localDW->Derivative2 * rtP.x[484];\r\n  localDW->Traj_loc[485].f1[0] = localDW->Derivative2 * rtP.x[485];\r\n  localDW->Traj_loc[486].f1[0] = localDW->Derivative2 * rtP.x[486];\r\n  localDW->Traj_loc[487].f1[0] = localDW->Derivative2 * rtP.x[487];\r\n  localDW->Traj_loc[488].f1[0] = localDW->Derivative2 * rtP.x[488];\r\n  localDW->Traj_loc[489].f1[0] = localDW->Derivative2 * rtP.x[489];\r\n  localDW->Traj_loc[490].f1[0] = localDW->Derivative2 * rtP.x[490];\r\n  localDW->Traj_loc[491].f1[0] = localDW->Derivative2 * rtP.x[491];\r\n  localDW->Traj_loc[492].f1[0] = localDW->Derivative2 * rtP.x[492];\r\n  localDW->Traj_loc[493].f1[0] = localDW->Derivative2 * rtP.x[493];\r\n  localDW->Traj_loc[494].f1[0] = localDW->Derivative2 * rtP.x[494];\r\n  localDW->Traj_loc[495].f1[0] = localDW->Derivative2 * rtP.x[495];\r\n  localDW->Traj_loc[496].f1[0] = localDW->Derivative2 * rtP.x[496];\r\n  localDW->Traj_loc[497].f1[0] = localDW->Derivative2 * rtP.x[497];\r\n  localDW->Traj_loc[498].f1[0] = localDW->Derivative2 * rtP.x[498];\r\n  localDW->Traj_loc[499].f1[0] = localDW->Derivative2 * rtP.x[499];\r\n  localDW->Traj_loc[500].f1[0] = localDW->Derivative2 * rtP.x[500];\r\n  localDW->Traj_loc[501].f1[0] = localDW->Derivative2 * rtP.x[501];\r\n  localDW->Traj_loc[502].f1[0] = localDW->Derivative2 * rtP.x[502];\r\n  localDW->Traj_loc[503].f1[0] = localDW->Derivative2 * rtP.x[503];\r\n  localDW->Traj_loc[504].f1[0] = localDW->Derivative2 * rtP.x[504];\r\n  localDW->Traj_loc[505].f1[0] = localDW->Derivative2 * rtP.x[505];\r\n  localDW->Traj_loc[506].f1[0] = localDW->Derivative2 * rtP.x[506];\r\n  localDW->Traj_loc[507].f1[0] = localDW->Derivative2 * rtP.x[507];\r\n  localDW->Traj_loc[508].f1[0] = localDW->Derivative2 * rtP.x[508];\r\n  localDW->Traj_loc[509].f1[0] = localDW->Derivative2 * rtP.x[509];\r\n  localDW->Traj_loc[510].f1[0] = localDW->Derivative2 * rtP.x[510];\r\n  localDW->Traj_loc[511].f1[0] = localDW->Derivative2 * rtP.x[511];\r\n  localDW->Traj_loc[512].f1[0] = localDW->Derivative2 * rtP.x[512];\r\n  localDW->Traj_loc[513].f1[0] = localDW->Derivative2 * rtP.x[513];\r\n  localDW->Traj_loc[514].f1[0] = localDW->Derivative2 * rtP.x[514];\r\n  localDW->Traj_loc[515].f1[0] = localDW->Derivative2 * rtP.x[515];\r\n  localDW->Traj_loc[516].f1[0] = localDW->Derivative2 * rtP.x[516];\r\n  localDW->Traj_loc[517].f1[0] = localDW->Derivative2 * rtP.x[517];\r\n  localDW->Traj_loc[518].f1[0] = localDW->Derivative2 * rtP.x[518];\r\n  localDW->Traj_loc[519].f1[0] = localDW->Derivative2 * rtP.x[519];\r\n  localDW->Traj_loc[520].f1[0] = localDW->Derivative2 * rtP.x[520];\r\n  localDW->Traj_loc[521].f1[0] = localDW->Derivative2 * rtP.x[521];\r\n  localDW->Traj_loc[522].f1[0] = localDW->Derivative2 * rtP.x[522];\r\n  localDW->Traj_loc[523].f1[0] = localDW->Derivative2 * rtP.x[523];\r\n  localDW->Traj_loc[524].f1[0] = localDW->Derivative2 * rtP.x[524];\r\n  localDW->Traj_loc[525].f1[0] = localDW->Derivative2 * rtP.x[525];\r\n  localDW->Traj_loc[526].f1[0] = localDW->Derivative2 * rtP.x[526];\r\n  localDW->Traj_loc[527].f1[0] = localDW->Derivative2 * rtP.x[527];\r\n  localDW->Traj_loc[528].f1[0] = localDW->Derivative2 * rtP.x[528];\r\n  localDW->Traj_loc[529].f1[0] = localDW->Derivative2 * rtP.x[529];\r\n  localDW->Traj_loc[530].f1[0] = localDW->Derivative2 * rtP.x[530];\r\n  localDW->Traj_loc[531].f1[0] = localDW->Derivative2 * rtP.x[531];\r\n  localDW->Traj_loc[532].f1[0] = localDW->Derivative2 * rtP.x[532];\r\n  localDW->Traj_loc[533].f1[0] = localDW->Derivative2 * rtP.x[533];\r\n  localDW->Traj_loc[534].f1[0] = localDW->Derivative2 * rtP.x[534];\r\n  localDW->Traj_loc[535].f1[0] = localDW->Derivative2 * rtP.x[535];\r\n  localDW->Traj_loc[536].f1[0] = localDW->Derivative2 * rtP.x[536];\r\n  localDW->Traj_loc[537].f1[0] = localDW->Derivative2 * rtP.x[537];\r\n  localDW->Traj_loc[538].f1[0] = localDW->Derivative2 * rtP.x[538];\r\n  localDW->Traj_loc[539].f1[0] = localDW->Derivative2 * rtP.x[539];\r\n  localDW->Traj_loc[540].f1[0] = localDW->Derivative2 * rtP.x[540];\r\n  localDW->Traj_loc[541].f1[0] = localDW->Derivative2 * rtP.x[541];\r\n  localDW->Traj_loc[542].f1[0] = localDW->Derivative2 * rtP.x[542];\r\n  localDW->Traj_loc[543].f1[0] = localDW->Derivative2 * rtP.x[543];\r\n  localDW->Traj_loc[544].f1[0] = localDW->Derivative2 * rtP.x[544];\r\n  localDW->Traj_loc[545].f1[0] = localDW->Derivative2 * rtP.x[545];\r\n  localDW->Traj_loc[546].f1[0] = localDW->Derivative2 * rtP.x[546];\r\n  localDW->Traj_loc[547].f1[0] = localDW->Derivative2 * rtP.x[547];\r\n  localDW->Traj_loc[548].f1[0] = localDW->Derivative2 * rtP.x[548];\r\n  localDW->Traj_loc[549].f1[0] = localDW->Derivative2 * rtP.x[549];\r\n  localDW->Traj_loc[550].f1[0] = localDW->Derivative2 * rtP.x[550];\r\n  localDW->Traj_loc[551].f1[0] = localDW->Derivative2 * rtP.x[551];\r\n  localDW->Traj_loc[552].f1[0] = localDW->Derivative2 * rtP.x[552];\r\n  localDW->Traj_loc[553].f1[0] = localDW->Derivative2 * rtP.x[553];\r\n  localDW->Traj_loc[554].f1[0] = localDW->Derivative2 * rtP.x[554];\r\n  localDW->Traj_loc[555].f1[0] = localDW->Derivative2 * rtP.x[555];\r\n  localDW->Traj_loc[556].f1[0] = localDW->Derivative2 * rtP.x[556];\r\n  localDW->Traj_loc[557].f1[0] = localDW->Derivative2 * rtP.x[557];\r\n  localDW->Traj_loc[558].f1[0] = localDW->Derivative2 * rtP.x[558];\r\n  localDW->Traj_loc[559].f1[0] = localDW->Derivative2 * rtP.x[559];\r\n  localDW->Traj_loc[560].f1[0] = localDW->Derivative2 * rtP.x[560];\r\n  localDW->Traj_loc[561].f1[0] = localDW->Derivative2 * rtP.x[561];\r\n  localDW->Traj_loc[562].f1[0] = localDW->Derivative2 * rtP.x[562];\r\n  localDW->Traj_loc[563].f1[0] = localDW->Derivative2 * rtP.x[563];\r\n  localDW->Traj_loc[564].f1[0] = localDW->Derivative2 * rtP.x[564];\r\n  localDW->Traj_loc[565].f1[0] = localDW->Derivative2 * rtP.x[565];\r\n  localDW->Traj_loc[566].f1[0] = localDW->Derivative2 * rtP.x[566];\r\n  localDW->Traj_loc[567].f1[0] = localDW->Derivative2 * rtP.x[567];\r\n  localDW->Traj_loc[568].f1[0] = localDW->Derivative2 * rtP.x[568];\r\n  localDW->Traj_loc[569].f1[0] = localDW->Derivative2 * rtP.x[569];\r\n  localDW->Traj_loc[570].f1[0] = localDW->Derivative2 * rtP.x[570];\r\n  localDW->Traj_loc[571].f1[0] = localDW->Derivative2 * rtP.x[571];\r\n  localDW->Traj_loc[572].f1[0] = localDW->Derivative2 * rtP.x[572];\r\n  localDW->Traj_loc[573].f1[0] = localDW->Derivative2 * rtP.x[573];\r\n  localDW->Traj_loc[574].f1[0] = localDW->Derivative2 * rtP.x[574];\r\n  localDW->Traj_loc[575].f1[0] = localDW->Derivative2 * rtP.x[575];\r\n  localDW->Traj_loc[576].f1[0] = localDW->Derivative2 * rtP.x[576];\r\n  localDW->Traj_loc[577].f1[0] = localDW->Derivative2 * rtP.x[577];\r\n  localDW->Traj_loc[578].f1[0] = localDW->Derivative2 * rtP.x[578];\r\n  localDW->Traj_loc[579].f1[0] = localDW->Derivative2 * rtP.x[579];\r\n  localDW->Traj_loc[580].f1[0] = localDW->Derivative2 * rtP.x[580];\r\n  localDW->Traj_loc[581].f1[0] = localDW->Derivative2 * rtP.x[581];\r\n  localDW->Traj_loc[582].f1[0] = localDW->Derivative2 * rtP.x[582];\r\n  localDW->Traj_loc[583].f1[0] = localDW->Derivative2 * rtP.x[583];\r\n  localDW->Traj_loc[584].f1[0] = localDW->Derivative2 * rtP.x[584];\r\n  localDW->Traj_loc[585].f1[0] = localDW->Derivative2 * rtP.x[585];\r\n  localDW->Traj_loc[586].f1[0] = localDW->Derivative2 * rtP.x[586];\r\n  localDW->Traj_loc[587].f1[0] = localDW->Derivative2 * rtP.x[587];\r\n  localDW->Traj_loc[588].f1[0] = localDW->Derivative2 * rtP.x[588];\r\n  localDW->Traj_loc[589].f1[0] = localDW->Derivative2 * rtP.x[589];\r\n  localDW->Traj_loc[590].f1[0] = localDW->Derivative2 * rtP.x[590];\r\n  localDW->Traj_loc[591].f1[0] = localDW->Derivative2 * rtP.x[591];\r\n  localDW->Traj_loc[592].f1[0] = localDW->Derivative2 * rtP.x[592];\r\n  localDW->Traj_loc[593].f1[0] = localDW->Derivative2 * rtP.x[593];\r\n  localDW->Traj_loc[594].f1[0] = localDW->Derivative2 * rtP.x[594];\r\n  localDW->Traj_loc[595].f1[0] = localDW->Derivative2 * rtP.x[595];\r\n  localDW->Traj_loc[596].f1[0] = localDW->Derivative2 * rtP.x[596];\r\n  localDW->Traj_loc[597].f1[0] = localDW->Derivative2 * rtP.x[597];\r\n  localDW->Traj_loc[598].f1[0] = localDW->Derivative2 * rtP.x[598];\r\n  localDW->Traj_loc[599].f1[0] = localDW->Derivative2 * rtP.x[599];\r\n  localDW->Traj_loc[600].f1[0] = localDW->Derivative2 * rtP.x[600];\r\n  localDW->Traj_loc[601].f1[0] = localDW->Derivative2 * rtP.x[601];\r\n  localDW->Traj_loc[602].f1[0] = localDW->Derivative2 * rtP.x[602];\r\n  localDW->Traj_loc[603].f1[0] = localDW->Derivative2 * rtP.x[603];\r\n  localDW->Traj_loc[604].f1[0] = localDW->Derivative2 * rtP.x[604];\r\n  localDW->Traj_loc[605].f1[0] = localDW->Derivative2 * rtP.x[605];\r\n  localDW->Traj_loc[606].f1[0] = localDW->Derivative2 * rtP.x[606];\r\n  localDW->Traj_loc[607].f1[0] = localDW->Derivative2 * rtP.x[607];\r\n  localDW->Traj_loc[608].f1[0] = localDW->Derivative2 * rtP.x[608];\r\n  localDW->Traj_loc[609].f1[0] = localDW->Derivative2 * rtP.x[609];\r\n  localDW->Traj_loc[610].f1[0] = localDW->Derivative2 * rtP.x[610];\r\n  localDW->Traj_loc[611].f1[0] = localDW->Derivative2 * rtP.x[611];\r\n  localDW->Traj_loc[612].f1[0] = localDW->Derivative2 * rtP.x[612];\r\n  localDW->Traj_loc[613].f1[0] = localDW->Derivative2 * rtP.x[613];\r\n  localDW->Traj_loc[614].f1[0] = localDW->Derivative2 * rtP.x[614];\r\n  localDW->Traj_loc[615].f1[0] = localDW->Derivative2 * rtP.x[615];\r\n  localDW->Traj_loc[616].f1[0] = localDW->Derivative2 * rtP.x[616];\r\n  localDW->Traj_loc[617].f1[0] = localDW->Derivative2 * rtP.x[617];\r\n  localDW->Traj_loc[618].f1[0] = localDW->Derivative2 * rtP.x[618];\r\n  localDW->Traj_loc[619].f1[0] = localDW->Derivative2 * rtP.x[619];\r\n  localDW->Traj_loc[620].f1[0] = localDW->Derivative2 * rtP.x[620];\r\n  localDW->Traj_loc[621].f1[0] = localDW->Derivative2 * rtP.x[621];\r\n  localDW->Traj_loc[622].f1[0] = localDW->Derivative2 * rtP.x[622];\r\n  localDW->Traj_loc[623].f1[0] = localDW->Derivative2 * rtP.x[623];\r\n  localDW->Traj_loc[624].f1[0] = localDW->Derivative2 * rtP.x[624];\r\n  localDW->Traj_loc[625].f1[0] = localDW->Derivative2 * rtP.x[625];\r\n  localDW->Traj_loc[626].f1[0] = localDW->Derivative2 * rtP.x[626];\r\n  localDW->Traj_loc[627].f1[0] = localDW->Derivative2 * rtP.x[627];\r\n  localDW->Traj_loc[628].f1[0] = localDW->Derivative2 * rtP.x[628];\r\n  localDW->Traj_loc[629].f1[0] = localDW->Derivative2 * rtP.x[629];\r\n  localDW->Traj_loc[630].f1[0] = localDW->Derivative2 * rtP.x[630];\r\n  localDW->Traj_loc[631].f1[0] = localDW->Derivative2 * rtP.x[631];\r\n  localDW->Traj_loc[632].f1[0] = localDW->Derivative2 * rtP.x[632];\r\n  localDW->Traj_loc[633].f1[0] = localDW->Derivative2 * rtP.x[633];\r\n  localDW->Traj_loc[634].f1[0] = localDW->Derivative2 * rtP.x[634];\r\n  localDW->Traj_loc[635].f1[0] = localDW->Derivative2 * rtP.x[635];\r\n  localDW->Traj_loc[636].f1[0] = localDW->Derivative2 * rtP.x[636];\r\n  localDW->Traj_loc[637].f1[0] = localDW->Derivative2 * rtP.x[637];\r\n  localDW->Traj_loc[638].f1[0] = localDW->Derivative2 * rtP.x[638];\r\n  localDW->Traj_loc[639].f1[0] = localDW->Derivative2 * rtP.x[639];\r\n  localDW->Traj_loc[640].f1[0] = localDW->Derivative2 * rtP.x[640];\r\n  localDW->Traj_loc[641].f1[0] = localDW->Derivative2 * rtP.x[641];\r\n  localDW->Traj_loc[642].f1[0] = localDW->Derivative2 * rtP.x[642];\r\n  localDW->Traj_loc[643].f1[0] = localDW->Derivative2 * rtP.x[643];\r\n  localDW->Traj_loc[644].f1[0] = localDW->Derivative2 * rtP.x[644];\r\n  localDW->Traj_loc[645].f1[0] = localDW->Derivative2 * rtP.x[645];\r\n  localDW->Traj_loc[646].f1[0] = localDW->Derivative2 * rtP.x[646];\r\n  localDW->Traj_loc[647].f1[0] = localDW->Derivative2 * rtP.x[647];\r\n  localDW->Traj_loc[648].f1[0] = localDW->Derivative2 * rtP.x[648];\r\n  localDW->Traj_loc[649].f1[0] = localDW->Derivative2 * rtP.x[649];\r\n  localDW->Traj_loc[650].f1[0] = localDW->Derivative2 * rtP.x[650];\r\n  localDW->Traj_loc[651].f1[0] = localDW->Derivative2 * rtP.x[651];\r\n  localDW->Traj_loc[652].f1[0] = localDW->Derivative2 * rtP.x[652];\r\n  localDW->Traj_loc[653].f1[0] = localDW->Derivative2 * rtP.x[653];\r\n  localDW->Traj_loc[654].f1[0] = localDW->Derivative2 * rtP.x[654];\r\n  localDW->Traj_loc[655].f1[0] = localDW->Derivative2 * rtP.x[655];\r\n  localDW->Traj_loc[656].f1[0] = localDW->Derivative2 * rtP.x[656];\r\n  localDW->Traj_loc[657].f1[0] = localDW->Derivative2 * rtP.x[657];\r\n  localDW->Traj_loc[658].f1[0] = localDW->Derivative2 * rtP.x[658];\r\n  localDW->Traj_loc[659].f1[0] = localDW->Derivative2 * rtP.x[659];\r\n  localDW->Traj_loc[660].f1[0] = localDW->Derivative2 * rtP.x[660];\r\n  localDW->Traj_loc[661].f1[0] = localDW->Derivative2 * rtP.x[661];\r\n  localDW->Traj_loc[662].f1[0] = localDW->Derivative2 * rtP.x[662];\r\n  localDW->Traj_loc[663].f1[0] = localDW->Derivative2 * rtP.x[663];\r\n  localDW->Traj_loc[664].f1[0] = localDW->Derivative2 * rtP.x[664];\r\n  localDW->Traj_loc[665].f1[0] = localDW->Derivative2 * rtP.x[665];\r\n  localDW->Traj_loc[666].f1[0] = localDW->Derivative2 * rtP.x[666];\r\n  localDW->Traj_loc[667].f1[0] = localDW->Derivative2 * rtP.x[667];\r\n  localDW->Traj_loc[668].f1[0] = localDW->Derivative2 * rtP.x[668];\r\n  localDW->Traj_loc[669].f1[0] = localDW->Derivative2 * rtP.x[669];\r\n  localDW->Traj_loc[670].f1[0] = localDW->Derivative2 * rtP.x[670];\r\n  localDW->Traj_loc[671].f1[0] = localDW->Derivative2 * rtP.x[671];\r\n  localDW->Traj_loc[672].f1[0] = localDW->Derivative2 * rtP.x[672];\r\n  localDW->Traj_loc[673].f1[0] = localDW->Derivative2 * rtP.x[673];\r\n  localDW->Traj_loc[674].f1[0] = localDW->Derivative2 * rtP.x[674];\r\n  localDW->Traj_loc[675].f1[0] = localDW->Derivative2 * rtP.x[675];\r\n  localDW->Traj_loc[676].f1[0] = localDW->Derivative2 * rtP.x[676];\r\n  localDW->Traj_loc[677].f1[0] = localDW->Derivative2 * rtP.x[677];\r\n  localDW->Traj_loc[678].f1[0] = localDW->Derivative2 * rtP.x[678];\r\n  localDW->Traj_loc[679].f1[0] = localDW->Derivative2 * rtP.x[679];\r\n  localDW->Traj_loc[680].f1[0] = localDW->Derivative2 * rtP.x[680];\r\n  localDW->Traj_loc[681].f1[0] = localDW->Derivative2 * rtP.x[681];\r\n  localDW->Traj_loc[682].f1[0] = localDW->Derivative2 * rtP.x[682];\r\n  localDW->Traj_loc[683].f1[0] = localDW->Derivative2 * rtP.x[683];\r\n  localDW->Traj_loc[684].f1[0] = localDW->Derivative2 * rtP.x[684];\r\n  localDW->Traj_loc[685].f1[0] = localDW->Derivative2 * rtP.x[685];\r\n  localDW->Traj_loc[686].f1[0] = localDW->Derivative2 * rtP.x[686];\r\n  localDW->Traj_loc[687].f1[0] = localDW->Derivative2 * rtP.x[687];\r\n  localDW->Traj_loc[688].f1[0] = localDW->Derivative2 * rtP.x[688];\r\n  localDW->Traj_loc[689].f1[0] = localDW->Derivative2 * rtP.x[689];\r\n  localDW->Traj_loc[690].f1[0] = localDW->Derivative2 * rtP.x[690];\r\n  localDW->Traj_loc[691].f1[0] = localDW->Derivative2 * rtP.x[691];\r\n  localDW->Traj_loc[692].f1[0] = localDW->Derivative2 * rtP.x[692];\r\n  localDW->Traj_loc[693].f1[0] = localDW->Derivative2 * rtP.x[693];\r\n  localDW->Traj_loc[694].f1[0] = localDW->Derivative2 * rtP.x[694];\r\n  localDW->Traj_loc[695].f1[0] = localDW->Derivative2 * rtP.x[695];\r\n  localDW->Traj_loc[696].f1[0] = localDW->Derivative2 * rtP.x[696];\r\n  localDW->Traj_loc[697].f1[0] = localDW->Derivative2 * rtP.x[697];\r\n  localDW->Traj_loc[698].f1[0] = localDW->Derivative2 * rtP.x[698];\r\n  localDW->Traj_loc[699].f1[0] = localDW->Derivative2 * rtP.x[699];\r\n  localDW->Traj_loc[700].f1[0] = localDW->Derivative2 * rtP.x[700];\r\n  localDW->Traj_loc[701].f1[0] = localDW->Derivative2 * rtP.x[701];\r\n  localDW->Traj_loc[702].f1[0] = localDW->Derivative2 * rtP.x[702];\r\n  localDW->Traj_loc[703].f1[0] = localDW->Derivative2 * rtP.x[703];\r\n  localDW->Traj_loc[704].f1[0] = localDW->Derivative2 * rtP.x[704];\r\n  localDW->Traj_loc[705].f1[0] = localDW->Derivative2 * rtP.x[705];\r\n  localDW->Traj_loc[706].f1[0] = localDW->Derivative2 * rtP.x[706];\r\n  localDW->Traj_loc[707].f1[0] = localDW->Derivative2 * rtP.x[707];\r\n  localDW->Traj_loc[708].f1[0] = localDW->Derivative2 * rtP.x[708];\r\n  localDW->Traj_loc[709].f1[0] = localDW->Derivative2 * rtP.x[709];\r\n  localDW->Traj_loc[710].f1[0] = localDW->Derivative2 * rtP.x[710];\r\n  localDW->Traj_loc[711].f1[0] = localDW->Derivative2 * rtP.x[711];\r\n  localDW->Traj_loc[712].f1[0] = localDW->Derivative2 * rtP.x[712];\r\n  localDW->Traj_loc[713].f1[0] = localDW->Derivative2 * rtP.x[713];\r\n  localDW->Traj_loc[714].f1[0] = localDW->Derivative2 * rtP.x[714];\r\n  localDW->Traj_loc[715].f1[0] = localDW->Derivative2 * rtP.x[715];\r\n  localDW->Traj_loc[716].f1[0] = localDW->Derivative2 * rtP.x[716];\r\n  localDW->Traj_loc[717].f1[0] = localDW->Derivative2 * rtP.x[717];\r\n  localDW->Traj_loc[718].f1[0] = localDW->Derivative2 * rtP.x[718];\r\n  localDW->Traj_loc[719].f1[0] = localDW->Derivative2 * rtP.x[719];\r\n  localDW->Traj_loc[720].f1[0] = localDW->Derivative2 * rtP.x[720];\r\n  localDW->Traj_loc[721].f1[0] = localDW->Derivative2 * rtP.x[721];\r\n  localDW->Traj_loc[722].f1[0] = localDW->Derivative2 * rtP.x[722];\r\n  localDW->Traj_loc[723].f1[0] = localDW->Derivative2 * rtP.x[723];\r\n  localDW->Traj_loc[724].f1[0] = localDW->Derivative2 * rtP.x[724];\r\n  localDW->Traj_loc[725].f1[0] = localDW->Derivative2 * rtP.x[725];\r\n  localDW->Traj_loc[726].f1[0] = localDW->Derivative2 * rtP.x[726];\r\n  localDW->Traj_loc[727].f1[0] = localDW->Derivative2 * rtP.x[727];\r\n  localDW->Traj_loc[728].f1[0] = localDW->Derivative2 * rtP.x[728];\r\n  localDW->Traj_loc[729].f1[0] = localDW->Derivative2 * rtP.x[729];\r\n  localDW->Traj_loc[730].f1[0] = localDW->Derivative2 * rtP.x[730];\r\n  localDW->Traj_loc[731].f1[0] = localDW->Derivative2 * rtP.x[731];\r\n  localDW->Traj_loc[732].f1[0] = localDW->Derivative2 * rtP.x[732];\r\n  localDW->Traj_loc[733].f1[0] = localDW->Derivative2 * rtP.x[733];\r\n  localDW->Traj_loc[734].f1[0] = localDW->Derivative2 * rtP.x[734];\r\n  localDW->Traj_loc[735].f1[0] = localDW->Derivative2 * rtP.x[735];\r\n  localDW->Traj_loc[736].f1[0] = localDW->Derivative2 * rtP.x[736];\r\n  localDW->Traj_loc[737].f1[0] = localDW->Derivative2 * rtP.x[737];\r\n  localDW->Traj_loc[738].f1[0] = localDW->Derivative2 * rtP.x[738];\r\n  localDW->Traj_loc[739].f1[0] = localDW->Derivative2 * rtP.x[739];\r\n  localDW->Traj_loc[740].f1[0] = localDW->Derivative2 * rtP.x[740];\r\n  localDW->Traj_loc[741].f1[0] = localDW->Derivative2 * rtP.x[741];\r\n  localDW->Traj_loc[742].f1[0] = localDW->Derivative2 * rtP.x[742];\r\n  localDW->Traj_loc[743].f1[0] = localDW->Derivative2 * rtP.x[743];\r\n  localDW->Traj_loc[744].f1[0] = localDW->Derivative2 * rtP.x[744];\r\n  localDW->Traj_loc[745].f1[0] = localDW->Derivative2 * rtP.x[745];\r\n  localDW->Traj_loc[746].f1[0] = localDW->Derivative2 * rtP.x[746];\r\n  localDW->Traj_loc[747].f1[0] = localDW->Derivative2 * rtP.x[747];\r\n  localDW->Traj_loc[748].f1[0] = localDW->Derivative2 * rtP.x[748];\r\n  localDW->Traj_loc[749].f1[0] = localDW->Derivative2 * rtP.x[749];\r\n  localDW->Traj_loc[750].f1[0] = localDW->Derivative2 * rtP.x[750];\r\n  localDW->Traj_loc[751].f1[0] = localDW->Derivative2 * rtP.x[751];\r\n  localDW->Traj_loc[752].f1[0] = localDW->Derivative2 * rtP.x[752];\r\n  localDW->Traj_loc[753].f1[0] = localDW->Derivative2 * rtP.x[753];\r\n  localDW->Traj_loc[754].f1[0] = localDW->Derivative2 * rtP.x[754];\r\n  localDW->Traj_loc[755].f1[0] = localDW->Derivative2 * rtP.x[755];\r\n  localDW->Traj_loc[756].f1[0] = localDW->Derivative2 * rtP.x[756];\r\n  localDW->Traj_loc[757].f1[0] = localDW->Derivative2 * rtP.x[757];\r\n  localDW->Traj_loc[758].f1[0] = localDW->Derivative2 * rtP.x[758];\r\n  localDW->Traj_loc[759].f1[0] = localDW->Derivative2 * rtP.x[759];\r\n  localDW->Traj_loc[760].f1[0] = localDW->Derivative2 * rtP.x[760];\r\n  localDW->Traj_loc[761].f1[0] = localDW->Derivative2 * rtP.x[761];\r\n  localDW->Traj_loc[762].f1[0] = localDW->Derivative2 * rtP.x[762];\r\n  localDW->Traj_loc[763].f1[0] = localDW->Derivative2 * rtP.x[763];\r\n  localDW->Traj_loc[764].f1[0] = localDW->Derivative2 * rtP.x[764];\r\n  localDW->Traj_loc[765].f1[0] = localDW->Derivative2 * rtP.x[765];\r\n  localDW->Traj_loc[766].f1[0] = localDW->Derivative2 * rtP.x[766];\r\n  localDW->Traj_loc[767].f1[0] = localDW->Derivative2 * rtP.x[767];\r\n  localDW->Traj_loc[768].f1[0] = localDW->Derivative2 * rtP.x[768];\r\n  localDW->Traj_loc[769].f1[0] = localDW->Derivative2 * rtP.x[769];\r\n  localDW->Traj_loc[770].f1[0] = localDW->Derivative2 * rtP.x[770];\r\n  localDW->Traj_loc[771].f1[0] = localDW->Derivative2 * rtP.x[771];\r\n  localDW->Traj_loc[772].f1[0] = localDW->Derivative2 * rtP.x[772];\r\n  localDW->Traj_loc[773].f1[0] = localDW->Derivative2 * rtP.x[773];\r\n  localDW->Traj_loc[774].f1[0] = localDW->Derivative2 * rtP.x[774];\r\n  localDW->Traj_loc[775].f1[0] = localDW->Derivative2 * rtP.x[775];\r\n  localDW->Traj_loc[776].f1[0] = localDW->Derivative2 * rtP.x[776];\r\n  localDW->Traj_loc[777].f1[0] = localDW->Derivative2 * rtP.x[777];\r\n  localDW->Traj_loc[778].f1[0] = localDW->Derivative2 * rtP.x[778];\r\n  localDW->Traj_loc[779].f1[0] = localDW->Derivative2 * rtP.x[779];\r\n  localDW->Traj_loc[780].f1[0] = localDW->Derivative2 * rtP.x[780];\r\n  localDW->Traj_loc[781].f1[0] = localDW->Derivative2 * rtP.x[781];\r\n  localDW->Traj_loc[782].f1[0] = localDW->Derivative2 * rtP.x[782];\r\n  localDW->Traj_loc[783].f1[0] = localDW->Derivative2 * rtP.x[783];\r\n  localDW->Traj_loc[784].f1[0] = localDW->Derivative2 * rtP.x[784];\r\n  localDW->Traj_loc[785].f1[0] = localDW->Derivative2 * rtP.x[785];\r\n  localDW->Traj_loc[786].f1[0] = localDW->Derivative2 * rtP.x[786];\r\n  localDW->Traj_loc[787].f1[0] = localDW->Derivative2 * rtP.x[787];\r\n  localDW->Traj_loc[788].f1[0] = localDW->Derivative2 * rtP.x[788];\r\n  localDW->Traj_loc[789].f1[0] = localDW->Derivative2 * rtP.x[789];\r\n  localDW->Traj_loc[790].f1[0] = localDW->Derivative2 * rtP.x[790];\r\n  localDW->Traj_loc[791].f1[0] = localDW->Derivative2 * rtP.x[791];\r\n  localDW->Traj_loc[792].f1[0] = localDW->Derivative2 * rtP.x[792];\r\n  localDW->Traj_loc[793].f1[0] = localDW->Derivative2 * rtP.x[793];\r\n  localDW->Traj_loc[794].f1[0] = localDW->Derivative2 * rtP.x[794];\r\n  localDW->Traj_loc[795].f1[0] = localDW->Derivative2 * rtP.x[795];\r\n  localDW->Traj_loc[796].f1[0] = localDW->Derivative2 * rtP.x[796];\r\n  localDW->Traj_loc[797].f1[0] = localDW->Derivative2 * rtP.x[797];\r\n  localDW->Traj_loc[798].f1[0] = localDW->Derivative2 * rtP.x[798];\r\n  localDW->Traj_loc[799].f1[0] = localDW->Derivative2 * rtP.x[799];\r\n  localDW->Traj_loc[800].f1[0] = localDW->Derivative2 * rtP.x[800];\r\n  localDW->Traj_loc[0].f1[0] += localDW->absx21 * rtP.y[0];\r\n  localDW->Traj_loc[1].f1[0] += localDW->absx21 * rtP.y[1];\r\n  localDW->Traj_loc[2].f1[0] += localDW->absx21 * rtP.y[2];\r\n  localDW->Traj_loc[3].f1[0] += localDW->absx21 * rtP.y[3];\r\n  localDW->Traj_loc[4].f1[0] += localDW->absx21 * rtP.y[4];\r\n  localDW->Traj_loc[5].f1[0] += localDW->absx21 * rtP.y[5];\r\n  localDW->Traj_loc[6].f1[0] += localDW->absx21 * rtP.y[6];\r\n  localDW->Traj_loc[7].f1[0] += localDW->absx21 * rtP.y[7];\r\n  localDW->Traj_loc[8].f1[0] += localDW->absx21 * rtP.y[8];\r\n  localDW->Traj_loc[9].f1[0] += localDW->absx21 * rtP.y[9];\r\n  localDW->Traj_loc[10].f1[0] += localDW->absx21 * rtP.y[10];\r\n  localDW->Traj_loc[11].f1[0] += localDW->absx21 * rtP.y[11];\r\n  localDW->Traj_loc[12].f1[0] += localDW->absx21 * rtP.y[12];\r\n  localDW->Traj_loc[13].f1[0] += localDW->absx21 * rtP.y[13];\r\n  localDW->Traj_loc[14].f1[0] += localDW->absx21 * rtP.y[14];\r\n  localDW->Traj_loc[15].f1[0] += localDW->absx21 * rtP.y[15];\r\n  localDW->Traj_loc[16].f1[0] += localDW->absx21 * rtP.y[16];\r\n  localDW->Traj_loc[17].f1[0] += localDW->absx21 * rtP.y[17];\r\n  localDW->Traj_loc[18].f1[0] += localDW->absx21 * rtP.y[18];\r\n  localDW->Traj_loc[19].f1[0] += localDW->absx21 * rtP.y[19];\r\n  localDW->Traj_loc[20].f1[0] += localDW->absx21 * rtP.y[20];\r\n  localDW->Traj_loc[21].f1[0] += localDW->absx21 * rtP.y[21];\r\n  localDW->Traj_loc[22].f1[0] += localDW->absx21 * rtP.y[22];\r\n  localDW->Traj_loc[23].f1[0] += localDW->absx21 * rtP.y[23];\r\n  localDW->Traj_loc[24].f1[0] += localDW->absx21 * rtP.y[24];\r\n  localDW->Traj_loc[25].f1[0] += localDW->absx21 * rtP.y[25];\r\n  localDW->Traj_loc[26].f1[0] += localDW->absx21 * rtP.y[26];\r\n  localDW->Traj_loc[27].f1[0] += localDW->absx21 * rtP.y[27];\r\n  localDW->Traj_loc[28].f1[0] += localDW->absx21 * rtP.y[28];\r\n  localDW->Traj_loc[29].f1[0] += localDW->absx21 * rtP.y[29];\r\n  localDW->Traj_loc[30].f1[0] += localDW->absx21 * rtP.y[30];\r\n  localDW->Traj_loc[31].f1[0] += localDW->absx21 * rtP.y[31];\r\n  localDW->Traj_loc[32].f1[0] += localDW->absx21 * rtP.y[32];\r\n  localDW->Traj_loc[33].f1[0] += localDW->absx21 * rtP.y[33];\r\n  localDW->Traj_loc[34].f1[0] += localDW->absx21 * rtP.y[34];\r\n  localDW->Traj_loc[35].f1[0] += localDW->absx21 * rtP.y[35];\r\n  localDW->Traj_loc[36].f1[0] += localDW->absx21 * rtP.y[36];\r\n  localDW->Traj_loc[37].f1[0] += localDW->absx21 * rtP.y[37];\r\n  localDW->Traj_loc[38].f1[0] += localDW->absx21 * rtP.y[38];\r\n  localDW->Traj_loc[39].f1[0] += localDW->absx21 * rtP.y[39];\r\n  localDW->Traj_loc[40].f1[0] += localDW->absx21 * rtP.y[40];\r\n  localDW->Traj_loc[41].f1[0] += localDW->absx21 * rtP.y[41];\r\n  localDW->Traj_loc[42].f1[0] += localDW->absx21 * rtP.y[42];\r\n  localDW->Traj_loc[43].f1[0] += localDW->absx21 * rtP.y[43];\r\n  localDW->Traj_loc[44].f1[0] += localDW->absx21 * rtP.y[44];\r\n  localDW->Traj_loc[45].f1[0] += localDW->absx21 * rtP.y[45];\r\n  localDW->Traj_loc[46].f1[0] += localDW->absx21 * rtP.y[46];\r\n  localDW->Traj_loc[47].f1[0] += localDW->absx21 * rtP.y[47];\r\n  localDW->Traj_loc[48].f1[0] += localDW->absx21 * rtP.y[48];\r\n  localDW->Traj_loc[49].f1[0] += localDW->absx21 * rtP.y[49];\r\n  localDW->Traj_loc[50].f1[0] += localDW->absx21 * rtP.y[50];\r\n  localDW->Traj_loc[51].f1[0] += localDW->absx21 * rtP.y[51];\r\n  localDW->Traj_loc[52].f1[0] += localDW->absx21 * rtP.y[52];\r\n  localDW->Traj_loc[53].f1[0] += localDW->absx21 * rtP.y[53];\r\n  localDW->Traj_loc[54].f1[0] += localDW->absx21 * rtP.y[54];\r\n  localDW->Traj_loc[55].f1[0] += localDW->absx21 * rtP.y[55];\r\n  localDW->Traj_loc[56].f1[0] += localDW->absx21 * rtP.y[56];\r\n  localDW->Traj_loc[57].f1[0] += localDW->absx21 * rtP.y[57];\r\n  localDW->Traj_loc[58].f1[0] += localDW->absx21 * rtP.y[58];\r\n  localDW->Traj_loc[59].f1[0] += localDW->absx21 * rtP.y[59];\r\n  localDW->Traj_loc[60].f1[0] += localDW->absx21 * rtP.y[60];\r\n  localDW->Traj_loc[61].f1[0] += localDW->absx21 * rtP.y[61];\r\n  localDW->Traj_loc[62].f1[0] += localDW->absx21 * rtP.y[62];\r\n  localDW->Traj_loc[63].f1[0] += localDW->absx21 * rtP.y[63];\r\n  localDW->Traj_loc[64].f1[0] += localDW->absx21 * rtP.y[64];\r\n  localDW->Traj_loc[65].f1[0] += localDW->absx21 * rtP.y[65];\r\n  localDW->Traj_loc[66].f1[0] += localDW->absx21 * rtP.y[66];\r\n  localDW->Traj_loc[67].f1[0] += localDW->absx21 * rtP.y[67];\r\n  localDW->Traj_loc[68].f1[0] += localDW->absx21 * rtP.y[68];\r\n  localDW->Traj_loc[69].f1[0] += localDW->absx21 * rtP.y[69];\r\n  localDW->Traj_loc[70].f1[0] += localDW->absx21 * rtP.y[70];\r\n  localDW->Traj_loc[71].f1[0] += localDW->absx21 * rtP.y[71];\r\n  localDW->Traj_loc[72].f1[0] += localDW->absx21 * rtP.y[72];\r\n  localDW->Traj_loc[73].f1[0] += localDW->absx21 * rtP.y[73];\r\n  localDW->Traj_loc[74].f1[0] += localDW->absx21 * rtP.y[74];\r\n  localDW->Traj_loc[75].f1[0] += localDW->absx21 * rtP.y[75];\r\n  localDW->Traj_loc[76].f1[0] += localDW->absx21 * rtP.y[76];\r\n  localDW->Traj_loc[77].f1[0] += localDW->absx21 * rtP.y[77];\r\n  localDW->Traj_loc[78].f1[0] += localDW->absx21 * rtP.y[78];\r\n  localDW->Traj_loc[79].f1[0] += localDW->absx21 * rtP.y[79];\r\n  localDW->Traj_loc[80].f1[0] += localDW->absx21 * rtP.y[80];\r\n  localDW->Traj_loc[81].f1[0] += localDW->absx21 * rtP.y[81];\r\n  localDW->Traj_loc[82].f1[0] += localDW->absx21 * rtP.y[82];\r\n  localDW->Traj_loc[83].f1[0] += localDW->absx21 * rtP.y[83];\r\n  localDW->Traj_loc[84].f1[0] += localDW->absx21 * rtP.y[84];\r\n  localDW->Traj_loc[85].f1[0] += localDW->absx21 * rtP.y[85];\r\n  localDW->Traj_loc[86].f1[0] += localDW->absx21 * rtP.y[86];\r\n  localDW->Traj_loc[87].f1[0] += localDW->absx21 * rtP.y[87];\r\n  localDW->Traj_loc[88].f1[0] += localDW->absx21 * rtP.y[88];\r\n  localDW->Traj_loc[89].f1[0] += localDW->absx21 * rtP.y[89];\r\n  localDW->Traj_loc[90].f1[0] += localDW->absx21 * rtP.y[90];\r\n  localDW->Traj_loc[91].f1[0] += localDW->absx21 * rtP.y[91];\r\n  localDW->Traj_loc[92].f1[0] += localDW->absx21 * rtP.y[92];\r\n  localDW->Traj_loc[93].f1[0] += localDW->absx21 * rtP.y[93];\r\n  localDW->Traj_loc[94].f1[0] += localDW->absx21 * rtP.y[94];\r\n  localDW->Traj_loc[95].f1[0] += localDW->absx21 * rtP.y[95];\r\n  localDW->Traj_loc[96].f1[0] += localDW->absx21 * rtP.y[96];\r\n  localDW->Traj_loc[97].f1[0] += localDW->absx21 * rtP.y[97];\r\n  localDW->Traj_loc[98].f1[0] += localDW->absx21 * rtP.y[98];\r\n  localDW->Traj_loc[99].f1[0] += localDW->absx21 * rtP.y[99];\r\n  localDW->Traj_loc[100].f1[0] += localDW->absx21 * rtP.y[100];\r\n  localDW->Traj_loc[101].f1[0] += localDW->absx21 * rtP.y[101];\r\n  localDW->Traj_loc[102].f1[0] += localDW->absx21 * rtP.y[102];\r\n  localDW->Traj_loc[103].f1[0] += localDW->absx21 * rtP.y[103];\r\n  localDW->Traj_loc[104].f1[0] += localDW->absx21 * rtP.y[104];\r\n  localDW->Traj_loc[105].f1[0] += localDW->absx21 * rtP.y[105];\r\n  localDW->Traj_loc[106].f1[0] += localDW->absx21 * rtP.y[106];\r\n  localDW->Traj_loc[107].f1[0] += localDW->absx21 * rtP.y[107];\r\n  localDW->Traj_loc[108].f1[0] += localDW->absx21 * rtP.y[108];\r\n  localDW->Traj_loc[109].f1[0] += localDW->absx21 * rtP.y[109];\r\n  localDW->Traj_loc[110].f1[0] += localDW->absx21 * rtP.y[110];\r\n  localDW->Traj_loc[111].f1[0] += localDW->absx21 * rtP.y[111];\r\n  localDW->Traj_loc[112].f1[0] += localDW->absx21 * rtP.y[112];\r\n  localDW->Traj_loc[113].f1[0] += localDW->absx21 * rtP.y[113];\r\n  localDW->Traj_loc[114].f1[0] += localDW->absx21 * rtP.y[114];\r\n  localDW->Traj_loc[115].f1[0] += localDW->absx21 * rtP.y[115];\r\n  localDW->Traj_loc[116].f1[0] += localDW->absx21 * rtP.y[116];\r\n  localDW->Traj_loc[117].f1[0] += localDW->absx21 * rtP.y[117];\r\n  localDW->Traj_loc[118].f1[0] += localDW->absx21 * rtP.y[118];\r\n  localDW->Traj_loc[119].f1[0] += localDW->absx21 * rtP.y[119];\r\n  localDW->Traj_loc[120].f1[0] += localDW->absx21 * rtP.y[120];\r\n  localDW->Traj_loc[121].f1[0] += localDW->absx21 * rtP.y[121];\r\n  localDW->Traj_loc[122].f1[0] += localDW->absx21 * rtP.y[122];\r\n  localDW->Traj_loc[123].f1[0] += localDW->absx21 * rtP.y[123];\r\n  localDW->Traj_loc[124].f1[0] += localDW->absx21 * rtP.y[124];\r\n  localDW->Traj_loc[125].f1[0] += localDW->absx21 * rtP.y[125];\r\n  localDW->Traj_loc[126].f1[0] += localDW->absx21 * rtP.y[126];\r\n  localDW->Traj_loc[127].f1[0] += localDW->absx21 * rtP.y[127];\r\n  localDW->Traj_loc[128].f1[0] += localDW->absx21 * rtP.y[128];\r\n  localDW->Traj_loc[129].f1[0] += localDW->absx21 * rtP.y[129];\r\n  localDW->Traj_loc[130].f1[0] += localDW->absx21 * rtP.y[130];\r\n  localDW->Traj_loc[131].f1[0] += localDW->absx21 * rtP.y[131];\r\n  localDW->Traj_loc[132].f1[0] += localDW->absx21 * rtP.y[132];\r\n  localDW->Traj_loc[133].f1[0] += localDW->absx21 * rtP.y[133];\r\n  localDW->Traj_loc[134].f1[0] += localDW->absx21 * rtP.y[134];\r\n  localDW->Traj_loc[135].f1[0] += localDW->absx21 * rtP.y[135];\r\n  localDW->Traj_loc[136].f1[0] += localDW->absx21 * rtP.y[136];\r\n  localDW->Traj_loc[137].f1[0] += localDW->absx21 * rtP.y[137];\r\n  localDW->Traj_loc[138].f1[0] += localDW->absx21 * rtP.y[138];\r\n  localDW->Traj_loc[139].f1[0] += localDW->absx21 * rtP.y[139];\r\n  localDW->Traj_loc[140].f1[0] += localDW->absx21 * rtP.y[140];\r\n  localDW->Traj_loc[141].f1[0] += localDW->absx21 * rtP.y[141];\r\n  localDW->Traj_loc[142].f1[0] += localDW->absx21 * rtP.y[142];\r\n  localDW->Traj_loc[143].f1[0] += localDW->absx21 * rtP.y[143];\r\n  localDW->Traj_loc[144].f1[0] += localDW->absx21 * rtP.y[144];\r\n  localDW->Traj_loc[145].f1[0] += localDW->absx21 * rtP.y[145];\r\n  localDW->Traj_loc[146].f1[0] += localDW->absx21 * rtP.y[146];\r\n  localDW->Traj_loc[147].f1[0] += localDW->absx21 * rtP.y[147];\r\n  localDW->Traj_loc[148].f1[0] += localDW->absx21 * rtP.y[148];\r\n  localDW->Traj_loc[149].f1[0] += localDW->absx21 * rtP.y[149];\r\n  localDW->Traj_loc[150].f1[0] += localDW->absx21 * rtP.y[150];\r\n  localDW->Traj_loc[151].f1[0] += localDW->absx21 * rtP.y[151];\r\n  localDW->Traj_loc[152].f1[0] += localDW->absx21 * rtP.y[152];\r\n  localDW->Traj_loc[153].f1[0] += localDW->absx21 * rtP.y[153];\r\n  localDW->Traj_loc[154].f1[0] += localDW->absx21 * rtP.y[154];\r\n  localDW->Traj_loc[155].f1[0] += localDW->absx21 * rtP.y[155];\r\n  localDW->Traj_loc[156].f1[0] += localDW->absx21 * rtP.y[156];\r\n  localDW->Traj_loc[157].f1[0] += localDW->absx21 * rtP.y[157];\r\n  localDW->Traj_loc[158].f1[0] += localDW->absx21 * rtP.y[158];\r\n  localDW->Traj_loc[159].f1[0] += localDW->absx21 * rtP.y[159];\r\n  localDW->Traj_loc[160].f1[0] += localDW->absx21 * rtP.y[160];\r\n  localDW->Traj_loc[161].f1[0] += localDW->absx21 * rtP.y[161];\r\n  localDW->Traj_loc[162].f1[0] += localDW->absx21 * rtP.y[162];\r\n  localDW->Traj_loc[163].f1[0] += localDW->absx21 * rtP.y[163];\r\n  localDW->Traj_loc[164].f1[0] += localDW->absx21 * rtP.y[164];\r\n  localDW->Traj_loc[165].f1[0] += localDW->absx21 * rtP.y[165];\r\n  localDW->Traj_loc[166].f1[0] += localDW->absx21 * rtP.y[166];\r\n  localDW->Traj_loc[167].f1[0] += localDW->absx21 * rtP.y[167];\r\n  localDW->Traj_loc[168].f1[0] += localDW->absx21 * rtP.y[168];\r\n  localDW->Traj_loc[169].f1[0] += localDW->absx21 * rtP.y[169];\r\n  localDW->Traj_loc[170].f1[0] += localDW->absx21 * rtP.y[170];\r\n  localDW->Traj_loc[171].f1[0] += localDW->absx21 * rtP.y[171];\r\n  localDW->Traj_loc[172].f1[0] += localDW->absx21 * rtP.y[172];\r\n  localDW->Traj_loc[173].f1[0] += localDW->absx21 * rtP.y[173];\r\n  localDW->Traj_loc[174].f1[0] += localDW->absx21 * rtP.y[174];\r\n  localDW->Traj_loc[175].f1[0] += localDW->absx21 * rtP.y[175];\r\n  localDW->Traj_loc[176].f1[0] += localDW->absx21 * rtP.y[176];\r\n  localDW->Traj_loc[177].f1[0] += localDW->absx21 * rtP.y[177];\r\n  localDW->Traj_loc[178].f1[0] += localDW->absx21 * rtP.y[178];\r\n  localDW->Traj_loc[179].f1[0] += localDW->absx21 * rtP.y[179];\r\n  localDW->Traj_loc[180].f1[0] += localDW->absx21 * rtP.y[180];\r\n  localDW->Traj_loc[181].f1[0] += localDW->absx21 * rtP.y[181];\r\n  localDW->Traj_loc[182].f1[0] += localDW->absx21 * rtP.y[182];\r\n  localDW->Traj_loc[183].f1[0] += localDW->absx21 * rtP.y[183];\r\n  localDW->Traj_loc[184].f1[0] += localDW->absx21 * rtP.y[184];\r\n  localDW->Traj_loc[185].f1[0] += localDW->absx21 * rtP.y[185];\r\n  localDW->Traj_loc[186].f1[0] += localDW->absx21 * rtP.y[186];\r\n  localDW->Traj_loc[187].f1[0] += localDW->absx21 * rtP.y[187];\r\n  localDW->Traj_loc[188].f1[0] += localDW->absx21 * rtP.y[188];\r\n  localDW->Traj_loc[189].f1[0] += localDW->absx21 * rtP.y[189];\r\n  localDW->Traj_loc[190].f1[0] += localDW->absx21 * rtP.y[190];\r\n  localDW->Traj_loc[191].f1[0] += localDW->absx21 * rtP.y[191];\r\n  localDW->Traj_loc[192].f1[0] += localDW->absx21 * rtP.y[192];\r\n  localDW->Traj_loc[193].f1[0] += localDW->absx21 * rtP.y[193];\r\n  localDW->Traj_loc[194].f1[0] += localDW->absx21 * rtP.y[194];\r\n  localDW->Traj_loc[195].f1[0] += localDW->absx21 * rtP.y[195];\r\n  localDW->Traj_loc[196].f1[0] += localDW->absx21 * rtP.y[196];\r\n  localDW->Traj_loc[197].f1[0] += localDW->absx21 * rtP.y[197];\r\n  localDW->Traj_loc[198].f1[0] += localDW->absx21 * rtP.y[198];\r\n  localDW->Traj_loc[199].f1[0] += localDW->absx21 * rtP.y[199];\r\n  localDW->Traj_loc[200].f1[0] += localDW->absx21 * rtP.y[200];\r\n  localDW->Traj_loc[201].f1[0] += localDW->absx21 * rtP.y[201];\r\n  localDW->Traj_loc[202].f1[0] += localDW->absx21 * rtP.y[202];\r\n  localDW->Traj_loc[203].f1[0] += localDW->absx21 * rtP.y[203];\r\n  localDW->Traj_loc[204].f1[0] += localDW->absx21 * rtP.y[204];\r\n  localDW->Traj_loc[205].f1[0] += localDW->absx21 * rtP.y[205];\r\n  localDW->Traj_loc[206].f1[0] += localDW->absx21 * rtP.y[206];\r\n  localDW->Traj_loc[207].f1[0] += localDW->absx21 * rtP.y[207];\r\n  localDW->Traj_loc[208].f1[0] += localDW->absx21 * rtP.y[208];\r\n  localDW->Traj_loc[209].f1[0] += localDW->absx21 * rtP.y[209];\r\n  localDW->Traj_loc[210].f1[0] += localDW->absx21 * rtP.y[210];\r\n  localDW->Traj_loc[211].f1[0] += localDW->absx21 * rtP.y[211];\r\n  localDW->Traj_loc[212].f1[0] += localDW->absx21 * rtP.y[212];\r\n  localDW->Traj_loc[213].f1[0] += localDW->absx21 * rtP.y[213];\r\n  localDW->Traj_loc[214].f1[0] += localDW->absx21 * rtP.y[214];\r\n  localDW->Traj_loc[215].f1[0] += localDW->absx21 * rtP.y[215];\r\n  localDW->Traj_loc[216].f1[0] += localDW->absx21 * rtP.y[216];\r\n  localDW->Traj_loc[217].f1[0] += localDW->absx21 * rtP.y[217];\r\n  localDW->Traj_loc[218].f1[0] += localDW->absx21 * rtP.y[218];\r\n  localDW->Traj_loc[219].f1[0] += localDW->absx21 * rtP.y[219];\r\n  localDW->Traj_loc[220].f1[0] += localDW->absx21 * rtP.y[220];\r\n  localDW->Traj_loc[221].f1[0] += localDW->absx21 * rtP.y[221];\r\n  localDW->Traj_loc[222].f1[0] += localDW->absx21 * rtP.y[222];\r\n  localDW->Traj_loc[223].f1[0] += localDW->absx21 * rtP.y[223];\r\n  localDW->Traj_loc[224].f1[0] += localDW->absx21 * rtP.y[224];\r\n  localDW->Traj_loc[225].f1[0] += localDW->absx21 * rtP.y[225];\r\n  localDW->Traj_loc[226].f1[0] += localDW->absx21 * rtP.y[226];\r\n  localDW->Traj_loc[227].f1[0] += localDW->absx21 * rtP.y[227];\r\n  localDW->Traj_loc[228].f1[0] += localDW->absx21 * rtP.y[228];\r\n  localDW->Traj_loc[229].f1[0] += localDW->absx21 * rtP.y[229];\r\n  localDW->Traj_loc[230].f1[0] += localDW->absx21 * rtP.y[230];\r\n  localDW->Traj_loc[231].f1[0] += localDW->absx21 * rtP.y[231];\r\n  localDW->Traj_loc[232].f1[0] += localDW->absx21 * rtP.y[232];\r\n  localDW->Traj_loc[233].f1[0] += localDW->absx21 * rtP.y[233];\r\n  localDW->Traj_loc[234].f1[0] += localDW->absx21 * rtP.y[234];\r\n  localDW->Traj_loc[235].f1[0] += localDW->absx21 * rtP.y[235];\r\n  localDW->Traj_loc[236].f1[0] += localDW->absx21 * rtP.y[236];\r\n  localDW->Traj_loc[237].f1[0] += localDW->absx21 * rtP.y[237];\r\n  localDW->Traj_loc[238].f1[0] += localDW->absx21 * rtP.y[238];\r\n  localDW->Traj_loc[239].f1[0] += localDW->absx21 * rtP.y[239];\r\n  localDW->Traj_loc[240].f1[0] += localDW->absx21 * rtP.y[240];\r\n  localDW->Traj_loc[241].f1[0] += localDW->absx21 * rtP.y[241];\r\n  localDW->Traj_loc[242].f1[0] += localDW->absx21 * rtP.y[242];\r\n  localDW->Traj_loc[243].f1[0] += localDW->absx21 * rtP.y[243];\r\n  localDW->Traj_loc[244].f1[0] += localDW->absx21 * rtP.y[244];\r\n  localDW->Traj_loc[245].f1[0] += localDW->absx21 * rtP.y[245];\r\n  localDW->Traj_loc[246].f1[0] += localDW->absx21 * rtP.y[246];\r\n  localDW->Traj_loc[247].f1[0] += localDW->absx21 * rtP.y[247];\r\n  localDW->Traj_loc[248].f1[0] += localDW->absx21 * rtP.y[248];\r\n  localDW->Traj_loc[249].f1[0] += localDW->absx21 * rtP.y[249];\r\n  localDW->Traj_loc[250].f1[0] += localDW->absx21 * rtP.y[250];\r\n  localDW->Traj_loc[251].f1[0] += localDW->absx21 * rtP.y[251];\r\n  localDW->Traj_loc[252].f1[0] += localDW->absx21 * rtP.y[252];\r\n  localDW->Traj_loc[253].f1[0] += localDW->absx21 * rtP.y[253];\r\n  localDW->Traj_loc[254].f1[0] += localDW->absx21 * rtP.y[254];\r\n  localDW->Traj_loc[255].f1[0] += localDW->absx21 * rtP.y[255];\r\n  localDW->Traj_loc[256].f1[0] += localDW->absx21 * rtP.y[256];\r\n  localDW->Traj_loc[257].f1[0] += localDW->absx21 * rtP.y[257];\r\n  localDW->Traj_loc[258].f1[0] += localDW->absx21 * rtP.y[258];\r\n  localDW->Traj_loc[259].f1[0] += localDW->absx21 * rtP.y[259];\r\n  localDW->Traj_loc[260].f1[0] += localDW->absx21 * rtP.y[260];\r\n  localDW->Traj_loc[261].f1[0] += localDW->absx21 * rtP.y[261];\r\n  localDW->Traj_loc[262].f1[0] += localDW->absx21 * rtP.y[262];\r\n  localDW->Traj_loc[263].f1[0] += localDW->absx21 * rtP.y[263];\r\n  localDW->Traj_loc[264].f1[0] += localDW->absx21 * rtP.y[264];\r\n  localDW->Traj_loc[265].f1[0] += localDW->absx21 * rtP.y[265];\r\n  localDW->Traj_loc[266].f1[0] += localDW->absx21 * rtP.y[266];\r\n  localDW->Traj_loc[267].f1[0] += localDW->absx21 * rtP.y[267];\r\n  localDW->Traj_loc[268].f1[0] += localDW->absx21 * rtP.y[268];\r\n  localDW->Traj_loc[269].f1[0] += localDW->absx21 * rtP.y[269];\r\n  localDW->Traj_loc[270].f1[0] += localDW->absx21 * rtP.y[270];\r\n  localDW->Traj_loc[271].f1[0] += localDW->absx21 * rtP.y[271];\r\n  localDW->Traj_loc[272].f1[0] += localDW->absx21 * rtP.y[272];\r\n  localDW->Traj_loc[273].f1[0] += localDW->absx21 * rtP.y[273];\r\n  localDW->Traj_loc[274].f1[0] += localDW->absx21 * rtP.y[274];\r\n  localDW->Traj_loc[275].f1[0] += localDW->absx21 * rtP.y[275];\r\n  localDW->Traj_loc[276].f1[0] += localDW->absx21 * rtP.y[276];\r\n  localDW->Traj_loc[277].f1[0] += localDW->absx21 * rtP.y[277];\r\n  localDW->Traj_loc[278].f1[0] += localDW->absx21 * rtP.y[278];\r\n  localDW->Traj_loc[279].f1[0] += localDW->absx21 * rtP.y[279];\r\n  localDW->Traj_loc[280].f1[0] += localDW->absx21 * rtP.y[280];\r\n  localDW->Traj_loc[281].f1[0] += localDW->absx21 * rtP.y[281];\r\n  localDW->Traj_loc[282].f1[0] += localDW->absx21 * rtP.y[282];\r\n  localDW->Traj_loc[283].f1[0] += localDW->absx21 * rtP.y[283];\r\n  localDW->Traj_loc[284].f1[0] += localDW->absx21 * rtP.y[284];\r\n  localDW->Traj_loc[285].f1[0] += localDW->absx21 * rtP.y[285];\r\n  localDW->Traj_loc[286].f1[0] += localDW->absx21 * rtP.y[286];\r\n  localDW->Traj_loc[287].f1[0] += localDW->absx21 * rtP.y[287];\r\n  localDW->Traj_loc[288].f1[0] += localDW->absx21 * rtP.y[288];\r\n  localDW->Traj_loc[289].f1[0] += localDW->absx21 * rtP.y[289];\r\n  localDW->Traj_loc[290].f1[0] += localDW->absx21 * rtP.y[290];\r\n  localDW->Traj_loc[291].f1[0] += localDW->absx21 * rtP.y[291];\r\n  localDW->Traj_loc[292].f1[0] += localDW->absx21 * rtP.y[292];\r\n  localDW->Traj_loc[293].f1[0] += localDW->absx21 * rtP.y[293];\r\n  localDW->Traj_loc[294].f1[0] += localDW->absx21 * rtP.y[294];\r\n  localDW->Traj_loc[295].f1[0] += localDW->absx21 * rtP.y[295];\r\n  localDW->Traj_loc[296].f1[0] += localDW->absx21 * rtP.y[296];\r\n  localDW->Traj_loc[297].f1[0] += localDW->absx21 * rtP.y[297];\r\n  localDW->Traj_loc[298].f1[0] += localDW->absx21 * rtP.y[298];\r\n  localDW->Traj_loc[299].f1[0] += localDW->absx21 * rtP.y[299];\r\n  localDW->Traj_loc[300].f1[0] += localDW->absx21 * rtP.y[300];\r\n  localDW->Traj_loc[301].f1[0] += localDW->absx21 * rtP.y[301];\r\n  localDW->Traj_loc[302].f1[0] += localDW->absx21 * rtP.y[302];\r\n  localDW->Traj_loc[303].f1[0] += localDW->absx21 * rtP.y[303];\r\n  localDW->Traj_loc[304].f1[0] += localDW->absx21 * rtP.y[304];\r\n  localDW->Traj_loc[305].f1[0] += localDW->absx21 * rtP.y[305];\r\n  localDW->Traj_loc[306].f1[0] += localDW->absx21 * rtP.y[306];\r\n  localDW->Traj_loc[307].f1[0] += localDW->absx21 * rtP.y[307];\r\n  localDW->Traj_loc[308].f1[0] += localDW->absx21 * rtP.y[308];\r\n  localDW->Traj_loc[309].f1[0] += localDW->absx21 * rtP.y[309];\r\n  localDW->Traj_loc[310].f1[0] += localDW->absx21 * rtP.y[310];\r\n  localDW->Traj_loc[311].f1[0] += localDW->absx21 * rtP.y[311];\r\n  localDW->Traj_loc[312].f1[0] += localDW->absx21 * rtP.y[312];\r\n  localDW->Traj_loc[313].f1[0] += localDW->absx21 * rtP.y[313];\r\n  localDW->Traj_loc[314].f1[0] += localDW->absx21 * rtP.y[314];\r\n  localDW->Traj_loc[315].f1[0] += localDW->absx21 * rtP.y[315];\r\n  localDW->Traj_loc[316].f1[0] += localDW->absx21 * rtP.y[316];\r\n  localDW->Traj_loc[317].f1[0] += localDW->absx21 * rtP.y[317];\r\n  localDW->Traj_loc[318].f1[0] += localDW->absx21 * rtP.y[318];\r\n  localDW->Traj_loc[319].f1[0] += localDW->absx21 * rtP.y[319];\r\n  localDW->Traj_loc[320].f1[0] += localDW->absx21 * rtP.y[320];\r\n  localDW->Traj_loc[321].f1[0] += localDW->absx21 * rtP.y[321];\r\n  localDW->Traj_loc[322].f1[0] += localDW->absx21 * rtP.y[322];\r\n  localDW->Traj_loc[323].f1[0] += localDW->absx21 * rtP.y[323];\r\n  localDW->Traj_loc[324].f1[0] += localDW->absx21 * rtP.y[324];\r\n  localDW->Traj_loc[325].f1[0] += localDW->absx21 * rtP.y[325];\r\n  localDW->Traj_loc[326].f1[0] += localDW->absx21 * rtP.y[326];\r\n  localDW->Traj_loc[327].f1[0] += localDW->absx21 * rtP.y[327];\r\n  localDW->Traj_loc[328].f1[0] += localDW->absx21 * rtP.y[328];\r\n  localDW->Traj_loc[329].f1[0] += localDW->absx21 * rtP.y[329];\r\n  localDW->Traj_loc[330].f1[0] += localDW->absx21 * rtP.y[330];\r\n  localDW->Traj_loc[331].f1[0] += localDW->absx21 * rtP.y[331];\r\n  localDW->Traj_loc[332].f1[0] += localDW->absx21 * rtP.y[332];\r\n  localDW->Traj_loc[333].f1[0] += localDW->absx21 * rtP.y[333];\r\n  localDW->Traj_loc[334].f1[0] += localDW->absx21 * rtP.y[334];\r\n  localDW->Traj_loc[335].f1[0] += localDW->absx21 * rtP.y[335];\r\n  localDW->Traj_loc[336].f1[0] += localDW->absx21 * rtP.y[336];\r\n  localDW->Traj_loc[337].f1[0] += localDW->absx21 * rtP.y[337];\r\n  localDW->Traj_loc[338].f1[0] += localDW->absx21 * rtP.y[338];\r\n  localDW->Traj_loc[339].f1[0] += localDW->absx21 * rtP.y[339];\r\n  localDW->Traj_loc[340].f1[0] += localDW->absx21 * rtP.y[340];\r\n  localDW->Traj_loc[341].f1[0] += localDW->absx21 * rtP.y[341];\r\n  localDW->Traj_loc[342].f1[0] += localDW->absx21 * rtP.y[342];\r\n  localDW->Traj_loc[343].f1[0] += localDW->absx21 * rtP.y[343];\r\n  localDW->Traj_loc[344].f1[0] += localDW->absx21 * rtP.y[344];\r\n  localDW->Traj_loc[345].f1[0] += localDW->absx21 * rtP.y[345];\r\n  localDW->Traj_loc[346].f1[0] += localDW->absx21 * rtP.y[346];\r\n  localDW->Traj_loc[347].f1[0] += localDW->absx21 * rtP.y[347];\r\n  localDW->Traj_loc[348].f1[0] += localDW->absx21 * rtP.y[348];\r\n  localDW->Traj_loc[349].f1[0] += localDW->absx21 * rtP.y[349];\r\n  localDW->Traj_loc[350].f1[0] += localDW->absx21 * rtP.y[350];\r\n  localDW->Traj_loc[351].f1[0] += localDW->absx21 * rtP.y[351];\r\n  localDW->Traj_loc[352].f1[0] += localDW->absx21 * rtP.y[352];\r\n  localDW->Traj_loc[353].f1[0] += localDW->absx21 * rtP.y[353];\r\n  localDW->Traj_loc[354].f1[0] += localDW->absx21 * rtP.y[354];\r\n  localDW->Traj_loc[355].f1[0] += localDW->absx21 * rtP.y[355];\r\n  localDW->Traj_loc[356].f1[0] += localDW->absx21 * rtP.y[356];\r\n  localDW->Traj_loc[357].f1[0] += localDW->absx21 * rtP.y[357];\r\n  localDW->Traj_loc[358].f1[0] += localDW->absx21 * rtP.y[358];\r\n  localDW->Traj_loc[359].f1[0] += localDW->absx21 * rtP.y[359];\r\n  localDW->Traj_loc[360].f1[0] += localDW->absx21 * rtP.y[360];\r\n  localDW->Traj_loc[361].f1[0] += localDW->absx21 * rtP.y[361];\r\n  localDW->Traj_loc[362].f1[0] += localDW->absx21 * rtP.y[362];\r\n  localDW->Traj_loc[363].f1[0] += localDW->absx21 * rtP.y[363];\r\n  localDW->Traj_loc[364].f1[0] += localDW->absx21 * rtP.y[364];\r\n  localDW->Traj_loc[365].f1[0] += localDW->absx21 * rtP.y[365];\r\n  localDW->Traj_loc[366].f1[0] += localDW->absx21 * rtP.y[366];\r\n  localDW->Traj_loc[367].f1[0] += localDW->absx21 * rtP.y[367];\r\n  localDW->Traj_loc[368].f1[0] += localDW->absx21 * rtP.y[368];\r\n  localDW->Traj_loc[369].f1[0] += localDW->absx21 * rtP.y[369];\r\n  localDW->Traj_loc[370].f1[0] += localDW->absx21 * rtP.y[370];\r\n  localDW->Traj_loc[371].f1[0] += localDW->absx21 * rtP.y[371];\r\n  localDW->Traj_loc[372].f1[0] += localDW->absx21 * rtP.y[372];\r\n  localDW->Traj_loc[373].f1[0] += localDW->absx21 * rtP.y[373];\r\n  localDW->Traj_loc[374].f1[0] += localDW->absx21 * rtP.y[374];\r\n  localDW->Traj_loc[375].f1[0] += localDW->absx21 * rtP.y[375];\r\n  localDW->Traj_loc[376].f1[0] += localDW->absx21 * rtP.y[376];\r\n  localDW->Traj_loc[377].f1[0] += localDW->absx21 * rtP.y[377];\r\n  localDW->Traj_loc[378].f1[0] += localDW->absx21 * rtP.y[378];\r\n  localDW->Traj_loc[379].f1[0] += localDW->absx21 * rtP.y[379];\r\n  localDW->Traj_loc[380].f1[0] += localDW->absx21 * rtP.y[380];\r\n  localDW->Traj_loc[381].f1[0] += localDW->absx21 * rtP.y[381];\r\n  localDW->Traj_loc[382].f1[0] += localDW->absx21 * rtP.y[382];\r\n  localDW->Traj_loc[383].f1[0] += localDW->absx21 * rtP.y[383];\r\n  localDW->Traj_loc[384].f1[0] += localDW->absx21 * rtP.y[384];\r\n  localDW->Traj_loc[385].f1[0] += localDW->absx21 * rtP.y[385];\r\n  localDW->Traj_loc[386].f1[0] += localDW->absx21 * rtP.y[386];\r\n  localDW->Traj_loc[387].f1[0] += localDW->absx21 * rtP.y[387];\r\n  localDW->Traj_loc[388].f1[0] += localDW->absx21 * rtP.y[388];\r\n  localDW->Traj_loc[389].f1[0] += localDW->absx21 * rtP.y[389];\r\n  localDW->Traj_loc[390].f1[0] += localDW->absx21 * rtP.y[390];\r\n  localDW->Traj_loc[391].f1[0] += localDW->absx21 * rtP.y[391];\r\n  localDW->Traj_loc[392].f1[0] += localDW->absx21 * rtP.y[392];\r\n  localDW->Traj_loc[393].f1[0] += localDW->absx21 * rtP.y[393];\r\n  localDW->Traj_loc[394].f1[0] += localDW->absx21 * rtP.y[394];\r\n  localDW->Traj_loc[395].f1[0] += localDW->absx21 * rtP.y[395];\r\n  localDW->Traj_loc[396].f1[0] += localDW->absx21 * rtP.y[396];\r\n  localDW->Traj_loc[397].f1[0] += localDW->absx21 * rtP.y[397];\r\n  localDW->Traj_loc[398].f1[0] += localDW->absx21 * rtP.y[398];\r\n  localDW->Traj_loc[399].f1[0] += localDW->absx21 * rtP.y[399];\r\n  localDW->Traj_loc[400].f1[0] += localDW->absx21 * rtP.y[400];\r\n  localDW->Traj_loc[401].f1[0] += localDW->absx21 * rtP.y[401];\r\n  localDW->Traj_loc[402].f1[0] += localDW->absx21 * rtP.y[402];\r\n  localDW->Traj_loc[403].f1[0] += localDW->absx21 * rtP.y[403];\r\n  localDW->Traj_loc[404].f1[0] += localDW->absx21 * rtP.y[404];\r\n  localDW->Traj_loc[405].f1[0] += localDW->absx21 * rtP.y[405];\r\n  localDW->Traj_loc[406].f1[0] += localDW->absx21 * rtP.y[406];\r\n  localDW->Traj_loc[407].f1[0] += localDW->absx21 * rtP.y[407];\r\n  localDW->Traj_loc[408].f1[0] += localDW->absx21 * rtP.y[408];\r\n  localDW->Traj_loc[409].f1[0] += localDW->absx21 * rtP.y[409];\r\n  localDW->Traj_loc[410].f1[0] += localDW->absx21 * rtP.y[410];\r\n  localDW->Traj_loc[411].f1[0] += localDW->absx21 * rtP.y[411];\r\n  localDW->Traj_loc[412].f1[0] += localDW->absx21 * rtP.y[412];\r\n  localDW->Traj_loc[413].f1[0] += localDW->absx21 * rtP.y[413];\r\n  localDW->Traj_loc[414].f1[0] += localDW->absx21 * rtP.y[414];\r\n  localDW->Traj_loc[415].f1[0] += localDW->absx21 * rtP.y[415];\r\n  localDW->Traj_loc[416].f1[0] += localDW->absx21 * rtP.y[416];\r\n  localDW->Traj_loc[417].f1[0] += localDW->absx21 * rtP.y[417];\r\n  localDW->Traj_loc[418].f1[0] += localDW->absx21 * rtP.y[418];\r\n  localDW->Traj_loc[419].f1[0] += localDW->absx21 * rtP.y[419];\r\n  localDW->Traj_loc[420].f1[0] += localDW->absx21 * rtP.y[420];\r\n  localDW->Traj_loc[421].f1[0] += localDW->absx21 * rtP.y[421];\r\n  localDW->Traj_loc[422].f1[0] += localDW->absx21 * rtP.y[422];\r\n  localDW->Traj_loc[423].f1[0] += localDW->absx21 * rtP.y[423];\r\n  localDW->Traj_loc[424].f1[0] += localDW->absx21 * rtP.y[424];\r\n  localDW->Traj_loc[425].f1[0] += localDW->absx21 * rtP.y[425];\r\n  localDW->Traj_loc[426].f1[0] += localDW->absx21 * rtP.y[426];\r\n  localDW->Traj_loc[427].f1[0] += localDW->absx21 * rtP.y[427];\r\n  localDW->Traj_loc[428].f1[0] += localDW->absx21 * rtP.y[428];\r\n  localDW->Traj_loc[429].f1[0] += localDW->absx21 * rtP.y[429];\r\n  localDW->Traj_loc[430].f1[0] += localDW->absx21 * rtP.y[430];\r\n  localDW->Traj_loc[431].f1[0] += localDW->absx21 * rtP.y[431];\r\n  localDW->Traj_loc[432].f1[0] += localDW->absx21 * rtP.y[432];\r\n  localDW->Traj_loc[433].f1[0] += localDW->absx21 * rtP.y[433];\r\n  localDW->Traj_loc[434].f1[0] += localDW->absx21 * rtP.y[434];\r\n  localDW->Traj_loc[435].f1[0] += localDW->absx21 * rtP.y[435];\r\n  localDW->Traj_loc[436].f1[0] += localDW->absx21 * rtP.y[436];\r\n  localDW->Traj_loc[437].f1[0] += localDW->absx21 * rtP.y[437];\r\n  localDW->Traj_loc[438].f1[0] += localDW->absx21 * rtP.y[438];\r\n  localDW->Traj_loc[439].f1[0] += localDW->absx21 * rtP.y[439];\r\n  localDW->Traj_loc[440].f1[0] += localDW->absx21 * rtP.y[440];\r\n  localDW->Traj_loc[441].f1[0] += localDW->absx21 * rtP.y[441];\r\n  localDW->Traj_loc[442].f1[0] += localDW->absx21 * rtP.y[442];\r\n  localDW->Traj_loc[443].f1[0] += localDW->absx21 * rtP.y[443];\r\n  localDW->Traj_loc[444].f1[0] += localDW->absx21 * rtP.y[444];\r\n  localDW->Traj_loc[445].f1[0] += localDW->absx21 * rtP.y[445];\r\n  localDW->Traj_loc[446].f1[0] += localDW->absx21 * rtP.y[446];\r\n  localDW->Traj_loc[447].f1[0] += localDW->absx21 * rtP.y[447];\r\n  localDW->Traj_loc[448].f1[0] += localDW->absx21 * rtP.y[448];\r\n  localDW->Traj_loc[449].f1[0] += localDW->absx21 * rtP.y[449];\r\n  localDW->Traj_loc[450].f1[0] += localDW->absx21 * rtP.y[450];\r\n  localDW->Traj_loc[451].f1[0] += localDW->absx21 * rtP.y[451];\r\n  localDW->Traj_loc[452].f1[0] += localDW->absx21 * rtP.y[452];\r\n  localDW->Traj_loc[453].f1[0] += localDW->absx21 * rtP.y[453];\r\n  localDW->Traj_loc[454].f1[0] += localDW->absx21 * rtP.y[454];\r\n  localDW->Traj_loc[455].f1[0] += localDW->absx21 * rtP.y[455];\r\n  localDW->Traj_loc[456].f1[0] += localDW->absx21 * rtP.y[456];\r\n  localDW->Traj_loc[457].f1[0] += localDW->absx21 * rtP.y[457];\r\n  localDW->Traj_loc[458].f1[0] += localDW->absx21 * rtP.y[458];\r\n  localDW->Traj_loc[459].f1[0] += localDW->absx21 * rtP.y[459];\r\n  localDW->Traj_loc[460].f1[0] += localDW->absx21 * rtP.y[460];\r\n  localDW->Traj_loc[461].f1[0] += localDW->absx21 * rtP.y[461];\r\n  localDW->Traj_loc[462].f1[0] += localDW->absx21 * rtP.y[462];\r\n  localDW->Traj_loc[463].f1[0] += localDW->absx21 * rtP.y[463];\r\n  localDW->Traj_loc[464].f1[0] += localDW->absx21 * rtP.y[464];\r\n  localDW->Traj_loc[465].f1[0] += localDW->absx21 * rtP.y[465];\r\n  localDW->Traj_loc[466].f1[0] += localDW->absx21 * rtP.y[466];\r\n  localDW->Traj_loc[467].f1[0] += localDW->absx21 * rtP.y[467];\r\n  localDW->Traj_loc[468].f1[0] += localDW->absx21 * rtP.y[468];\r\n  localDW->Traj_loc[469].f1[0] += localDW->absx21 * rtP.y[469];\r\n  localDW->Traj_loc[470].f1[0] += localDW->absx21 * rtP.y[470];\r\n  localDW->Traj_loc[471].f1[0] += localDW->absx21 * rtP.y[471];\r\n  localDW->Traj_loc[472].f1[0] += localDW->absx21 * rtP.y[472];\r\n  localDW->Traj_loc[473].f1[0] += localDW->absx21 * rtP.y[473];\r\n  localDW->Traj_loc[474].f1[0] += localDW->absx21 * rtP.y[474];\r\n  localDW->Traj_loc[475].f1[0] += localDW->absx21 * rtP.y[475];\r\n  localDW->Traj_loc[476].f1[0] += localDW->absx21 * rtP.y[476];\r\n  localDW->Traj_loc[477].f1[0] += localDW->absx21 * rtP.y[477];\r\n  localDW->Traj_loc[478].f1[0] += localDW->absx21 * rtP.y[478];\r\n  localDW->Traj_loc[479].f1[0] += localDW->absx21 * rtP.y[479];\r\n  localDW->Traj_loc[480].f1[0] += localDW->absx21 * rtP.y[480];\r\n  localDW->Traj_loc[481].f1[0] += localDW->absx21 * rtP.y[481];\r\n  localDW->Traj_loc[482].f1[0] += localDW->absx21 * rtP.y[482];\r\n  localDW->Traj_loc[483].f1[0] += localDW->absx21 * rtP.y[483];\r\n  localDW->Traj_loc[484].f1[0] += localDW->absx21 * rtP.y[484];\r\n  localDW->Traj_loc[485].f1[0] += localDW->absx21 * rtP.y[485];\r\n  localDW->Traj_loc[486].f1[0] += localDW->absx21 * rtP.y[486];\r\n  localDW->Traj_loc[487].f1[0] += localDW->absx21 * rtP.y[487];\r\n  localDW->Traj_loc[488].f1[0] += localDW->absx21 * rtP.y[488];\r\n  localDW->Traj_loc[489].f1[0] += localDW->absx21 * rtP.y[489];\r\n  localDW->Traj_loc[490].f1[0] += localDW->absx21 * rtP.y[490];\r\n  localDW->Traj_loc[491].f1[0] += localDW->absx21 * rtP.y[491];\r\n  localDW->Traj_loc[492].f1[0] += localDW->absx21 * rtP.y[492];\r\n  localDW->Traj_loc[493].f1[0] += localDW->absx21 * rtP.y[493];\r\n  localDW->Traj_loc[494].f1[0] += localDW->absx21 * rtP.y[494];\r\n  localDW->Traj_loc[495].f1[0] += localDW->absx21 * rtP.y[495];\r\n  localDW->Traj_loc[496].f1[0] += localDW->absx21 * rtP.y[496];\r\n  localDW->Traj_loc[497].f1[0] += localDW->absx21 * rtP.y[497];\r\n  localDW->Traj_loc[498].f1[0] += localDW->absx21 * rtP.y[498];\r\n  localDW->Traj_loc[499].f1[0] += localDW->absx21 * rtP.y[499];\r\n  localDW->Traj_loc[500].f1[0] += localDW->absx21 * rtP.y[500];\r\n  localDW->Traj_loc[501].f1[0] += localDW->absx21 * rtP.y[501];\r\n  localDW->Traj_loc[502].f1[0] += localDW->absx21 * rtP.y[502];\r\n  localDW->Traj_loc[503].f1[0] += localDW->absx21 * rtP.y[503];\r\n  localDW->Traj_loc[504].f1[0] += localDW->absx21 * rtP.y[504];\r\n  localDW->Traj_loc[505].f1[0] += localDW->absx21 * rtP.y[505];\r\n  localDW->Traj_loc[506].f1[0] += localDW->absx21 * rtP.y[506];\r\n  localDW->Traj_loc[507].f1[0] += localDW->absx21 * rtP.y[507];\r\n  localDW->Traj_loc[508].f1[0] += localDW->absx21 * rtP.y[508];\r\n  localDW->Traj_loc[509].f1[0] += localDW->absx21 * rtP.y[509];\r\n  localDW->Traj_loc[510].f1[0] += localDW->absx21 * rtP.y[510];\r\n  localDW->Traj_loc[511].f1[0] += localDW->absx21 * rtP.y[511];\r\n  localDW->Traj_loc[512].f1[0] += localDW->absx21 * rtP.y[512];\r\n  localDW->Traj_loc[513].f1[0] += localDW->absx21 * rtP.y[513];\r\n  localDW->Traj_loc[514].f1[0] += localDW->absx21 * rtP.y[514];\r\n  localDW->Traj_loc[515].f1[0] += localDW->absx21 * rtP.y[515];\r\n  localDW->Traj_loc[516].f1[0] += localDW->absx21 * rtP.y[516];\r\n  localDW->Traj_loc[517].f1[0] += localDW->absx21 * rtP.y[517];\r\n  localDW->Traj_loc[518].f1[0] += localDW->absx21 * rtP.y[518];\r\n  localDW->Traj_loc[519].f1[0] += localDW->absx21 * rtP.y[519];\r\n  localDW->Traj_loc[520].f1[0] += localDW->absx21 * rtP.y[520];\r\n  localDW->Traj_loc[521].f1[0] += localDW->absx21 * rtP.y[521];\r\n  localDW->Traj_loc[522].f1[0] += localDW->absx21 * rtP.y[522];\r\n  localDW->Traj_loc[523].f1[0] += localDW->absx21 * rtP.y[523];\r\n  localDW->Traj_loc[524].f1[0] += localDW->absx21 * rtP.y[524];\r\n  localDW->Traj_loc[525].f1[0] += localDW->absx21 * rtP.y[525];\r\n  localDW->Traj_loc[526].f1[0] += localDW->absx21 * rtP.y[526];\r\n  localDW->Traj_loc[527].f1[0] += localDW->absx21 * rtP.y[527];\r\n  localDW->Traj_loc[528].f1[0] += localDW->absx21 * rtP.y[528];\r\n  localDW->Traj_loc[529].f1[0] += localDW->absx21 * rtP.y[529];\r\n  localDW->Traj_loc[530].f1[0] += localDW->absx21 * rtP.y[530];\r\n  localDW->Traj_loc[531].f1[0] += localDW->absx21 * rtP.y[531];\r\n  localDW->Traj_loc[532].f1[0] += localDW->absx21 * rtP.y[532];\r\n  localDW->Traj_loc[533].f1[0] += localDW->absx21 * rtP.y[533];\r\n  localDW->Traj_loc[534].f1[0] += localDW->absx21 * rtP.y[534];\r\n  localDW->Traj_loc[535].f1[0] += localDW->absx21 * rtP.y[535];\r\n  localDW->Traj_loc[536].f1[0] += localDW->absx21 * rtP.y[536];\r\n  localDW->Traj_loc[537].f1[0] += localDW->absx21 * rtP.y[537];\r\n  localDW->Traj_loc[538].f1[0] += localDW->absx21 * rtP.y[538];\r\n  localDW->Traj_loc[539].f1[0] += localDW->absx21 * rtP.y[539];\r\n  localDW->Traj_loc[540].f1[0] += localDW->absx21 * rtP.y[540];\r\n  localDW->Traj_loc[541].f1[0] += localDW->absx21 * rtP.y[541];\r\n  localDW->Traj_loc[542].f1[0] += localDW->absx21 * rtP.y[542];\r\n  localDW->Traj_loc[543].f1[0] += localDW->absx21 * rtP.y[543];\r\n  localDW->Traj_loc[544].f1[0] += localDW->absx21 * rtP.y[544];\r\n  localDW->Traj_loc[545].f1[0] += localDW->absx21 * rtP.y[545];\r\n  localDW->Traj_loc[546].f1[0] += localDW->absx21 * rtP.y[546];\r\n  localDW->Traj_loc[547].f1[0] += localDW->absx21 * rtP.y[547];\r\n  localDW->Traj_loc[548].f1[0] += localDW->absx21 * rtP.y[548];\r\n  localDW->Traj_loc[549].f1[0] += localDW->absx21 * rtP.y[549];\r\n  localDW->Traj_loc[550].f1[0] += localDW->absx21 * rtP.y[550];\r\n  localDW->Traj_loc[551].f1[0] += localDW->absx21 * rtP.y[551];\r\n  localDW->Traj_loc[552].f1[0] += localDW->absx21 * rtP.y[552];\r\n  localDW->Traj_loc[553].f1[0] += localDW->absx21 * rtP.y[553];\r\n  localDW->Traj_loc[554].f1[0] += localDW->absx21 * rtP.y[554];\r\n  localDW->Traj_loc[555].f1[0] += localDW->absx21 * rtP.y[555];\r\n  localDW->Traj_loc[556].f1[0] += localDW->absx21 * rtP.y[556];\r\n  localDW->Traj_loc[557].f1[0] += localDW->absx21 * rtP.y[557];\r\n  localDW->Traj_loc[558].f1[0] += localDW->absx21 * rtP.y[558];\r\n  localDW->Traj_loc[559].f1[0] += localDW->absx21 * rtP.y[559];\r\n  localDW->Traj_loc[560].f1[0] += localDW->absx21 * rtP.y[560];\r\n  localDW->Traj_loc[561].f1[0] += localDW->absx21 * rtP.y[561];\r\n  localDW->Traj_loc[562].f1[0] += localDW->absx21 * rtP.y[562];\r\n  localDW->Traj_loc[563].f1[0] += localDW->absx21 * rtP.y[563];\r\n  localDW->Traj_loc[564].f1[0] += localDW->absx21 * rtP.y[564];\r\n  localDW->Traj_loc[565].f1[0] += localDW->absx21 * rtP.y[565];\r\n  localDW->Traj_loc[566].f1[0] += localDW->absx21 * rtP.y[566];\r\n  localDW->Traj_loc[567].f1[0] += localDW->absx21 * rtP.y[567];\r\n  localDW->Traj_loc[568].f1[0] += localDW->absx21 * rtP.y[568];\r\n  localDW->Traj_loc[569].f1[0] += localDW->absx21 * rtP.y[569];\r\n  localDW->Traj_loc[570].f1[0] += localDW->absx21 * rtP.y[570];\r\n  localDW->Traj_loc[571].f1[0] += localDW->absx21 * rtP.y[571];\r\n  localDW->Traj_loc[572].f1[0] += localDW->absx21 * rtP.y[572];\r\n  localDW->Traj_loc[573].f1[0] += localDW->absx21 * rtP.y[573];\r\n  localDW->Traj_loc[574].f1[0] += localDW->absx21 * rtP.y[574];\r\n  localDW->Traj_loc[575].f1[0] += localDW->absx21 * rtP.y[575];\r\n  localDW->Traj_loc[576].f1[0] += localDW->absx21 * rtP.y[576];\r\n  localDW->Traj_loc[577].f1[0] += localDW->absx21 * rtP.y[577];\r\n  localDW->Traj_loc[578].f1[0] += localDW->absx21 * rtP.y[578];\r\n  localDW->Traj_loc[579].f1[0] += localDW->absx21 * rtP.y[579];\r\n  localDW->Traj_loc[580].f1[0] += localDW->absx21 * rtP.y[580];\r\n  localDW->Traj_loc[581].f1[0] += localDW->absx21 * rtP.y[581];\r\n  localDW->Traj_loc[582].f1[0] += localDW->absx21 * rtP.y[582];\r\n  localDW->Traj_loc[583].f1[0] += localDW->absx21 * rtP.y[583];\r\n  localDW->Traj_loc[584].f1[0] += localDW->absx21 * rtP.y[584];\r\n  localDW->Traj_loc[585].f1[0] += localDW->absx21 * rtP.y[585];\r\n  localDW->Traj_loc[586].f1[0] += localDW->absx21 * rtP.y[586];\r\n  localDW->Traj_loc[587].f1[0] += localDW->absx21 * rtP.y[587];\r\n  localDW->Traj_loc[588].f1[0] += localDW->absx21 * rtP.y[588];\r\n  localDW->Traj_loc[589].f1[0] += localDW->absx21 * rtP.y[589];\r\n  localDW->Traj_loc[590].f1[0] += localDW->absx21 * rtP.y[590];\r\n  localDW->Traj_loc[591].f1[0] += localDW->absx21 * rtP.y[591];\r\n  localDW->Traj_loc[592].f1[0] += localDW->absx21 * rtP.y[592];\r\n  localDW->Traj_loc[593].f1[0] += localDW->absx21 * rtP.y[593];\r\n  localDW->Traj_loc[594].f1[0] += localDW->absx21 * rtP.y[594];\r\n  localDW->Traj_loc[595].f1[0] += localDW->absx21 * rtP.y[595];\r\n  localDW->Traj_loc[596].f1[0] += localDW->absx21 * rtP.y[596];\r\n  localDW->Traj_loc[597].f1[0] += localDW->absx21 * rtP.y[597];\r\n  localDW->Traj_loc[598].f1[0] += localDW->absx21 * rtP.y[598];\r\n  localDW->Traj_loc[599].f1[0] += localDW->absx21 * rtP.y[599];\r\n  localDW->Traj_loc[600].f1[0] += localDW->absx21 * rtP.y[600];\r\n  localDW->Traj_loc[601].f1[0] += localDW->absx21 * rtP.y[601];\r\n  localDW->Traj_loc[602].f1[0] += localDW->absx21 * rtP.y[602];\r\n  localDW->Traj_loc[603].f1[0] += localDW->absx21 * rtP.y[603];\r\n  localDW->Traj_loc[604].f1[0] += localDW->absx21 * rtP.y[604];\r\n  localDW->Traj_loc[605].f1[0] += localDW->absx21 * rtP.y[605];\r\n  localDW->Traj_loc[606].f1[0] += localDW->absx21 * rtP.y[606];\r\n  localDW->Traj_loc[607].f1[0] += localDW->absx21 * rtP.y[607];\r\n  localDW->Traj_loc[608].f1[0] += localDW->absx21 * rtP.y[608];\r\n  localDW->Traj_loc[609].f1[0] += localDW->absx21 * rtP.y[609];\r\n  localDW->Traj_loc[610].f1[0] += localDW->absx21 * rtP.y[610];\r\n  localDW->Traj_loc[611].f1[0] += localDW->absx21 * rtP.y[611];\r\n  localDW->Traj_loc[612].f1[0] += localDW->absx21 * rtP.y[612];\r\n  localDW->Traj_loc[613].f1[0] += localDW->absx21 * rtP.y[613];\r\n  localDW->Traj_loc[614].f1[0] += localDW->absx21 * rtP.y[614];\r\n  localDW->Traj_loc[615].f1[0] += localDW->absx21 * rtP.y[615];\r\n  localDW->Traj_loc[616].f1[0] += localDW->absx21 * rtP.y[616];\r\n  localDW->Traj_loc[617].f1[0] += localDW->absx21 * rtP.y[617];\r\n  localDW->Traj_loc[618].f1[0] += localDW->absx21 * rtP.y[618];\r\n  localDW->Traj_loc[619].f1[0] += localDW->absx21 * rtP.y[619];\r\n  localDW->Traj_loc[620].f1[0] += localDW->absx21 * rtP.y[620];\r\n  localDW->Traj_loc[621].f1[0] += localDW->absx21 * rtP.y[621];\r\n  localDW->Traj_loc[622].f1[0] += localDW->absx21 * rtP.y[622];\r\n  localDW->Traj_loc[623].f1[0] += localDW->absx21 * rtP.y[623];\r\n  localDW->Traj_loc[624].f1[0] += localDW->absx21 * rtP.y[624];\r\n  localDW->Traj_loc[625].f1[0] += localDW->absx21 * rtP.y[625];\r\n  localDW->Traj_loc[626].f1[0] += localDW->absx21 * rtP.y[626];\r\n  localDW->Traj_loc[627].f1[0] += localDW->absx21 * rtP.y[627];\r\n  localDW->Traj_loc[628].f1[0] += localDW->absx21 * rtP.y[628];\r\n  localDW->Traj_loc[629].f1[0] += localDW->absx21 * rtP.y[629];\r\n  localDW->Traj_loc[630].f1[0] += localDW->absx21 * rtP.y[630];\r\n  localDW->Traj_loc[631].f1[0] += localDW->absx21 * rtP.y[631];\r\n  localDW->Traj_loc[632].f1[0] += localDW->absx21 * rtP.y[632];\r\n  localDW->Traj_loc[633].f1[0] += localDW->absx21 * rtP.y[633];\r\n  localDW->Traj_loc[634].f1[0] += localDW->absx21 * rtP.y[634];\r\n  localDW->Traj_loc[635].f1[0] += localDW->absx21 * rtP.y[635];\r\n  localDW->Traj_loc[636].f1[0] += localDW->absx21 * rtP.y[636];\r\n  localDW->Traj_loc[637].f1[0] += localDW->absx21 * rtP.y[637];\r\n  localDW->Traj_loc[638].f1[0] += localDW->absx21 * rtP.y[638];\r\n  localDW->Traj_loc[639].f1[0] += localDW->absx21 * rtP.y[639];\r\n  localDW->Traj_loc[640].f1[0] += localDW->absx21 * rtP.y[640];\r\n  localDW->Traj_loc[641].f1[0] += localDW->absx21 * rtP.y[641];\r\n  localDW->Traj_loc[642].f1[0] += localDW->absx21 * rtP.y[642];\r\n  localDW->Traj_loc[643].f1[0] += localDW->absx21 * rtP.y[643];\r\n  localDW->Traj_loc[644].f1[0] += localDW->absx21 * rtP.y[644];\r\n  localDW->Traj_loc[645].f1[0] += localDW->absx21 * rtP.y[645];\r\n  localDW->Traj_loc[646].f1[0] += localDW->absx21 * rtP.y[646];\r\n  localDW->Traj_loc[647].f1[0] += localDW->absx21 * rtP.y[647];\r\n  localDW->Traj_loc[648].f1[0] += localDW->absx21 * rtP.y[648];\r\n  localDW->Traj_loc[649].f1[0] += localDW->absx21 * rtP.y[649];\r\n  localDW->Traj_loc[650].f1[0] += localDW->absx21 * rtP.y[650];\r\n  localDW->Traj_loc[651].f1[0] += localDW->absx21 * rtP.y[651];\r\n  localDW->Traj_loc[652].f1[0] += localDW->absx21 * rtP.y[652];\r\n  localDW->Traj_loc[653].f1[0] += localDW->absx21 * rtP.y[653];\r\n  localDW->Traj_loc[654].f1[0] += localDW->absx21 * rtP.y[654];\r\n  localDW->Traj_loc[655].f1[0] += localDW->absx21 * rtP.y[655];\r\n  localDW->Traj_loc[656].f1[0] += localDW->absx21 * rtP.y[656];\r\n  localDW->Traj_loc[657].f1[0] += localDW->absx21 * rtP.y[657];\r\n  localDW->Traj_loc[658].f1[0] += localDW->absx21 * rtP.y[658];\r\n  localDW->Traj_loc[659].f1[0] += localDW->absx21 * rtP.y[659];\r\n  localDW->Traj_loc[660].f1[0] += localDW->absx21 * rtP.y[660];\r\n  localDW->Traj_loc[661].f1[0] += localDW->absx21 * rtP.y[661];\r\n  localDW->Traj_loc[662].f1[0] += localDW->absx21 * rtP.y[662];\r\n  localDW->Traj_loc[663].f1[0] += localDW->absx21 * rtP.y[663];\r\n  localDW->Traj_loc[664].f1[0] += localDW->absx21 * rtP.y[664];\r\n  localDW->Traj_loc[665].f1[0] += localDW->absx21 * rtP.y[665];\r\n  localDW->Traj_loc[666].f1[0] += localDW->absx21 * rtP.y[666];\r\n  localDW->Traj_loc[667].f1[0] += localDW->absx21 * rtP.y[667];\r\n  localDW->Traj_loc[668].f1[0] += localDW->absx21 * rtP.y[668];\r\n  localDW->Traj_loc[669].f1[0] += localDW->absx21 * rtP.y[669];\r\n  localDW->Traj_loc[670].f1[0] += localDW->absx21 * rtP.y[670];\r\n  localDW->Traj_loc[671].f1[0] += localDW->absx21 * rtP.y[671];\r\n  localDW->Traj_loc[672].f1[0] += localDW->absx21 * rtP.y[672];\r\n  localDW->Traj_loc[673].f1[0] += localDW->absx21 * rtP.y[673];\r\n  localDW->Traj_loc[674].f1[0] += localDW->absx21 * rtP.y[674];\r\n  localDW->Traj_loc[675].f1[0] += localDW->absx21 * rtP.y[675];\r\n  localDW->Traj_loc[676].f1[0] += localDW->absx21 * rtP.y[676];\r\n  localDW->Traj_loc[677].f1[0] += localDW->absx21 * rtP.y[677];\r\n  localDW->Traj_loc[678].f1[0] += localDW->absx21 * rtP.y[678];\r\n  localDW->Traj_loc[679].f1[0] += localDW->absx21 * rtP.y[679];\r\n  localDW->Traj_loc[680].f1[0] += localDW->absx21 * rtP.y[680];\r\n  localDW->Traj_loc[681].f1[0] += localDW->absx21 * rtP.y[681];\r\n  localDW->Traj_loc[682].f1[0] += localDW->absx21 * rtP.y[682];\r\n  localDW->Traj_loc[683].f1[0] += localDW->absx21 * rtP.y[683];\r\n  localDW->Traj_loc[684].f1[0] += localDW->absx21 * rtP.y[684];\r\n  localDW->Traj_loc[685].f1[0] += localDW->absx21 * rtP.y[685];\r\n  localDW->Traj_loc[686].f1[0] += localDW->absx21 * rtP.y[686];\r\n  localDW->Traj_loc[687].f1[0] += localDW->absx21 * rtP.y[687];\r\n  localDW->Traj_loc[688].f1[0] += localDW->absx21 * rtP.y[688];\r\n  localDW->Traj_loc[689].f1[0] += localDW->absx21 * rtP.y[689];\r\n  localDW->Traj_loc[690].f1[0] += localDW->absx21 * rtP.y[690];\r\n  localDW->Traj_loc[691].f1[0] += localDW->absx21 * rtP.y[691];\r\n  localDW->Traj_loc[692].f1[0] += localDW->absx21 * rtP.y[692];\r\n  localDW->Traj_loc[693].f1[0] += localDW->absx21 * rtP.y[693];\r\n  localDW->Traj_loc[694].f1[0] += localDW->absx21 * rtP.y[694];\r\n  localDW->Traj_loc[695].f1[0] += localDW->absx21 * rtP.y[695];\r\n  localDW->Traj_loc[696].f1[0] += localDW->absx21 * rtP.y[696];\r\n  localDW->Traj_loc[697].f1[0] += localDW->absx21 * rtP.y[697];\r\n  localDW->Traj_loc[698].f1[0] += localDW->absx21 * rtP.y[698];\r\n  localDW->Traj_loc[699].f1[0] += localDW->absx21 * rtP.y[699];\r\n  localDW->Traj_loc[700].f1[0] += localDW->absx21 * rtP.y[700];\r\n  localDW->Traj_loc[701].f1[0] += localDW->absx21 * rtP.y[701];\r\n  localDW->Traj_loc[702].f1[0] += localDW->absx21 * rtP.y[702];\r\n  localDW->Traj_loc[703].f1[0] += localDW->absx21 * rtP.y[703];\r\n  localDW->Traj_loc[704].f1[0] += localDW->absx21 * rtP.y[704];\r\n  localDW->Traj_loc[705].f1[0] += localDW->absx21 * rtP.y[705];\r\n  localDW->Traj_loc[706].f1[0] += localDW->absx21 * rtP.y[706];\r\n  localDW->Traj_loc[707].f1[0] += localDW->absx21 * rtP.y[707];\r\n  localDW->Traj_loc[708].f1[0] += localDW->absx21 * rtP.y[708];\r\n  localDW->Traj_loc[709].f1[0] += localDW->absx21 * rtP.y[709];\r\n  localDW->Traj_loc[710].f1[0] += localDW->absx21 * rtP.y[710];\r\n  localDW->Traj_loc[711].f1[0] += localDW->absx21 * rtP.y[711];\r\n  localDW->Traj_loc[712].f1[0] += localDW->absx21 * rtP.y[712];\r\n  localDW->Traj_loc[713].f1[0] += localDW->absx21 * rtP.y[713];\r\n  localDW->Traj_loc[714].f1[0] += localDW->absx21 * rtP.y[714];\r\n  localDW->Traj_loc[715].f1[0] += localDW->absx21 * rtP.y[715];\r\n  localDW->Traj_loc[716].f1[0] += localDW->absx21 * rtP.y[716];\r\n  localDW->Traj_loc[717].f1[0] += localDW->absx21 * rtP.y[717];\r\n  localDW->Traj_loc[718].f1[0] += localDW->absx21 * rtP.y[718];\r\n  localDW->Traj_loc[719].f1[0] += localDW->absx21 * rtP.y[719];\r\n  localDW->Traj_loc[720].f1[0] += localDW->absx21 * rtP.y[720];\r\n  localDW->Traj_loc[721].f1[0] += localDW->absx21 * rtP.y[721];\r\n  localDW->Traj_loc[722].f1[0] += localDW->absx21 * rtP.y[722];\r\n  localDW->Traj_loc[723].f1[0] += localDW->absx21 * rtP.y[723];\r\n  localDW->Traj_loc[724].f1[0] += localDW->absx21 * rtP.y[724];\r\n  localDW->Traj_loc[725].f1[0] += localDW->absx21 * rtP.y[725];\r\n  localDW->Traj_loc[726].f1[0] += localDW->absx21 * rtP.y[726];\r\n  localDW->Traj_loc[727].f1[0] += localDW->absx21 * rtP.y[727];\r\n  localDW->Traj_loc[728].f1[0] += localDW->absx21 * rtP.y[728];\r\n  localDW->Traj_loc[729].f1[0] += localDW->absx21 * rtP.y[729];\r\n  localDW->Traj_loc[730].f1[0] += localDW->absx21 * rtP.y[730];\r\n  localDW->Traj_loc[731].f1[0] += localDW->absx21 * rtP.y[731];\r\n  localDW->Traj_loc[732].f1[0] += localDW->absx21 * rtP.y[732];\r\n  localDW->Traj_loc[733].f1[0] += localDW->absx21 * rtP.y[733];\r\n  localDW->Traj_loc[734].f1[0] += localDW->absx21 * rtP.y[734];\r\n  localDW->Traj_loc[735].f1[0] += localDW->absx21 * rtP.y[735];\r\n  localDW->Traj_loc[736].f1[0] += localDW->absx21 * rtP.y[736];\r\n  localDW->Traj_loc[737].f1[0] += localDW->absx21 * rtP.y[737];\r\n  localDW->Traj_loc[738].f1[0] += localDW->absx21 * rtP.y[738];\r\n  localDW->Traj_loc[739].f1[0] += localDW->absx21 * rtP.y[739];\r\n  localDW->Traj_loc[740].f1[0] += localDW->absx21 * rtP.y[740];\r\n  localDW->Traj_loc[741].f1[0] += localDW->absx21 * rtP.y[741];\r\n  localDW->Traj_loc[742].f1[0] += localDW->absx21 * rtP.y[742];\r\n  localDW->Traj_loc[743].f1[0] += localDW->absx21 * rtP.y[743];\r\n  localDW->Traj_loc[744].f1[0] += localDW->absx21 * rtP.y[744];\r\n  localDW->Traj_loc[745].f1[0] += localDW->absx21 * rtP.y[745];\r\n  localDW->Traj_loc[746].f1[0] += localDW->absx21 * rtP.y[746];\r\n  localDW->Traj_loc[747].f1[0] += localDW->absx21 * rtP.y[747];\r\n  localDW->Traj_loc[748].f1[0] += localDW->absx21 * rtP.y[748];\r\n  localDW->Traj_loc[749].f1[0] += localDW->absx21 * rtP.y[749];\r\n  localDW->Traj_loc[750].f1[0] += localDW->absx21 * rtP.y[750];\r\n  localDW->Traj_loc[751].f1[0] += localDW->absx21 * rtP.y[751];\r\n  localDW->Traj_loc[752].f1[0] += localDW->absx21 * rtP.y[752];\r\n  localDW->Traj_loc[753].f1[0] += localDW->absx21 * rtP.y[753];\r\n  localDW->Traj_loc[754].f1[0] += localDW->absx21 * rtP.y[754];\r\n  localDW->Traj_loc[755].f1[0] += localDW->absx21 * rtP.y[755];\r\n  localDW->Traj_loc[756].f1[0] += localDW->absx21 * rtP.y[756];\r\n  localDW->Traj_loc[757].f1[0] += localDW->absx21 * rtP.y[757];\r\n  localDW->Traj_loc[758].f1[0] += localDW->absx21 * rtP.y[758];\r\n  localDW->Traj_loc[759].f1[0] += localDW->absx21 * rtP.y[759];\r\n  localDW->Traj_loc[760].f1[0] += localDW->absx21 * rtP.y[760];\r\n  localDW->Traj_loc[761].f1[0] += localDW->absx21 * rtP.y[761];\r\n  localDW->Traj_loc[762].f1[0] += localDW->absx21 * rtP.y[762];\r\n  localDW->Traj_loc[763].f1[0] += localDW->absx21 * rtP.y[763];\r\n  localDW->Traj_loc[764].f1[0] += localDW->absx21 * rtP.y[764];\r\n  localDW->Traj_loc[765].f1[0] += localDW->absx21 * rtP.y[765];\r\n  localDW->Traj_loc[766].f1[0] += localDW->absx21 * rtP.y[766];\r\n  localDW->Traj_loc[767].f1[0] += localDW->absx21 * rtP.y[767];\r\n  localDW->Traj_loc[768].f1[0] += localDW->absx21 * rtP.y[768];\r\n  localDW->Traj_loc[769].f1[0] += localDW->absx21 * rtP.y[769];\r\n  localDW->Traj_loc[770].f1[0] += localDW->absx21 * rtP.y[770];\r\n  localDW->Traj_loc[771].f1[0] += localDW->absx21 * rtP.y[771];\r\n  localDW->Traj_loc[772].f1[0] += localDW->absx21 * rtP.y[772];\r\n  localDW->Traj_loc[773].f1[0] += localDW->absx21 * rtP.y[773];\r\n  localDW->Traj_loc[774].f1[0] += localDW->absx21 * rtP.y[774];\r\n  localDW->Traj_loc[775].f1[0] += localDW->absx21 * rtP.y[775];\r\n  localDW->Traj_loc[776].f1[0] += localDW->absx21 * rtP.y[776];\r\n  localDW->Traj_loc[777].f1[0] += localDW->absx21 * rtP.y[777];\r\n  localDW->Traj_loc[778].f1[0] += localDW->absx21 * rtP.y[778];\r\n  localDW->Traj_loc[779].f1[0] += localDW->absx21 * rtP.y[779];\r\n  localDW->Traj_loc[780].f1[0] += localDW->absx21 * rtP.y[780];\r\n  localDW->Traj_loc[781].f1[0] += localDW->absx21 * rtP.y[781];\r\n  localDW->Traj_loc[782].f1[0] += localDW->absx21 * rtP.y[782];\r\n  localDW->Traj_loc[783].f1[0] += localDW->absx21 * rtP.y[783];\r\n  localDW->Traj_loc[784].f1[0] += localDW->absx21 * rtP.y[784];\r\n  localDW->Traj_loc[785].f1[0] += localDW->absx21 * rtP.y[785];\r\n  localDW->Traj_loc[786].f1[0] += localDW->absx21 * rtP.y[786];\r\n  localDW->Traj_loc[787].f1[0] += localDW->absx21 * rtP.y[787];\r\n  localDW->Traj_loc[788].f1[0] += localDW->absx21 * rtP.y[788];\r\n  localDW->Traj_loc[789].f1[0] += localDW->absx21 * rtP.y[789];\r\n  localDW->Traj_loc[790].f1[0] += localDW->absx21 * rtP.y[790];\r\n  localDW->Traj_loc[791].f1[0] += localDW->absx21 * rtP.y[791];\r\n  localDW->Traj_loc[792].f1[0] += localDW->absx21 * rtP.y[792];\r\n  localDW->Traj_loc[793].f1[0] += localDW->absx21 * rtP.y[793];\r\n  localDW->Traj_loc[794].f1[0] += localDW->absx21 * rtP.y[794];\r\n  localDW->Traj_loc[795].f1[0] += localDW->absx21 * rtP.y[795];\r\n  localDW->Traj_loc[796].f1[0] += localDW->absx21 * rtP.y[796];\r\n  localDW->Traj_loc[797].f1[0] += localDW->absx21 * rtP.y[797];\r\n  localDW->Traj_loc[798].f1[0] += localDW->absx21 * rtP.y[798];\r\n  localDW->Traj_loc[799].f1[0] += localDW->absx21 * rtP.y[799];\r\n  localDW->Traj_loc[800].f1[0] += localDW->absx21 * rtP.y[800];\r\n  localDW->Traj_loc[0].f1[1] = localDW->absx21 * rtP.x[0];\r\n  localDW->Traj_loc[1].f1[1] = localDW->absx21 * rtP.x[1];\r\n  localDW->Traj_loc[2].f1[1] = localDW->absx21 * rtP.x[2];\r\n  localDW->Traj_loc[3].f1[1] = localDW->absx21 * rtP.x[3];\r\n  localDW->Traj_loc[4].f1[1] = localDW->absx21 * rtP.x[4];\r\n  localDW->Traj_loc[5].f1[1] = localDW->absx21 * rtP.x[5];\r\n  localDW->Traj_loc[6].f1[1] = localDW->absx21 * rtP.x[6];\r\n  localDW->Traj_loc[7].f1[1] = localDW->absx21 * rtP.x[7];\r\n  localDW->Traj_loc[8].f1[1] = localDW->absx21 * rtP.x[8];\r\n  localDW->Traj_loc[9].f1[1] = localDW->absx21 * rtP.x[9];\r\n  localDW->Traj_loc[10].f1[1] = localDW->absx21 * rtP.x[10];\r\n  localDW->Traj_loc[11].f1[1] = localDW->absx21 * rtP.x[11];\r\n  localDW->Traj_loc[12].f1[1] = localDW->absx21 * rtP.x[12];\r\n  localDW->Traj_loc[13].f1[1] = localDW->absx21 * rtP.x[13];\r\n  localDW->Traj_loc[14].f1[1] = localDW->absx21 * rtP.x[14];\r\n  localDW->Traj_loc[15].f1[1] = localDW->absx21 * rtP.x[15];\r\n  localDW->Traj_loc[16].f1[1] = localDW->absx21 * rtP.x[16];\r\n  localDW->Traj_loc[17].f1[1] = localDW->absx21 * rtP.x[17];\r\n  localDW->Traj_loc[18].f1[1] = localDW->absx21 * rtP.x[18];\r\n  localDW->Traj_loc[19].f1[1] = localDW->absx21 * rtP.x[19];\r\n  localDW->Traj_loc[20].f1[1] = localDW->absx21 * rtP.x[20];\r\n  localDW->Traj_loc[21].f1[1] = localDW->absx21 * rtP.x[21];\r\n  localDW->Traj_loc[22].f1[1] = localDW->absx21 * rtP.x[22];\r\n  localDW->Traj_loc[23].f1[1] = localDW->absx21 * rtP.x[23];\r\n  localDW->Traj_loc[24].f1[1] = localDW->absx21 * rtP.x[24];\r\n  localDW->Traj_loc[25].f1[1] = localDW->absx21 * rtP.x[25];\r\n  localDW->Traj_loc[26].f1[1] = localDW->absx21 * rtP.x[26];\r\n  localDW->Traj_loc[27].f1[1] = localDW->absx21 * rtP.x[27];\r\n  localDW->Traj_loc[28].f1[1] = localDW->absx21 * rtP.x[28];\r\n  localDW->Traj_loc[29].f1[1] = localDW->absx21 * rtP.x[29];\r\n  localDW->Traj_loc[30].f1[1] = localDW->absx21 * rtP.x[30];\r\n  localDW->Traj_loc[31].f1[1] = localDW->absx21 * rtP.x[31];\r\n  localDW->Traj_loc[32].f1[1] = localDW->absx21 * rtP.x[32];\r\n  localDW->Traj_loc[33].f1[1] = localDW->absx21 * rtP.x[33];\r\n  localDW->Traj_loc[34].f1[1] = localDW->absx21 * rtP.x[34];\r\n  localDW->Traj_loc[35].f1[1] = localDW->absx21 * rtP.x[35];\r\n  localDW->Traj_loc[36].f1[1] = localDW->absx21 * rtP.x[36];\r\n  localDW->Traj_loc[37].f1[1] = localDW->absx21 * rtP.x[37];\r\n  localDW->Traj_loc[38].f1[1] = localDW->absx21 * rtP.x[38];\r\n  localDW->Traj_loc[39].f1[1] = localDW->absx21 * rtP.x[39];\r\n  localDW->Traj_loc[40].f1[1] = localDW->absx21 * rtP.x[40];\r\n  localDW->Traj_loc[41].f1[1] = localDW->absx21 * rtP.x[41];\r\n  localDW->Traj_loc[42].f1[1] = localDW->absx21 * rtP.x[42];\r\n  localDW->Traj_loc[43].f1[1] = localDW->absx21 * rtP.x[43];\r\n  localDW->Traj_loc[44].f1[1] = localDW->absx21 * rtP.x[44];\r\n  localDW->Traj_loc[45].f1[1] = localDW->absx21 * rtP.x[45];\r\n  localDW->Traj_loc[46].f1[1] = localDW->absx21 * rtP.x[46];\r\n  localDW->Traj_loc[47].f1[1] = localDW->absx21 * rtP.x[47];\r\n  localDW->Traj_loc[48].f1[1] = localDW->absx21 * rtP.x[48];\r\n  localDW->Traj_loc[49].f1[1] = localDW->absx21 * rtP.x[49];\r\n  localDW->Traj_loc[50].f1[1] = localDW->absx21 * rtP.x[50];\r\n  localDW->Traj_loc[51].f1[1] = localDW->absx21 * rtP.x[51];\r\n  localDW->Traj_loc[52].f1[1] = localDW->absx21 * rtP.x[52];\r\n  localDW->Traj_loc[53].f1[1] = localDW->absx21 * rtP.x[53];\r\n  localDW->Traj_loc[54].f1[1] = localDW->absx21 * rtP.x[54];\r\n  localDW->Traj_loc[55].f1[1] = localDW->absx21 * rtP.x[55];\r\n  localDW->Traj_loc[56].f1[1] = localDW->absx21 * rtP.x[56];\r\n  localDW->Traj_loc[57].f1[1] = localDW->absx21 * rtP.x[57];\r\n  localDW->Traj_loc[58].f1[1] = localDW->absx21 * rtP.x[58];\r\n  localDW->Traj_loc[59].f1[1] = localDW->absx21 * rtP.x[59];\r\n  localDW->Traj_loc[60].f1[1] = localDW->absx21 * rtP.x[60];\r\n  localDW->Traj_loc[61].f1[1] = localDW->absx21 * rtP.x[61];\r\n  localDW->Traj_loc[62].f1[1] = localDW->absx21 * rtP.x[62];\r\n  localDW->Traj_loc[63].f1[1] = localDW->absx21 * rtP.x[63];\r\n  localDW->Traj_loc[64].f1[1] = localDW->absx21 * rtP.x[64];\r\n  localDW->Traj_loc[65].f1[1] = localDW->absx21 * rtP.x[65];\r\n  localDW->Traj_loc[66].f1[1] = localDW->absx21 * rtP.x[66];\r\n  localDW->Traj_loc[67].f1[1] = localDW->absx21 * rtP.x[67];\r\n  localDW->Traj_loc[68].f1[1] = localDW->absx21 * rtP.x[68];\r\n  localDW->Traj_loc[69].f1[1] = localDW->absx21 * rtP.x[69];\r\n  localDW->Traj_loc[70].f1[1] = localDW->absx21 * rtP.x[70];\r\n  localDW->Traj_loc[71].f1[1] = localDW->absx21 * rtP.x[71];\r\n  localDW->Traj_loc[72].f1[1] = localDW->absx21 * rtP.x[72];\r\n  localDW->Traj_loc[73].f1[1] = localDW->absx21 * rtP.x[73];\r\n  localDW->Traj_loc[74].f1[1] = localDW->absx21 * rtP.x[74];\r\n  localDW->Traj_loc[75].f1[1] = localDW->absx21 * rtP.x[75];\r\n  localDW->Traj_loc[76].f1[1] = localDW->absx21 * rtP.x[76];\r\n  localDW->Traj_loc[77].f1[1] = localDW->absx21 * rtP.x[77];\r\n  localDW->Traj_loc[78].f1[1] = localDW->absx21 * rtP.x[78];\r\n  localDW->Traj_loc[79].f1[1] = localDW->absx21 * rtP.x[79];\r\n  localDW->Traj_loc[80].f1[1] = localDW->absx21 * rtP.x[80];\r\n  localDW->Traj_loc[81].f1[1] = localDW->absx21 * rtP.x[81];\r\n  localDW->Traj_loc[82].f1[1] = localDW->absx21 * rtP.x[82];\r\n  localDW->Traj_loc[83].f1[1] = localDW->absx21 * rtP.x[83];\r\n  localDW->Traj_loc[84].f1[1] = localDW->absx21 * rtP.x[84];\r\n  localDW->Traj_loc[85].f1[1] = localDW->absx21 * rtP.x[85];\r\n  localDW->Traj_loc[86].f1[1] = localDW->absx21 * rtP.x[86];\r\n  localDW->Traj_loc[87].f1[1] = localDW->absx21 * rtP.x[87];\r\n  localDW->Traj_loc[88].f1[1] = localDW->absx21 * rtP.x[88];\r\n  localDW->Traj_loc[89].f1[1] = localDW->absx21 * rtP.x[89];\r\n  localDW->Traj_loc[90].f1[1] = localDW->absx21 * rtP.x[90];\r\n  localDW->Traj_loc[91].f1[1] = localDW->absx21 * rtP.x[91];\r\n  localDW->Traj_loc[92].f1[1] = localDW->absx21 * rtP.x[92];\r\n  localDW->Traj_loc[93].f1[1] = localDW->absx21 * rtP.x[93];\r\n  localDW->Traj_loc[94].f1[1] = localDW->absx21 * rtP.x[94];\r\n  localDW->Traj_loc[95].f1[1] = localDW->absx21 * rtP.x[95];\r\n  localDW->Traj_loc[96].f1[1] = localDW->absx21 * rtP.x[96];\r\n  localDW->Traj_loc[97].f1[1] = localDW->absx21 * rtP.x[97];\r\n  localDW->Traj_loc[98].f1[1] = localDW->absx21 * rtP.x[98];\r\n  localDW->Traj_loc[99].f1[1] = localDW->absx21 * rtP.x[99];\r\n  localDW->Traj_loc[100].f1[1] = localDW->absx21 * rtP.x[100];\r\n  localDW->Traj_loc[101].f1[1] = localDW->absx21 * rtP.x[101];\r\n  localDW->Traj_loc[102].f1[1] = localDW->absx21 * rtP.x[102];\r\n  localDW->Traj_loc[103].f1[1] = localDW->absx21 * rtP.x[103];\r\n  localDW->Traj_loc[104].f1[1] = localDW->absx21 * rtP.x[104];\r\n  localDW->Traj_loc[105].f1[1] = localDW->absx21 * rtP.x[105];\r\n  localDW->Traj_loc[106].f1[1] = localDW->absx21 * rtP.x[106];\r\n  localDW->Traj_loc[107].f1[1] = localDW->absx21 * rtP.x[107];\r\n  localDW->Traj_loc[108].f1[1] = localDW->absx21 * rtP.x[108];\r\n  localDW->Traj_loc[109].f1[1] = localDW->absx21 * rtP.x[109];\r\n  localDW->Traj_loc[110].f1[1] = localDW->absx21 * rtP.x[110];\r\n  localDW->Traj_loc[111].f1[1] = localDW->absx21 * rtP.x[111];\r\n  localDW->Traj_loc[112].f1[1] = localDW->absx21 * rtP.x[112];\r\n  localDW->Traj_loc[113].f1[1] = localDW->absx21 * rtP.x[113];\r\n  localDW->Traj_loc[114].f1[1] = localDW->absx21 * rtP.x[114];\r\n  localDW->Traj_loc[115].f1[1] = localDW->absx21 * rtP.x[115];\r\n  localDW->Traj_loc[116].f1[1] = localDW->absx21 * rtP.x[116];\r\n  localDW->Traj_loc[117].f1[1] = localDW->absx21 * rtP.x[117];\r\n  localDW->Traj_loc[118].f1[1] = localDW->absx21 * rtP.x[118];\r\n  localDW->Traj_loc[119].f1[1] = localDW->absx21 * rtP.x[119];\r\n  localDW->Traj_loc[120].f1[1] = localDW->absx21 * rtP.x[120];\r\n  localDW->Traj_loc[121].f1[1] = localDW->absx21 * rtP.x[121];\r\n  localDW->Traj_loc[122].f1[1] = localDW->absx21 * rtP.x[122];\r\n  localDW->Traj_loc[123].f1[1] = localDW->absx21 * rtP.x[123];\r\n  localDW->Traj_loc[124].f1[1] = localDW->absx21 * rtP.x[124];\r\n  localDW->Traj_loc[125].f1[1] = localDW->absx21 * rtP.x[125];\r\n  localDW->Traj_loc[126].f1[1] = localDW->absx21 * rtP.x[126];\r\n  localDW->Traj_loc[127].f1[1] = localDW->absx21 * rtP.x[127];\r\n  localDW->Traj_loc[128].f1[1] = localDW->absx21 * rtP.x[128];\r\n  localDW->Traj_loc[129].f1[1] = localDW->absx21 * rtP.x[129];\r\n  localDW->Traj_loc[130].f1[1] = localDW->absx21 * rtP.x[130];\r\n  localDW->Traj_loc[131].f1[1] = localDW->absx21 * rtP.x[131];\r\n  localDW->Traj_loc[132].f1[1] = localDW->absx21 * rtP.x[132];\r\n  localDW->Traj_loc[133].f1[1] = localDW->absx21 * rtP.x[133];\r\n  localDW->Traj_loc[134].f1[1] = localDW->absx21 * rtP.x[134];\r\n  localDW->Traj_loc[135].f1[1] = localDW->absx21 * rtP.x[135];\r\n  localDW->Traj_loc[136].f1[1] = localDW->absx21 * rtP.x[136];\r\n  localDW->Traj_loc[137].f1[1] = localDW->absx21 * rtP.x[137];\r\n  localDW->Traj_loc[138].f1[1] = localDW->absx21 * rtP.x[138];\r\n  localDW->Traj_loc[139].f1[1] = localDW->absx21 * rtP.x[139];\r\n  localDW->Traj_loc[140].f1[1] = localDW->absx21 * rtP.x[140];\r\n  localDW->Traj_loc[141].f1[1] = localDW->absx21 * rtP.x[141];\r\n  localDW->Traj_loc[142].f1[1] = localDW->absx21 * rtP.x[142];\r\n  localDW->Traj_loc[143].f1[1] = localDW->absx21 * rtP.x[143];\r\n  localDW->Traj_loc[144].f1[1] = localDW->absx21 * rtP.x[144];\r\n  localDW->Traj_loc[145].f1[1] = localDW->absx21 * rtP.x[145];\r\n  localDW->Traj_loc[146].f1[1] = localDW->absx21 * rtP.x[146];\r\n  localDW->Traj_loc[147].f1[1] = localDW->absx21 * rtP.x[147];\r\n  localDW->Traj_loc[148].f1[1] = localDW->absx21 * rtP.x[148];\r\n  localDW->Traj_loc[149].f1[1] = localDW->absx21 * rtP.x[149];\r\n  localDW->Traj_loc[150].f1[1] = localDW->absx21 * rtP.x[150];\r\n  localDW->Traj_loc[151].f1[1] = localDW->absx21 * rtP.x[151];\r\n  localDW->Traj_loc[152].f1[1] = localDW->absx21 * rtP.x[152];\r\n  localDW->Traj_loc[153].f1[1] = localDW->absx21 * rtP.x[153];\r\n  localDW->Traj_loc[154].f1[1] = localDW->absx21 * rtP.x[154];\r\n  localDW->Traj_loc[155].f1[1] = localDW->absx21 * rtP.x[155];\r\n  localDW->Traj_loc[156].f1[1] = localDW->absx21 * rtP.x[156];\r\n  localDW->Traj_loc[157].f1[1] = localDW->absx21 * rtP.x[157];\r\n  localDW->Traj_loc[158].f1[1] = localDW->absx21 * rtP.x[158];\r\n  localDW->Traj_loc[159].f1[1] = localDW->absx21 * rtP.x[159];\r\n  localDW->Traj_loc[160].f1[1] = localDW->absx21 * rtP.x[160];\r\n  localDW->Traj_loc[161].f1[1] = localDW->absx21 * rtP.x[161];\r\n  localDW->Traj_loc[162].f1[1] = localDW->absx21 * rtP.x[162];\r\n  localDW->Traj_loc[163].f1[1] = localDW->absx21 * rtP.x[163];\r\n  localDW->Traj_loc[164].f1[1] = localDW->absx21 * rtP.x[164];\r\n  localDW->Traj_loc[165].f1[1] = localDW->absx21 * rtP.x[165];\r\n  localDW->Traj_loc[166].f1[1] = localDW->absx21 * rtP.x[166];\r\n  localDW->Traj_loc[167].f1[1] = localDW->absx21 * rtP.x[167];\r\n  localDW->Traj_loc[168].f1[1] = localDW->absx21 * rtP.x[168];\r\n  localDW->Traj_loc[169].f1[1] = localDW->absx21 * rtP.x[169];\r\n  localDW->Traj_loc[170].f1[1] = localDW->absx21 * rtP.x[170];\r\n  localDW->Traj_loc[171].f1[1] = localDW->absx21 * rtP.x[171];\r\n  localDW->Traj_loc[172].f1[1] = localDW->absx21 * rtP.x[172];\r\n  localDW->Traj_loc[173].f1[1] = localDW->absx21 * rtP.x[173];\r\n  localDW->Traj_loc[174].f1[1] = localDW->absx21 * rtP.x[174];\r\n  localDW->Traj_loc[175].f1[1] = localDW->absx21 * rtP.x[175];\r\n  localDW->Traj_loc[176].f1[1] = localDW->absx21 * rtP.x[176];\r\n  localDW->Traj_loc[177].f1[1] = localDW->absx21 * rtP.x[177];\r\n  localDW->Traj_loc[178].f1[1] = localDW->absx21 * rtP.x[178];\r\n  localDW->Traj_loc[179].f1[1] = localDW->absx21 * rtP.x[179];\r\n  localDW->Traj_loc[180].f1[1] = localDW->absx21 * rtP.x[180];\r\n  localDW->Traj_loc[181].f1[1] = localDW->absx21 * rtP.x[181];\r\n  localDW->Traj_loc[182].f1[1] = localDW->absx21 * rtP.x[182];\r\n  localDW->Traj_loc[183].f1[1] = localDW->absx21 * rtP.x[183];\r\n  localDW->Traj_loc[184].f1[1] = localDW->absx21 * rtP.x[184];\r\n  localDW->Traj_loc[185].f1[1] = localDW->absx21 * rtP.x[185];\r\n  localDW->Traj_loc[186].f1[1] = localDW->absx21 * rtP.x[186];\r\n  localDW->Traj_loc[187].f1[1] = localDW->absx21 * rtP.x[187];\r\n  localDW->Traj_loc[188].f1[1] = localDW->absx21 * rtP.x[188];\r\n  localDW->Traj_loc[189].f1[1] = localDW->absx21 * rtP.x[189];\r\n  localDW->Traj_loc[190].f1[1] = localDW->absx21 * rtP.x[190];\r\n  localDW->Traj_loc[191].f1[1] = localDW->absx21 * rtP.x[191];\r\n  localDW->Traj_loc[192].f1[1] = localDW->absx21 * rtP.x[192];\r\n  localDW->Traj_loc[193].f1[1] = localDW->absx21 * rtP.x[193];\r\n  localDW->Traj_loc[194].f1[1] = localDW->absx21 * rtP.x[194];\r\n  localDW->Traj_loc[195].f1[1] = localDW->absx21 * rtP.x[195];\r\n  localDW->Traj_loc[196].f1[1] = localDW->absx21 * rtP.x[196];\r\n  localDW->Traj_loc[197].f1[1] = localDW->absx21 * rtP.x[197];\r\n  localDW->Traj_loc[198].f1[1] = localDW->absx21 * rtP.x[198];\r\n  localDW->Traj_loc[199].f1[1] = localDW->absx21 * rtP.x[199];\r\n  localDW->Traj_loc[200].f1[1] = localDW->absx21 * rtP.x[200];\r\n  localDW->Traj_loc[201].f1[1] = localDW->absx21 * rtP.x[201];\r\n  localDW->Traj_loc[202].f1[1] = localDW->absx21 * rtP.x[202];\r\n  localDW->Traj_loc[203].f1[1] = localDW->absx21 * rtP.x[203];\r\n  localDW->Traj_loc[204].f1[1] = localDW->absx21 * rtP.x[204];\r\n  localDW->Traj_loc[205].f1[1] = localDW->absx21 * rtP.x[205];\r\n  localDW->Traj_loc[206].f1[1] = localDW->absx21 * rtP.x[206];\r\n  localDW->Traj_loc[207].f1[1] = localDW->absx21 * rtP.x[207];\r\n  localDW->Traj_loc[208].f1[1] = localDW->absx21 * rtP.x[208];\r\n  localDW->Traj_loc[209].f1[1] = localDW->absx21 * rtP.x[209];\r\n  localDW->Traj_loc[210].f1[1] = localDW->absx21 * rtP.x[210];\r\n  localDW->Traj_loc[211].f1[1] = localDW->absx21 * rtP.x[211];\r\n  localDW->Traj_loc[212].f1[1] = localDW->absx21 * rtP.x[212];\r\n  localDW->Traj_loc[213].f1[1] = localDW->absx21 * rtP.x[213];\r\n  localDW->Traj_loc[214].f1[1] = localDW->absx21 * rtP.x[214];\r\n  localDW->Traj_loc[215].f1[1] = localDW->absx21 * rtP.x[215];\r\n  localDW->Traj_loc[216].f1[1] = localDW->absx21 * rtP.x[216];\r\n  localDW->Traj_loc[217].f1[1] = localDW->absx21 * rtP.x[217];\r\n  localDW->Traj_loc[218].f1[1] = localDW->absx21 * rtP.x[218];\r\n  localDW->Traj_loc[219].f1[1] = localDW->absx21 * rtP.x[219];\r\n  localDW->Traj_loc[220].f1[1] = localDW->absx21 * rtP.x[220];\r\n  localDW->Traj_loc[221].f1[1] = localDW->absx21 * rtP.x[221];\r\n  localDW->Traj_loc[222].f1[1] = localDW->absx21 * rtP.x[222];\r\n  localDW->Traj_loc[223].f1[1] = localDW->absx21 * rtP.x[223];\r\n  localDW->Traj_loc[224].f1[1] = localDW->absx21 * rtP.x[224];\r\n  localDW->Traj_loc[225].f1[1] = localDW->absx21 * rtP.x[225];\r\n  localDW->Traj_loc[226].f1[1] = localDW->absx21 * rtP.x[226];\r\n  localDW->Traj_loc[227].f1[1] = localDW->absx21 * rtP.x[227];\r\n  localDW->Traj_loc[228].f1[1] = localDW->absx21 * rtP.x[228];\r\n  localDW->Traj_loc[229].f1[1] = localDW->absx21 * rtP.x[229];\r\n  localDW->Traj_loc[230].f1[1] = localDW->absx21 * rtP.x[230];\r\n  localDW->Traj_loc[231].f1[1] = localDW->absx21 * rtP.x[231];\r\n  localDW->Traj_loc[232].f1[1] = localDW->absx21 * rtP.x[232];\r\n  localDW->Traj_loc[233].f1[1] = localDW->absx21 * rtP.x[233];\r\n  localDW->Traj_loc[234].f1[1] = localDW->absx21 * rtP.x[234];\r\n  localDW->Traj_loc[235].f1[1] = localDW->absx21 * rtP.x[235];\r\n  localDW->Traj_loc[236].f1[1] = localDW->absx21 * rtP.x[236];\r\n  localDW->Traj_loc[237].f1[1] = localDW->absx21 * rtP.x[237];\r\n  localDW->Traj_loc[238].f1[1] = localDW->absx21 * rtP.x[238];\r\n  localDW->Traj_loc[239].f1[1] = localDW->absx21 * rtP.x[239];\r\n  localDW->Traj_loc[240].f1[1] = localDW->absx21 * rtP.x[240];\r\n  localDW->Traj_loc[241].f1[1] = localDW->absx21 * rtP.x[241];\r\n  localDW->Traj_loc[242].f1[1] = localDW->absx21 * rtP.x[242];\r\n  localDW->Traj_loc[243].f1[1] = localDW->absx21 * rtP.x[243];\r\n  localDW->Traj_loc[244].f1[1] = localDW->absx21 * rtP.x[244];\r\n  localDW->Traj_loc[245].f1[1] = localDW->absx21 * rtP.x[245];\r\n  localDW->Traj_loc[246].f1[1] = localDW->absx21 * rtP.x[246];\r\n  localDW->Traj_loc[247].f1[1] = localDW->absx21 * rtP.x[247];\r\n  localDW->Traj_loc[248].f1[1] = localDW->absx21 * rtP.x[248];\r\n  localDW->Traj_loc[249].f1[1] = localDW->absx21 * rtP.x[249];\r\n  localDW->Traj_loc[250].f1[1] = localDW->absx21 * rtP.x[250];\r\n  localDW->Traj_loc[251].f1[1] = localDW->absx21 * rtP.x[251];\r\n  localDW->Traj_loc[252].f1[1] = localDW->absx21 * rtP.x[252];\r\n  localDW->Traj_loc[253].f1[1] = localDW->absx21 * rtP.x[253];\r\n  localDW->Traj_loc[254].f1[1] = localDW->absx21 * rtP.x[254];\r\n  localDW->Traj_loc[255].f1[1] = localDW->absx21 * rtP.x[255];\r\n  localDW->Traj_loc[256].f1[1] = localDW->absx21 * rtP.x[256];\r\n  localDW->Traj_loc[257].f1[1] = localDW->absx21 * rtP.x[257];\r\n  localDW->Traj_loc[258].f1[1] = localDW->absx21 * rtP.x[258];\r\n  localDW->Traj_loc[259].f1[1] = localDW->absx21 * rtP.x[259];\r\n  localDW->Traj_loc[260].f1[1] = localDW->absx21 * rtP.x[260];\r\n  localDW->Traj_loc[261].f1[1] = localDW->absx21 * rtP.x[261];\r\n  localDW->Traj_loc[262].f1[1] = localDW->absx21 * rtP.x[262];\r\n  localDW->Traj_loc[263].f1[1] = localDW->absx21 * rtP.x[263];\r\n  localDW->Traj_loc[264].f1[1] = localDW->absx21 * rtP.x[264];\r\n  localDW->Traj_loc[265].f1[1] = localDW->absx21 * rtP.x[265];\r\n  localDW->Traj_loc[266].f1[1] = localDW->absx21 * rtP.x[266];\r\n  localDW->Traj_loc[267].f1[1] = localDW->absx21 * rtP.x[267];\r\n  localDW->Traj_loc[268].f1[1] = localDW->absx21 * rtP.x[268];\r\n  localDW->Traj_loc[269].f1[1] = localDW->absx21 * rtP.x[269];\r\n  localDW->Traj_loc[270].f1[1] = localDW->absx21 * rtP.x[270];\r\n  localDW->Traj_loc[271].f1[1] = localDW->absx21 * rtP.x[271];\r\n  localDW->Traj_loc[272].f1[1] = localDW->absx21 * rtP.x[272];\r\n  localDW->Traj_loc[273].f1[1] = localDW->absx21 * rtP.x[273];\r\n  localDW->Traj_loc[274].f1[1] = localDW->absx21 * rtP.x[274];\r\n  localDW->Traj_loc[275].f1[1] = localDW->absx21 * rtP.x[275];\r\n  localDW->Traj_loc[276].f1[1] = localDW->absx21 * rtP.x[276];\r\n  localDW->Traj_loc[277].f1[1] = localDW->absx21 * rtP.x[277];\r\n  localDW->Traj_loc[278].f1[1] = localDW->absx21 * rtP.x[278];\r\n  localDW->Traj_loc[279].f1[1] = localDW->absx21 * rtP.x[279];\r\n  localDW->Traj_loc[280].f1[1] = localDW->absx21 * rtP.x[280];\r\n  localDW->Traj_loc[281].f1[1] = localDW->absx21 * rtP.x[281];\r\n  localDW->Traj_loc[282].f1[1] = localDW->absx21 * rtP.x[282];\r\n  localDW->Traj_loc[283].f1[1] = localDW->absx21 * rtP.x[283];\r\n  localDW->Traj_loc[284].f1[1] = localDW->absx21 * rtP.x[284];\r\n  localDW->Traj_loc[285].f1[1] = localDW->absx21 * rtP.x[285];\r\n  localDW->Traj_loc[286].f1[1] = localDW->absx21 * rtP.x[286];\r\n  localDW->Traj_loc[287].f1[1] = localDW->absx21 * rtP.x[287];\r\n  localDW->Traj_loc[288].f1[1] = localDW->absx21 * rtP.x[288];\r\n  localDW->Traj_loc[289].f1[1] = localDW->absx21 * rtP.x[289];\r\n  localDW->Traj_loc[290].f1[1] = localDW->absx21 * rtP.x[290];\r\n  localDW->Traj_loc[291].f1[1] = localDW->absx21 * rtP.x[291];\r\n  localDW->Traj_loc[292].f1[1] = localDW->absx21 * rtP.x[292];\r\n  localDW->Traj_loc[293].f1[1] = localDW->absx21 * rtP.x[293];\r\n  localDW->Traj_loc[294].f1[1] = localDW->absx21 * rtP.x[294];\r\n  localDW->Traj_loc[295].f1[1] = localDW->absx21 * rtP.x[295];\r\n  localDW->Traj_loc[296].f1[1] = localDW->absx21 * rtP.x[296];\r\n  localDW->Traj_loc[297].f1[1] = localDW->absx21 * rtP.x[297];\r\n  localDW->Traj_loc[298].f1[1] = localDW->absx21 * rtP.x[298];\r\n  localDW->Traj_loc[299].f1[1] = localDW->absx21 * rtP.x[299];\r\n  localDW->Traj_loc[300].f1[1] = localDW->absx21 * rtP.x[300];\r\n  localDW->Traj_loc[301].f1[1] = localDW->absx21 * rtP.x[301];\r\n  localDW->Traj_loc[302].f1[1] = localDW->absx21 * rtP.x[302];\r\n  localDW->Traj_loc[303].f1[1] = localDW->absx21 * rtP.x[303];\r\n  localDW->Traj_loc[304].f1[1] = localDW->absx21 * rtP.x[304];\r\n  localDW->Traj_loc[305].f1[1] = localDW->absx21 * rtP.x[305];\r\n  localDW->Traj_loc[306].f1[1] = localDW->absx21 * rtP.x[306];\r\n  localDW->Traj_loc[307].f1[1] = localDW->absx21 * rtP.x[307];\r\n  localDW->Traj_loc[308].f1[1] = localDW->absx21 * rtP.x[308];\r\n  localDW->Traj_loc[309].f1[1] = localDW->absx21 * rtP.x[309];\r\n  localDW->Traj_loc[310].f1[1] = localDW->absx21 * rtP.x[310];\r\n  localDW->Traj_loc[311].f1[1] = localDW->absx21 * rtP.x[311];\r\n  localDW->Traj_loc[312].f1[1] = localDW->absx21 * rtP.x[312];\r\n  localDW->Traj_loc[313].f1[1] = localDW->absx21 * rtP.x[313];\r\n  localDW->Traj_loc[314].f1[1] = localDW->absx21 * rtP.x[314];\r\n  localDW->Traj_loc[315].f1[1] = localDW->absx21 * rtP.x[315];\r\n  localDW->Traj_loc[316].f1[1] = localDW->absx21 * rtP.x[316];\r\n  localDW->Traj_loc[317].f1[1] = localDW->absx21 * rtP.x[317];\r\n  localDW->Traj_loc[318].f1[1] = localDW->absx21 * rtP.x[318];\r\n  localDW->Traj_loc[319].f1[1] = localDW->absx21 * rtP.x[319];\r\n  localDW->Traj_loc[320].f1[1] = localDW->absx21 * rtP.x[320];\r\n  localDW->Traj_loc[321].f1[1] = localDW->absx21 * rtP.x[321];\r\n  localDW->Traj_loc[322].f1[1] = localDW->absx21 * rtP.x[322];\r\n  localDW->Traj_loc[323].f1[1] = localDW->absx21 * rtP.x[323];\r\n  localDW->Traj_loc[324].f1[1] = localDW->absx21 * rtP.x[324];\r\n  localDW->Traj_loc[325].f1[1] = localDW->absx21 * rtP.x[325];\r\n  localDW->Traj_loc[326].f1[1] = localDW->absx21 * rtP.x[326];\r\n  localDW->Traj_loc[327].f1[1] = localDW->absx21 * rtP.x[327];\r\n  localDW->Traj_loc[328].f1[1] = localDW->absx21 * rtP.x[328];\r\n  localDW->Traj_loc[329].f1[1] = localDW->absx21 * rtP.x[329];\r\n  localDW->Traj_loc[330].f1[1] = localDW->absx21 * rtP.x[330];\r\n  localDW->Traj_loc[331].f1[1] = localDW->absx21 * rtP.x[331];\r\n  localDW->Traj_loc[332].f1[1] = localDW->absx21 * rtP.x[332];\r\n  localDW->Traj_loc[333].f1[1] = localDW->absx21 * rtP.x[333];\r\n  localDW->Traj_loc[334].f1[1] = localDW->absx21 * rtP.x[334];\r\n  localDW->Traj_loc[335].f1[1] = localDW->absx21 * rtP.x[335];\r\n  localDW->Traj_loc[336].f1[1] = localDW->absx21 * rtP.x[336];\r\n  localDW->Traj_loc[337].f1[1] = localDW->absx21 * rtP.x[337];\r\n  localDW->Traj_loc[338].f1[1] = localDW->absx21 * rtP.x[338];\r\n  localDW->Traj_loc[339].f1[1] = localDW->absx21 * rtP.x[339];\r\n  localDW->Traj_loc[340].f1[1] = localDW->absx21 * rtP.x[340];\r\n  localDW->Traj_loc[341].f1[1] = localDW->absx21 * rtP.x[341];\r\n  localDW->Traj_loc[342].f1[1] = localDW->absx21 * rtP.x[342];\r\n  localDW->Traj_loc[343].f1[1] = localDW->absx21 * rtP.x[343];\r\n  localDW->Traj_loc[344].f1[1] = localDW->absx21 * rtP.x[344];\r\n  localDW->Traj_loc[345].f1[1] = localDW->absx21 * rtP.x[345];\r\n  localDW->Traj_loc[346].f1[1] = localDW->absx21 * rtP.x[346];\r\n  localDW->Traj_loc[347].f1[1] = localDW->absx21 * rtP.x[347];\r\n  localDW->Traj_loc[348].f1[1] = localDW->absx21 * rtP.x[348];\r\n  localDW->Traj_loc[349].f1[1] = localDW->absx21 * rtP.x[349];\r\n  localDW->Traj_loc[350].f1[1] = localDW->absx21 * rtP.x[350];\r\n  localDW->Traj_loc[351].f1[1] = localDW->absx21 * rtP.x[351];\r\n  localDW->Traj_loc[352].f1[1] = localDW->absx21 * rtP.x[352];\r\n  localDW->Traj_loc[353].f1[1] = localDW->absx21 * rtP.x[353];\r\n  localDW->Traj_loc[354].f1[1] = localDW->absx21 * rtP.x[354];\r\n  localDW->Traj_loc[355].f1[1] = localDW->absx21 * rtP.x[355];\r\n  localDW->Traj_loc[356].f1[1] = localDW->absx21 * rtP.x[356];\r\n  localDW->Traj_loc[357].f1[1] = localDW->absx21 * rtP.x[357];\r\n  localDW->Traj_loc[358].f1[1] = localDW->absx21 * rtP.x[358];\r\n  localDW->Traj_loc[359].f1[1] = localDW->absx21 * rtP.x[359];\r\n  localDW->Traj_loc[360].f1[1] = localDW->absx21 * rtP.x[360];\r\n  localDW->Traj_loc[361].f1[1] = localDW->absx21 * rtP.x[361];\r\n  localDW->Traj_loc[362].f1[1] = localDW->absx21 * rtP.x[362];\r\n  localDW->Traj_loc[363].f1[1] = localDW->absx21 * rtP.x[363];\r\n  localDW->Traj_loc[364].f1[1] = localDW->absx21 * rtP.x[364];\r\n  localDW->Traj_loc[365].f1[1] = localDW->absx21 * rtP.x[365];\r\n  localDW->Traj_loc[366].f1[1] = localDW->absx21 * rtP.x[366];\r\n  localDW->Traj_loc[367].f1[1] = localDW->absx21 * rtP.x[367];\r\n  localDW->Traj_loc[368].f1[1] = localDW->absx21 * rtP.x[368];\r\n  localDW->Traj_loc[369].f1[1] = localDW->absx21 * rtP.x[369];\r\n  localDW->Traj_loc[370].f1[1] = localDW->absx21 * rtP.x[370];\r\n  localDW->Traj_loc[371].f1[1] = localDW->absx21 * rtP.x[371];\r\n  localDW->Traj_loc[372].f1[1] = localDW->absx21 * rtP.x[372];\r\n  localDW->Traj_loc[373].f1[1] = localDW->absx21 * rtP.x[373];\r\n  localDW->Traj_loc[374].f1[1] = localDW->absx21 * rtP.x[374];\r\n  localDW->Traj_loc[375].f1[1] = localDW->absx21 * rtP.x[375];\r\n  localDW->Traj_loc[376].f1[1] = localDW->absx21 * rtP.x[376];\r\n  localDW->Traj_loc[377].f1[1] = localDW->absx21 * rtP.x[377];\r\n  localDW->Traj_loc[378].f1[1] = localDW->absx21 * rtP.x[378];\r\n  localDW->Traj_loc[379].f1[1] = localDW->absx21 * rtP.x[379];\r\n  localDW->Traj_loc[380].f1[1] = localDW->absx21 * rtP.x[380];\r\n  localDW->Traj_loc[381].f1[1] = localDW->absx21 * rtP.x[381];\r\n  localDW->Traj_loc[382].f1[1] = localDW->absx21 * rtP.x[382];\r\n  localDW->Traj_loc[383].f1[1] = localDW->absx21 * rtP.x[383];\r\n  localDW->Traj_loc[384].f1[1] = localDW->absx21 * rtP.x[384];\r\n  localDW->Traj_loc[385].f1[1] = localDW->absx21 * rtP.x[385];\r\n  localDW->Traj_loc[386].f1[1] = localDW->absx21 * rtP.x[386];\r\n  localDW->Traj_loc[387].f1[1] = localDW->absx21 * rtP.x[387];\r\n  localDW->Traj_loc[388].f1[1] = localDW->absx21 * rtP.x[388];\r\n  localDW->Traj_loc[389].f1[1] = localDW->absx21 * rtP.x[389];\r\n  localDW->Traj_loc[390].f1[1] = localDW->absx21 * rtP.x[390];\r\n  localDW->Traj_loc[391].f1[1] = localDW->absx21 * rtP.x[391];\r\n  localDW->Traj_loc[392].f1[1] = localDW->absx21 * rtP.x[392];\r\n  localDW->Traj_loc[393].f1[1] = localDW->absx21 * rtP.x[393];\r\n  localDW->Traj_loc[394].f1[1] = localDW->absx21 * rtP.x[394];\r\n  localDW->Traj_loc[395].f1[1] = localDW->absx21 * rtP.x[395];\r\n  localDW->Traj_loc[396].f1[1] = localDW->absx21 * rtP.x[396];\r\n  localDW->Traj_loc[397].f1[1] = localDW->absx21 * rtP.x[397];\r\n  localDW->Traj_loc[398].f1[1] = localDW->absx21 * rtP.x[398];\r\n  localDW->Traj_loc[399].f1[1] = localDW->absx21 * rtP.x[399];\r\n  localDW->Traj_loc[400].f1[1] = localDW->absx21 * rtP.x[400];\r\n  localDW->Traj_loc[401].f1[1] = localDW->absx21 * rtP.x[401];\r\n  localDW->Traj_loc[402].f1[1] = localDW->absx21 * rtP.x[402];\r\n  localDW->Traj_loc[403].f1[1] = localDW->absx21 * rtP.x[403];\r\n  localDW->Traj_loc[404].f1[1] = localDW->absx21 * rtP.x[404];\r\n  localDW->Traj_loc[405].f1[1] = localDW->absx21 * rtP.x[405];\r\n  localDW->Traj_loc[406].f1[1] = localDW->absx21 * rtP.x[406];\r\n  localDW->Traj_loc[407].f1[1] = localDW->absx21 * rtP.x[407];\r\n  localDW->Traj_loc[408].f1[1] = localDW->absx21 * rtP.x[408];\r\n  localDW->Traj_loc[409].f1[1] = localDW->absx21 * rtP.x[409];\r\n  localDW->Traj_loc[410].f1[1] = localDW->absx21 * rtP.x[410];\r\n  localDW->Traj_loc[411].f1[1] = localDW->absx21 * rtP.x[411];\r\n  localDW->Traj_loc[412].f1[1] = localDW->absx21 * rtP.x[412];\r\n  localDW->Traj_loc[413].f1[1] = localDW->absx21 * rtP.x[413];\r\n  localDW->Traj_loc[414].f1[1] = localDW->absx21 * rtP.x[414];\r\n  localDW->Traj_loc[415].f1[1] = localDW->absx21 * rtP.x[415];\r\n  localDW->Traj_loc[416].f1[1] = localDW->absx21 * rtP.x[416];\r\n  localDW->Traj_loc[417].f1[1] = localDW->absx21 * rtP.x[417];\r\n  localDW->Traj_loc[418].f1[1] = localDW->absx21 * rtP.x[418];\r\n  localDW->Traj_loc[419].f1[1] = localDW->absx21 * rtP.x[419];\r\n  localDW->Traj_loc[420].f1[1] = localDW->absx21 * rtP.x[420];\r\n  localDW->Traj_loc[421].f1[1] = localDW->absx21 * rtP.x[421];\r\n  localDW->Traj_loc[422].f1[1] = localDW->absx21 * rtP.x[422];\r\n  localDW->Traj_loc[423].f1[1] = localDW->absx21 * rtP.x[423];\r\n  localDW->Traj_loc[424].f1[1] = localDW->absx21 * rtP.x[424];\r\n  localDW->Traj_loc[425].f1[1] = localDW->absx21 * rtP.x[425];\r\n  localDW->Traj_loc[426].f1[1] = localDW->absx21 * rtP.x[426];\r\n  localDW->Traj_loc[427].f1[1] = localDW->absx21 * rtP.x[427];\r\n  localDW->Traj_loc[428].f1[1] = localDW->absx21 * rtP.x[428];\r\n  localDW->Traj_loc[429].f1[1] = localDW->absx21 * rtP.x[429];\r\n  localDW->Traj_loc[430].f1[1] = localDW->absx21 * rtP.x[430];\r\n  localDW->Traj_loc[431].f1[1] = localDW->absx21 * rtP.x[431];\r\n  localDW->Traj_loc[432].f1[1] = localDW->absx21 * rtP.x[432];\r\n  localDW->Traj_loc[433].f1[1] = localDW->absx21 * rtP.x[433];\r\n  localDW->Traj_loc[434].f1[1] = localDW->absx21 * rtP.x[434];\r\n  localDW->Traj_loc[435].f1[1] = localDW->absx21 * rtP.x[435];\r\n  localDW->Traj_loc[436].f1[1] = localDW->absx21 * rtP.x[436];\r\n  localDW->Traj_loc[437].f1[1] = localDW->absx21 * rtP.x[437];\r\n  localDW->Traj_loc[438].f1[1] = localDW->absx21 * rtP.x[438];\r\n  localDW->Traj_loc[439].f1[1] = localDW->absx21 * rtP.x[439];\r\n  localDW->Traj_loc[440].f1[1] = localDW->absx21 * rtP.x[440];\r\n  localDW->Traj_loc[441].f1[1] = localDW->absx21 * rtP.x[441];\r\n  localDW->Traj_loc[442].f1[1] = localDW->absx21 * rtP.x[442];\r\n  localDW->Traj_loc[443].f1[1] = localDW->absx21 * rtP.x[443];\r\n  localDW->Traj_loc[444].f1[1] = localDW->absx21 * rtP.x[444];\r\n  localDW->Traj_loc[445].f1[1] = localDW->absx21 * rtP.x[445];\r\n  localDW->Traj_loc[446].f1[1] = localDW->absx21 * rtP.x[446];\r\n  localDW->Traj_loc[447].f1[1] = localDW->absx21 * rtP.x[447];\r\n  localDW->Traj_loc[448].f1[1] = localDW->absx21 * rtP.x[448];\r\n  localDW->Traj_loc[449].f1[1] = localDW->absx21 * rtP.x[449];\r\n  localDW->Traj_loc[450].f1[1] = localDW->absx21 * rtP.x[450];\r\n  localDW->Traj_loc[451].f1[1] = localDW->absx21 * rtP.x[451];\r\n  localDW->Traj_loc[452].f1[1] = localDW->absx21 * rtP.x[452];\r\n  localDW->Traj_loc[453].f1[1] = localDW->absx21 * rtP.x[453];\r\n  localDW->Traj_loc[454].f1[1] = localDW->absx21 * rtP.x[454];\r\n  localDW->Traj_loc[455].f1[1] = localDW->absx21 * rtP.x[455];\r\n  localDW->Traj_loc[456].f1[1] = localDW->absx21 * rtP.x[456];\r\n  localDW->Traj_loc[457].f1[1] = localDW->absx21 * rtP.x[457];\r\n  localDW->Traj_loc[458].f1[1] = localDW->absx21 * rtP.x[458];\r\n  localDW->Traj_loc[459].f1[1] = localDW->absx21 * rtP.x[459];\r\n  localDW->Traj_loc[460].f1[1] = localDW->absx21 * rtP.x[460];\r\n  localDW->Traj_loc[461].f1[1] = localDW->absx21 * rtP.x[461];\r\n  localDW->Traj_loc[462].f1[1] = localDW->absx21 * rtP.x[462];\r\n  localDW->Traj_loc[463].f1[1] = localDW->absx21 * rtP.x[463];\r\n  localDW->Traj_loc[464].f1[1] = localDW->absx21 * rtP.x[464];\r\n  localDW->Traj_loc[465].f1[1] = localDW->absx21 * rtP.x[465];\r\n  localDW->Traj_loc[466].f1[1] = localDW->absx21 * rtP.x[466];\r\n  localDW->Traj_loc[467].f1[1] = localDW->absx21 * rtP.x[467];\r\n  localDW->Traj_loc[468].f1[1] = localDW->absx21 * rtP.x[468];\r\n  localDW->Traj_loc[469].f1[1] = localDW->absx21 * rtP.x[469];\r\n  localDW->Traj_loc[470].f1[1] = localDW->absx21 * rtP.x[470];\r\n  localDW->Traj_loc[471].f1[1] = localDW->absx21 * rtP.x[471];\r\n  localDW->Traj_loc[472].f1[1] = localDW->absx21 * rtP.x[472];\r\n  localDW->Traj_loc[473].f1[1] = localDW->absx21 * rtP.x[473];\r\n  localDW->Traj_loc[474].f1[1] = localDW->absx21 * rtP.x[474];\r\n  localDW->Traj_loc[475].f1[1] = localDW->absx21 * rtP.x[475];\r\n  localDW->Traj_loc[476].f1[1] = localDW->absx21 * rtP.x[476];\r\n  localDW->Traj_loc[477].f1[1] = localDW->absx21 * rtP.x[477];\r\n  localDW->Traj_loc[478].f1[1] = localDW->absx21 * rtP.x[478];\r\n  localDW->Traj_loc[479].f1[1] = localDW->absx21 * rtP.x[479];\r\n  localDW->Traj_loc[480].f1[1] = localDW->absx21 * rtP.x[480];\r\n  localDW->Traj_loc[481].f1[1] = localDW->absx21 * rtP.x[481];\r\n  localDW->Traj_loc[482].f1[1] = localDW->absx21 * rtP.x[482];\r\n  localDW->Traj_loc[483].f1[1] = localDW->absx21 * rtP.x[483];\r\n  localDW->Traj_loc[484].f1[1] = localDW->absx21 * rtP.x[484];\r\n  localDW->Traj_loc[485].f1[1] = localDW->absx21 * rtP.x[485];\r\n  localDW->Traj_loc[486].f1[1] = localDW->absx21 * rtP.x[486];\r\n  localDW->Traj_loc[487].f1[1] = localDW->absx21 * rtP.x[487];\r\n  localDW->Traj_loc[488].f1[1] = localDW->absx21 * rtP.x[488];\r\n  localDW->Traj_loc[489].f1[1] = localDW->absx21 * rtP.x[489];\r\n  localDW->Traj_loc[490].f1[1] = localDW->absx21 * rtP.x[490];\r\n  localDW->Traj_loc[491].f1[1] = localDW->absx21 * rtP.x[491];\r\n  localDW->Traj_loc[492].f1[1] = localDW->absx21 * rtP.x[492];\r\n  localDW->Traj_loc[493].f1[1] = localDW->absx21 * rtP.x[493];\r\n  localDW->Traj_loc[494].f1[1] = localDW->absx21 * rtP.x[494];\r\n  localDW->Traj_loc[495].f1[1] = localDW->absx21 * rtP.x[495];\r\n  localDW->Traj_loc[496].f1[1] = localDW->absx21 * rtP.x[496];\r\n  localDW->Traj_loc[497].f1[1] = localDW->absx21 * rtP.x[497];\r\n  localDW->Traj_loc[498].f1[1] = localDW->absx21 * rtP.x[498];\r\n  localDW->Traj_loc[499].f1[1] = localDW->absx21 * rtP.x[499];\r\n  localDW->Traj_loc[500].f1[1] = localDW->absx21 * rtP.x[500];\r\n  localDW->Traj_loc[501].f1[1] = localDW->absx21 * rtP.x[501];\r\n  localDW->Traj_loc[502].f1[1] = localDW->absx21 * rtP.x[502];\r\n  localDW->Traj_loc[503].f1[1] = localDW->absx21 * rtP.x[503];\r\n  localDW->Traj_loc[504].f1[1] = localDW->absx21 * rtP.x[504];\r\n  localDW->Traj_loc[505].f1[1] = localDW->absx21 * rtP.x[505];\r\n  localDW->Traj_loc[506].f1[1] = localDW->absx21 * rtP.x[506];\r\n  localDW->Traj_loc[507].f1[1] = localDW->absx21 * rtP.x[507];\r\n  localDW->Traj_loc[508].f1[1] = localDW->absx21 * rtP.x[508];\r\n  localDW->Traj_loc[509].f1[1] = localDW->absx21 * rtP.x[509];\r\n  localDW->Traj_loc[510].f1[1] = localDW->absx21 * rtP.x[510];\r\n  localDW->Traj_loc[511].f1[1] = localDW->absx21 * rtP.x[511];\r\n  localDW->Traj_loc[512].f1[1] = localDW->absx21 * rtP.x[512];\r\n  localDW->Traj_loc[513].f1[1] = localDW->absx21 * rtP.x[513];\r\n  localDW->Traj_loc[514].f1[1] = localDW->absx21 * rtP.x[514];\r\n  localDW->Traj_loc[515].f1[1] = localDW->absx21 * rtP.x[515];\r\n  localDW->Traj_loc[516].f1[1] = localDW->absx21 * rtP.x[516];\r\n  localDW->Traj_loc[517].f1[1] = localDW->absx21 * rtP.x[517];\r\n  localDW->Traj_loc[518].f1[1] = localDW->absx21 * rtP.x[518];\r\n  localDW->Traj_loc[519].f1[1] = localDW->absx21 * rtP.x[519];\r\n  localDW->Traj_loc[520].f1[1] = localDW->absx21 * rtP.x[520];\r\n  localDW->Traj_loc[521].f1[1] = localDW->absx21 * rtP.x[521];\r\n  localDW->Traj_loc[522].f1[1] = localDW->absx21 * rtP.x[522];\r\n  localDW->Traj_loc[523].f1[1] = localDW->absx21 * rtP.x[523];\r\n  localDW->Traj_loc[524].f1[1] = localDW->absx21 * rtP.x[524];\r\n  localDW->Traj_loc[525].f1[1] = localDW->absx21 * rtP.x[525];\r\n  localDW->Traj_loc[526].f1[1] = localDW->absx21 * rtP.x[526];\r\n  localDW->Traj_loc[527].f1[1] = localDW->absx21 * rtP.x[527];\r\n  localDW->Traj_loc[528].f1[1] = localDW->absx21 * rtP.x[528];\r\n  localDW->Traj_loc[529].f1[1] = localDW->absx21 * rtP.x[529];\r\n  localDW->Traj_loc[530].f1[1] = localDW->absx21 * rtP.x[530];\r\n  localDW->Traj_loc[531].f1[1] = localDW->absx21 * rtP.x[531];\r\n  localDW->Traj_loc[532].f1[1] = localDW->absx21 * rtP.x[532];\r\n  localDW->Traj_loc[533].f1[1] = localDW->absx21 * rtP.x[533];\r\n  localDW->Traj_loc[534].f1[1] = localDW->absx21 * rtP.x[534];\r\n  localDW->Traj_loc[535].f1[1] = localDW->absx21 * rtP.x[535];\r\n  localDW->Traj_loc[536].f1[1] = localDW->absx21 * rtP.x[536];\r\n  localDW->Traj_loc[537].f1[1] = localDW->absx21 * rtP.x[537];\r\n  localDW->Traj_loc[538].f1[1] = localDW->absx21 * rtP.x[538];\r\n  localDW->Traj_loc[539].f1[1] = localDW->absx21 * rtP.x[539];\r\n  localDW->Traj_loc[540].f1[1] = localDW->absx21 * rtP.x[540];\r\n  localDW->Traj_loc[541].f1[1] = localDW->absx21 * rtP.x[541];\r\n  localDW->Traj_loc[542].f1[1] = localDW->absx21 * rtP.x[542];\r\n  localDW->Traj_loc[543].f1[1] = localDW->absx21 * rtP.x[543];\r\n  localDW->Traj_loc[544].f1[1] = localDW->absx21 * rtP.x[544];\r\n  localDW->Traj_loc[545].f1[1] = localDW->absx21 * rtP.x[545];\r\n  localDW->Traj_loc[546].f1[1] = localDW->absx21 * rtP.x[546];\r\n  localDW->Traj_loc[547].f1[1] = localDW->absx21 * rtP.x[547];\r\n  localDW->Traj_loc[548].f1[1] = localDW->absx21 * rtP.x[548];\r\n  localDW->Traj_loc[549].f1[1] = localDW->absx21 * rtP.x[549];\r\n  localDW->Traj_loc[550].f1[1] = localDW->absx21 * rtP.x[550];\r\n  localDW->Traj_loc[551].f1[1] = localDW->absx21 * rtP.x[551];\r\n  localDW->Traj_loc[552].f1[1] = localDW->absx21 * rtP.x[552];\r\n  localDW->Traj_loc[553].f1[1] = localDW->absx21 * rtP.x[553];\r\n  localDW->Traj_loc[554].f1[1] = localDW->absx21 * rtP.x[554];\r\n  localDW->Traj_loc[555].f1[1] = localDW->absx21 * rtP.x[555];\r\n  localDW->Traj_loc[556].f1[1] = localDW->absx21 * rtP.x[556];\r\n  localDW->Traj_loc[557].f1[1] = localDW->absx21 * rtP.x[557];\r\n  localDW->Traj_loc[558].f1[1] = localDW->absx21 * rtP.x[558];\r\n  localDW->Traj_loc[559].f1[1] = localDW->absx21 * rtP.x[559];\r\n  localDW->Traj_loc[560].f1[1] = localDW->absx21 * rtP.x[560];\r\n  localDW->Traj_loc[561].f1[1] = localDW->absx21 * rtP.x[561];\r\n  localDW->Traj_loc[562].f1[1] = localDW->absx21 * rtP.x[562];\r\n  localDW->Traj_loc[563].f1[1] = localDW->absx21 * rtP.x[563];\r\n  localDW->Traj_loc[564].f1[1] = localDW->absx21 * rtP.x[564];\r\n  localDW->Traj_loc[565].f1[1] = localDW->absx21 * rtP.x[565];\r\n  localDW->Traj_loc[566].f1[1] = localDW->absx21 * rtP.x[566];\r\n  localDW->Traj_loc[567].f1[1] = localDW->absx21 * rtP.x[567];\r\n  localDW->Traj_loc[568].f1[1] = localDW->absx21 * rtP.x[568];\r\n  localDW->Traj_loc[569].f1[1] = localDW->absx21 * rtP.x[569];\r\n  localDW->Traj_loc[570].f1[1] = localDW->absx21 * rtP.x[570];\r\n  localDW->Traj_loc[571].f1[1] = localDW->absx21 * rtP.x[571];\r\n  localDW->Traj_loc[572].f1[1] = localDW->absx21 * rtP.x[572];\r\n  localDW->Traj_loc[573].f1[1] = localDW->absx21 * rtP.x[573];\r\n  localDW->Traj_loc[574].f1[1] = localDW->absx21 * rtP.x[574];\r\n  localDW->Traj_loc[575].f1[1] = localDW->absx21 * rtP.x[575];\r\n  localDW->Traj_loc[576].f1[1] = localDW->absx21 * rtP.x[576];\r\n  localDW->Traj_loc[577].f1[1] = localDW->absx21 * rtP.x[577];\r\n  localDW->Traj_loc[578].f1[1] = localDW->absx21 * rtP.x[578];\r\n  localDW->Traj_loc[579].f1[1] = localDW->absx21 * rtP.x[579];\r\n  localDW->Traj_loc[580].f1[1] = localDW->absx21 * rtP.x[580];\r\n  localDW->Traj_loc[581].f1[1] = localDW->absx21 * rtP.x[581];\r\n  localDW->Traj_loc[582].f1[1] = localDW->absx21 * rtP.x[582];\r\n  localDW->Traj_loc[583].f1[1] = localDW->absx21 * rtP.x[583];\r\n  localDW->Traj_loc[584].f1[1] = localDW->absx21 * rtP.x[584];\r\n  localDW->Traj_loc[585].f1[1] = localDW->absx21 * rtP.x[585];\r\n  localDW->Traj_loc[586].f1[1] = localDW->absx21 * rtP.x[586];\r\n  localDW->Traj_loc[587].f1[1] = localDW->absx21 * rtP.x[587];\r\n  localDW->Traj_loc[588].f1[1] = localDW->absx21 * rtP.x[588];\r\n  localDW->Traj_loc[589].f1[1] = localDW->absx21 * rtP.x[589];\r\n  localDW->Traj_loc[590].f1[1] = localDW->absx21 * rtP.x[590];\r\n  localDW->Traj_loc[591].f1[1] = localDW->absx21 * rtP.x[591];\r\n  localDW->Traj_loc[592].f1[1] = localDW->absx21 * rtP.x[592];\r\n  localDW->Traj_loc[593].f1[1] = localDW->absx21 * rtP.x[593];\r\n  localDW->Traj_loc[594].f1[1] = localDW->absx21 * rtP.x[594];\r\n  localDW->Traj_loc[595].f1[1] = localDW->absx21 * rtP.x[595];\r\n  localDW->Traj_loc[596].f1[1] = localDW->absx21 * rtP.x[596];\r\n  localDW->Traj_loc[597].f1[1] = localDW->absx21 * rtP.x[597];\r\n  localDW->Traj_loc[598].f1[1] = localDW->absx21 * rtP.x[598];\r\n  localDW->Traj_loc[599].f1[1] = localDW->absx21 * rtP.x[599];\r\n  localDW->Traj_loc[600].f1[1] = localDW->absx21 * rtP.x[600];\r\n  localDW->Traj_loc[601].f1[1] = localDW->absx21 * rtP.x[601];\r\n  localDW->Traj_loc[602].f1[1] = localDW->absx21 * rtP.x[602];\r\n  localDW->Traj_loc[603].f1[1] = localDW->absx21 * rtP.x[603];\r\n  localDW->Traj_loc[604].f1[1] = localDW->absx21 * rtP.x[604];\r\n  localDW->Traj_loc[605].f1[1] = localDW->absx21 * rtP.x[605];\r\n  localDW->Traj_loc[606].f1[1] = localDW->absx21 * rtP.x[606];\r\n  localDW->Traj_loc[607].f1[1] = localDW->absx21 * rtP.x[607];\r\n  localDW->Traj_loc[608].f1[1] = localDW->absx21 * rtP.x[608];\r\n  localDW->Traj_loc[609].f1[1] = localDW->absx21 * rtP.x[609];\r\n  localDW->Traj_loc[610].f1[1] = localDW->absx21 * rtP.x[610];\r\n  localDW->Traj_loc[611].f1[1] = localDW->absx21 * rtP.x[611];\r\n  localDW->Traj_loc[612].f1[1] = localDW->absx21 * rtP.x[612];\r\n  localDW->Traj_loc[613].f1[1] = localDW->absx21 * rtP.x[613];\r\n  localDW->Traj_loc[614].f1[1] = localDW->absx21 * rtP.x[614];\r\n  localDW->Traj_loc[615].f1[1] = localDW->absx21 * rtP.x[615];\r\n  localDW->Traj_loc[616].f1[1] = localDW->absx21 * rtP.x[616];\r\n  localDW->Traj_loc[617].f1[1] = localDW->absx21 * rtP.x[617];\r\n  localDW->Traj_loc[618].f1[1] = localDW->absx21 * rtP.x[618];\r\n  localDW->Traj_loc[619].f1[1] = localDW->absx21 * rtP.x[619];\r\n  localDW->Traj_loc[620].f1[1] = localDW->absx21 * rtP.x[620];\r\n  localDW->Traj_loc[621].f1[1] = localDW->absx21 * rtP.x[621];\r\n  localDW->Traj_loc[622].f1[1] = localDW->absx21 * rtP.x[622];\r\n  localDW->Traj_loc[623].f1[1] = localDW->absx21 * rtP.x[623];\r\n  localDW->Traj_loc[624].f1[1] = localDW->absx21 * rtP.x[624];\r\n  localDW->Traj_loc[625].f1[1] = localDW->absx21 * rtP.x[625];\r\n  localDW->Traj_loc[626].f1[1] = localDW->absx21 * rtP.x[626];\r\n  localDW->Traj_loc[627].f1[1] = localDW->absx21 * rtP.x[627];\r\n  localDW->Traj_loc[628].f1[1] = localDW->absx21 * rtP.x[628];\r\n  localDW->Traj_loc[629].f1[1] = localDW->absx21 * rtP.x[629];\r\n  localDW->Traj_loc[630].f1[1] = localDW->absx21 * rtP.x[630];\r\n  localDW->Traj_loc[631].f1[1] = localDW->absx21 * rtP.x[631];\r\n  localDW->Traj_loc[632].f1[1] = localDW->absx21 * rtP.x[632];\r\n  localDW->Traj_loc[633].f1[1] = localDW->absx21 * rtP.x[633];\r\n  localDW->Traj_loc[634].f1[1] = localDW->absx21 * rtP.x[634];\r\n  localDW->Traj_loc[635].f1[1] = localDW->absx21 * rtP.x[635];\r\n  localDW->Traj_loc[636].f1[1] = localDW->absx21 * rtP.x[636];\r\n  localDW->Traj_loc[637].f1[1] = localDW->absx21 * rtP.x[637];\r\n  localDW->Traj_loc[638].f1[1] = localDW->absx21 * rtP.x[638];\r\n  localDW->Traj_loc[639].f1[1] = localDW->absx21 * rtP.x[639];\r\n  localDW->Traj_loc[640].f1[1] = localDW->absx21 * rtP.x[640];\r\n  localDW->Traj_loc[641].f1[1] = localDW->absx21 * rtP.x[641];\r\n  localDW->Traj_loc[642].f1[1] = localDW->absx21 * rtP.x[642];\r\n  localDW->Traj_loc[643].f1[1] = localDW->absx21 * rtP.x[643];\r\n  localDW->Traj_loc[644].f1[1] = localDW->absx21 * rtP.x[644];\r\n  localDW->Traj_loc[645].f1[1] = localDW->absx21 * rtP.x[645];\r\n  localDW->Traj_loc[646].f1[1] = localDW->absx21 * rtP.x[646];\r\n  localDW->Traj_loc[647].f1[1] = localDW->absx21 * rtP.x[647];\r\n  localDW->Traj_loc[648].f1[1] = localDW->absx21 * rtP.x[648];\r\n  localDW->Traj_loc[649].f1[1] = localDW->absx21 * rtP.x[649];\r\n  localDW->Traj_loc[650].f1[1] = localDW->absx21 * rtP.x[650];\r\n  localDW->Traj_loc[651].f1[1] = localDW->absx21 * rtP.x[651];\r\n  localDW->Traj_loc[652].f1[1] = localDW->absx21 * rtP.x[652];\r\n  localDW->Traj_loc[653].f1[1] = localDW->absx21 * rtP.x[653];\r\n  localDW->Traj_loc[654].f1[1] = localDW->absx21 * rtP.x[654];\r\n  localDW->Traj_loc[655].f1[1] = localDW->absx21 * rtP.x[655];\r\n  localDW->Traj_loc[656].f1[1] = localDW->absx21 * rtP.x[656];\r\n  localDW->Traj_loc[657].f1[1] = localDW->absx21 * rtP.x[657];\r\n  localDW->Traj_loc[658].f1[1] = localDW->absx21 * rtP.x[658];\r\n  localDW->Traj_loc[659].f1[1] = localDW->absx21 * rtP.x[659];\r\n  localDW->Traj_loc[660].f1[1] = localDW->absx21 * rtP.x[660];\r\n  localDW->Traj_loc[661].f1[1] = localDW->absx21 * rtP.x[661];\r\n  localDW->Traj_loc[662].f1[1] = localDW->absx21 * rtP.x[662];\r\n  localDW->Traj_loc[663].f1[1] = localDW->absx21 * rtP.x[663];\r\n  localDW->Traj_loc[664].f1[1] = localDW->absx21 * rtP.x[664];\r\n  localDW->Traj_loc[665].f1[1] = localDW->absx21 * rtP.x[665];\r\n  localDW->Traj_loc[666].f1[1] = localDW->absx21 * rtP.x[666];\r\n  localDW->Traj_loc[667].f1[1] = localDW->absx21 * rtP.x[667];\r\n  localDW->Traj_loc[668].f1[1] = localDW->absx21 * rtP.x[668];\r\n  localDW->Traj_loc[669].f1[1] = localDW->absx21 * rtP.x[669];\r\n  localDW->Traj_loc[670].f1[1] = localDW->absx21 * rtP.x[670];\r\n  localDW->Traj_loc[671].f1[1] = localDW->absx21 * rtP.x[671];\r\n  localDW->Traj_loc[672].f1[1] = localDW->absx21 * rtP.x[672];\r\n  localDW->Traj_loc[673].f1[1] = localDW->absx21 * rtP.x[673];\r\n  localDW->Traj_loc[674].f1[1] = localDW->absx21 * rtP.x[674];\r\n  localDW->Traj_loc[675].f1[1] = localDW->absx21 * rtP.x[675];\r\n  localDW->Traj_loc[676].f1[1] = localDW->absx21 * rtP.x[676];\r\n  localDW->Traj_loc[677].f1[1] = localDW->absx21 * rtP.x[677];\r\n  localDW->Traj_loc[678].f1[1] = localDW->absx21 * rtP.x[678];\r\n  localDW->Traj_loc[679].f1[1] = localDW->absx21 * rtP.x[679];\r\n  localDW->Traj_loc[680].f1[1] = localDW->absx21 * rtP.x[680];\r\n  localDW->Traj_loc[681].f1[1] = localDW->absx21 * rtP.x[681];\r\n  localDW->Traj_loc[682].f1[1] = localDW->absx21 * rtP.x[682];\r\n  localDW->Traj_loc[683].f1[1] = localDW->absx21 * rtP.x[683];\r\n  localDW->Traj_loc[684].f1[1] = localDW->absx21 * rtP.x[684];\r\n  localDW->Traj_loc[685].f1[1] = localDW->absx21 * rtP.x[685];\r\n  localDW->Traj_loc[686].f1[1] = localDW->absx21 * rtP.x[686];\r\n  localDW->Traj_loc[687].f1[1] = localDW->absx21 * rtP.x[687];\r\n  localDW->Traj_loc[688].f1[1] = localDW->absx21 * rtP.x[688];\r\n  localDW->Traj_loc[689].f1[1] = localDW->absx21 * rtP.x[689];\r\n  localDW->Traj_loc[690].f1[1] = localDW->absx21 * rtP.x[690];\r\n  localDW->Traj_loc[691].f1[1] = localDW->absx21 * rtP.x[691];\r\n  localDW->Traj_loc[692].f1[1] = localDW->absx21 * rtP.x[692];\r\n  localDW->Traj_loc[693].f1[1] = localDW->absx21 * rtP.x[693];\r\n  localDW->Traj_loc[694].f1[1] = localDW->absx21 * rtP.x[694];\r\n  localDW->Traj_loc[695].f1[1] = localDW->absx21 * rtP.x[695];\r\n  localDW->Traj_loc[696].f1[1] = localDW->absx21 * rtP.x[696];\r\n  localDW->Traj_loc[697].f1[1] = localDW->absx21 * rtP.x[697];\r\n  localDW->Traj_loc[698].f1[1] = localDW->absx21 * rtP.x[698];\r\n  localDW->Traj_loc[699].f1[1] = localDW->absx21 * rtP.x[699];\r\n  localDW->Traj_loc[700].f1[1] = localDW->absx21 * rtP.x[700];\r\n  localDW->Traj_loc[701].f1[1] = localDW->absx21 * rtP.x[701];\r\n  localDW->Traj_loc[702].f1[1] = localDW->absx21 * rtP.x[702];\r\n  localDW->Traj_loc[703].f1[1] = localDW->absx21 * rtP.x[703];\r\n  localDW->Traj_loc[704].f1[1] = localDW->absx21 * rtP.x[704];\r\n  localDW->Traj_loc[705].f1[1] = localDW->absx21 * rtP.x[705];\r\n  localDW->Traj_loc[706].f1[1] = localDW->absx21 * rtP.x[706];\r\n  localDW->Traj_loc[707].f1[1] = localDW->absx21 * rtP.x[707];\r\n  localDW->Traj_loc[708].f1[1] = localDW->absx21 * rtP.x[708];\r\n  localDW->Traj_loc[709].f1[1] = localDW->absx21 * rtP.x[709];\r\n  localDW->Traj_loc[710].f1[1] = localDW->absx21 * rtP.x[710];\r\n  localDW->Traj_loc[711].f1[1] = localDW->absx21 * rtP.x[711];\r\n  localDW->Traj_loc[712].f1[1] = localDW->absx21 * rtP.x[712];\r\n  localDW->Traj_loc[713].f1[1] = localDW->absx21 * rtP.x[713];\r\n  localDW->Traj_loc[714].f1[1] = localDW->absx21 * rtP.x[714];\r\n  localDW->Traj_loc[715].f1[1] = localDW->absx21 * rtP.x[715];\r\n  localDW->Traj_loc[716].f1[1] = localDW->absx21 * rtP.x[716];\r\n  localDW->Traj_loc[717].f1[1] = localDW->absx21 * rtP.x[717];\r\n  localDW->Traj_loc[718].f1[1] = localDW->absx21 * rtP.x[718];\r\n  localDW->Traj_loc[719].f1[1] = localDW->absx21 * rtP.x[719];\r\n  localDW->Traj_loc[720].f1[1] = localDW->absx21 * rtP.x[720];\r\n  localDW->Traj_loc[721].f1[1] = localDW->absx21 * rtP.x[721];\r\n  localDW->Traj_loc[722].f1[1] = localDW->absx21 * rtP.x[722];\r\n  localDW->Traj_loc[723].f1[1] = localDW->absx21 * rtP.x[723];\r\n  localDW->Traj_loc[724].f1[1] = localDW->absx21 * rtP.x[724];\r\n  localDW->Traj_loc[725].f1[1] = localDW->absx21 * rtP.x[725];\r\n  localDW->Traj_loc[726].f1[1] = localDW->absx21 * rtP.x[726];\r\n  localDW->Traj_loc[727].f1[1] = localDW->absx21 * rtP.x[727];\r\n  localDW->Traj_loc[728].f1[1] = localDW->absx21 * rtP.x[728];\r\n  localDW->Traj_loc[729].f1[1] = localDW->absx21 * rtP.x[729];\r\n  localDW->Traj_loc[730].f1[1] = localDW->absx21 * rtP.x[730];\r\n  localDW->Traj_loc[731].f1[1] = localDW->absx21 * rtP.x[731];\r\n  localDW->Traj_loc[732].f1[1] = localDW->absx21 * rtP.x[732];\r\n  localDW->Traj_loc[733].f1[1] = localDW->absx21 * rtP.x[733];\r\n  localDW->Traj_loc[734].f1[1] = localDW->absx21 * rtP.x[734];\r\n  localDW->Traj_loc[735].f1[1] = localDW->absx21 * rtP.x[735];\r\n  localDW->Traj_loc[736].f1[1] = localDW->absx21 * rtP.x[736];\r\n  localDW->Traj_loc[737].f1[1] = localDW->absx21 * rtP.x[737];\r\n  localDW->Traj_loc[738].f1[1] = localDW->absx21 * rtP.x[738];\r\n  localDW->Traj_loc[739].f1[1] = localDW->absx21 * rtP.x[739];\r\n  localDW->Traj_loc[740].f1[1] = localDW->absx21 * rtP.x[740];\r\n  localDW->Traj_loc[741].f1[1] = localDW->absx21 * rtP.x[741];\r\n  localDW->Traj_loc[742].f1[1] = localDW->absx21 * rtP.x[742];\r\n  localDW->Traj_loc[743].f1[1] = localDW->absx21 * rtP.x[743];\r\n  localDW->Traj_loc[744].f1[1] = localDW->absx21 * rtP.x[744];\r\n  localDW->Traj_loc[745].f1[1] = localDW->absx21 * rtP.x[745];\r\n  localDW->Traj_loc[746].f1[1] = localDW->absx21 * rtP.x[746];\r\n  localDW->Traj_loc[747].f1[1] = localDW->absx21 * rtP.x[747];\r\n  localDW->Traj_loc[748].f1[1] = localDW->absx21 * rtP.x[748];\r\n  localDW->Traj_loc[749].f1[1] = localDW->absx21 * rtP.x[749];\r\n  localDW->Traj_loc[750].f1[1] = localDW->absx21 * rtP.x[750];\r\n  localDW->Traj_loc[751].f1[1] = localDW->absx21 * rtP.x[751];\r\n  localDW->Traj_loc[752].f1[1] = localDW->absx21 * rtP.x[752];\r\n  localDW->Traj_loc[753].f1[1] = localDW->absx21 * rtP.x[753];\r\n  localDW->Traj_loc[754].f1[1] = localDW->absx21 * rtP.x[754];\r\n  localDW->Traj_loc[755].f1[1] = localDW->absx21 * rtP.x[755];\r\n  localDW->Traj_loc[756].f1[1] = localDW->absx21 * rtP.x[756];\r\n  localDW->Traj_loc[757].f1[1] = localDW->absx21 * rtP.x[757];\r\n  localDW->Traj_loc[758].f1[1] = localDW->absx21 * rtP.x[758];\r\n  localDW->Traj_loc[759].f1[1] = localDW->absx21 * rtP.x[759];\r\n  localDW->Traj_loc[760].f1[1] = localDW->absx21 * rtP.x[760];\r\n  localDW->Traj_loc[761].f1[1] = localDW->absx21 * rtP.x[761];\r\n  localDW->Traj_loc[762].f1[1] = localDW->absx21 * rtP.x[762];\r\n  localDW->Traj_loc[763].f1[1] = localDW->absx21 * rtP.x[763];\r\n  localDW->Traj_loc[764].f1[1] = localDW->absx21 * rtP.x[764];\r\n  localDW->Traj_loc[765].f1[1] = localDW->absx21 * rtP.x[765];\r\n  localDW->Traj_loc[766].f1[1] = localDW->absx21 * rtP.x[766];\r\n  localDW->Traj_loc[767].f1[1] = localDW->absx21 * rtP.x[767];\r\n  localDW->Traj_loc[768].f1[1] = localDW->absx21 * rtP.x[768];\r\n  localDW->Traj_loc[769].f1[1] = localDW->absx21 * rtP.x[769];\r\n  localDW->Traj_loc[770].f1[1] = localDW->absx21 * rtP.x[770];\r\n  localDW->Traj_loc[771].f1[1] = localDW->absx21 * rtP.x[771];\r\n  localDW->Traj_loc[772].f1[1] = localDW->absx21 * rtP.x[772];\r\n  localDW->Traj_loc[773].f1[1] = localDW->absx21 * rtP.x[773];\r\n  localDW->Traj_loc[774].f1[1] = localDW->absx21 * rtP.x[774];\r\n  localDW->Traj_loc[775].f1[1] = localDW->absx21 * rtP.x[775];\r\n  localDW->Traj_loc[776].f1[1] = localDW->absx21 * rtP.x[776];\r\n  localDW->Traj_loc[777].f1[1] = localDW->absx21 * rtP.x[777];\r\n  localDW->Traj_loc[778].f1[1] = localDW->absx21 * rtP.x[778];\r\n  localDW->Traj_loc[779].f1[1] = localDW->absx21 * rtP.x[779];\r\n  localDW->Traj_loc[780].f1[1] = localDW->absx21 * rtP.x[780];\r\n  localDW->Traj_loc[781].f1[1] = localDW->absx21 * rtP.x[781];\r\n  localDW->Traj_loc[782].f1[1] = localDW->absx21 * rtP.x[782];\r\n  localDW->Traj_loc[783].f1[1] = localDW->absx21 * rtP.x[783];\r\n  localDW->Traj_loc[784].f1[1] = localDW->absx21 * rtP.x[784];\r\n  localDW->Traj_loc[785].f1[1] = localDW->absx21 * rtP.x[785];\r\n  localDW->Traj_loc[786].f1[1] = localDW->absx21 * rtP.x[786];\r\n  localDW->Traj_loc[787].f1[1] = localDW->absx21 * rtP.x[787];\r\n  localDW->Traj_loc[788].f1[1] = localDW->absx21 * rtP.x[788];\r\n  localDW->Traj_loc[789].f1[1] = localDW->absx21 * rtP.x[789];\r\n  localDW->Traj_loc[790].f1[1] = localDW->absx21 * rtP.x[790];\r\n  localDW->Traj_loc[791].f1[1] = localDW->absx21 * rtP.x[791];\r\n  localDW->Traj_loc[792].f1[1] = localDW->absx21 * rtP.x[792];\r\n  localDW->Traj_loc[793].f1[1] = localDW->absx21 * rtP.x[793];\r\n  localDW->Traj_loc[794].f1[1] = localDW->absx21 * rtP.x[794];\r\n  localDW->Traj_loc[795].f1[1] = localDW->absx21 * rtP.x[795];\r\n  localDW->Traj_loc[796].f1[1] = localDW->absx21 * rtP.x[796];\r\n  localDW->Traj_loc[797].f1[1] = localDW->absx21 * rtP.x[797];\r\n  localDW->Traj_loc[798].f1[1] = localDW->absx21 * rtP.x[798];\r\n  localDW->Traj_loc[799].f1[1] = localDW->absx21 * rtP.x[799];\r\n  localDW->Traj_loc[800].f1[1] = localDW->absx21 * rtP.x[800];\r\n  localDW->Traj_loc[0].f1[1] += -localDW->Derivative2 * rtP.y[0];\r\n  localDW->Traj_loc[1].f1[1] += -localDW->Derivative2 * rtP.y[1];\r\n  localDW->Traj_loc[2].f1[1] += -localDW->Derivative2 * rtP.y[2];\r\n  localDW->Traj_loc[3].f1[1] += -localDW->Derivative2 * rtP.y[3];\r\n  localDW->Traj_loc[4].f1[1] += -localDW->Derivative2 * rtP.y[4];\r\n  localDW->Traj_loc[5].f1[1] += -localDW->Derivative2 * rtP.y[5];\r\n  localDW->Traj_loc[6].f1[1] += -localDW->Derivative2 * rtP.y[6];\r\n  localDW->Traj_loc[7].f1[1] += -localDW->Derivative2 * rtP.y[7];\r\n  localDW->Traj_loc[8].f1[1] += -localDW->Derivative2 * rtP.y[8];\r\n  localDW->Traj_loc[9].f1[1] += -localDW->Derivative2 * rtP.y[9];\r\n  localDW->Traj_loc[10].f1[1] += -localDW->Derivative2 * rtP.y[10];\r\n  localDW->Traj_loc[11].f1[1] += -localDW->Derivative2 * rtP.y[11];\r\n  localDW->Traj_loc[12].f1[1] += -localDW->Derivative2 * rtP.y[12];\r\n  localDW->Traj_loc[13].f1[1] += -localDW->Derivative2 * rtP.y[13];\r\n  localDW->Traj_loc[14].f1[1] += -localDW->Derivative2 * rtP.y[14];\r\n  localDW->Traj_loc[15].f1[1] += -localDW->Derivative2 * rtP.y[15];\r\n  localDW->Traj_loc[16].f1[1] += -localDW->Derivative2 * rtP.y[16];\r\n  localDW->Traj_loc[17].f1[1] += -localDW->Derivative2 * rtP.y[17];\r\n  localDW->Traj_loc[18].f1[1] += -localDW->Derivative2 * rtP.y[18];\r\n  localDW->Traj_loc[19].f1[1] += -localDW->Derivative2 * rtP.y[19];\r\n  localDW->Traj_loc[20].f1[1] += -localDW->Derivative2 * rtP.y[20];\r\n  localDW->Traj_loc[21].f1[1] += -localDW->Derivative2 * rtP.y[21];\r\n  localDW->Traj_loc[22].f1[1] += -localDW->Derivative2 * rtP.y[22];\r\n  localDW->Traj_loc[23].f1[1] += -localDW->Derivative2 * rtP.y[23];\r\n  localDW->Traj_loc[24].f1[1] += -localDW->Derivative2 * rtP.y[24];\r\n  localDW->Traj_loc[25].f1[1] += -localDW->Derivative2 * rtP.y[25];\r\n  localDW->Traj_loc[26].f1[1] += -localDW->Derivative2 * rtP.y[26];\r\n  localDW->Traj_loc[27].f1[1] += -localDW->Derivative2 * rtP.y[27];\r\n  localDW->Traj_loc[28].f1[1] += -localDW->Derivative2 * rtP.y[28];\r\n  localDW->Traj_loc[29].f1[1] += -localDW->Derivative2 * rtP.y[29];\r\n  localDW->Traj_loc[30].f1[1] += -localDW->Derivative2 * rtP.y[30];\r\n  localDW->Traj_loc[31].f1[1] += -localDW->Derivative2 * rtP.y[31];\r\n  localDW->Traj_loc[32].f1[1] += -localDW->Derivative2 * rtP.y[32];\r\n  localDW->Traj_loc[33].f1[1] += -localDW->Derivative2 * rtP.y[33];\r\n  localDW->Traj_loc[34].f1[1] += -localDW->Derivative2 * rtP.y[34];\r\n  localDW->Traj_loc[35].f1[1] += -localDW->Derivative2 * rtP.y[35];\r\n  localDW->Traj_loc[36].f1[1] += -localDW->Derivative2 * rtP.y[36];\r\n  localDW->Traj_loc[37].f1[1] += -localDW->Derivative2 * rtP.y[37];\r\n  localDW->Traj_loc[38].f1[1] += -localDW->Derivative2 * rtP.y[38];\r\n  localDW->Traj_loc[39].f1[1] += -localDW->Derivative2 * rtP.y[39];\r\n  localDW->Traj_loc[40].f1[1] += -localDW->Derivative2 * rtP.y[40];\r\n  localDW->Traj_loc[41].f1[1] += -localDW->Derivative2 * rtP.y[41];\r\n  localDW->Traj_loc[42].f1[1] += -localDW->Derivative2 * rtP.y[42];\r\n  localDW->Traj_loc[43].f1[1] += -localDW->Derivative2 * rtP.y[43];\r\n  localDW->Traj_loc[44].f1[1] += -localDW->Derivative2 * rtP.y[44];\r\n  localDW->Traj_loc[45].f1[1] += -localDW->Derivative2 * rtP.y[45];\r\n  localDW->Traj_loc[46].f1[1] += -localDW->Derivative2 * rtP.y[46];\r\n  localDW->Traj_loc[47].f1[1] += -localDW->Derivative2 * rtP.y[47];\r\n  localDW->Traj_loc[48].f1[1] += -localDW->Derivative2 * rtP.y[48];\r\n  localDW->Traj_loc[49].f1[1] += -localDW->Derivative2 * rtP.y[49];\r\n  localDW->Traj_loc[50].f1[1] += -localDW->Derivative2 * rtP.y[50];\r\n  localDW->Traj_loc[51].f1[1] += -localDW->Derivative2 * rtP.y[51];\r\n  localDW->Traj_loc[52].f1[1] += -localDW->Derivative2 * rtP.y[52];\r\n  localDW->Traj_loc[53].f1[1] += -localDW->Derivative2 * rtP.y[53];\r\n  localDW->Traj_loc[54].f1[1] += -localDW->Derivative2 * rtP.y[54];\r\n  localDW->Traj_loc[55].f1[1] += -localDW->Derivative2 * rtP.y[55];\r\n  localDW->Traj_loc[56].f1[1] += -localDW->Derivative2 * rtP.y[56];\r\n  localDW->Traj_loc[57].f1[1] += -localDW->Derivative2 * rtP.y[57];\r\n  localDW->Traj_loc[58].f1[1] += -localDW->Derivative2 * rtP.y[58];\r\n  localDW->Traj_loc[59].f1[1] += -localDW->Derivative2 * rtP.y[59];\r\n  localDW->Traj_loc[60].f1[1] += -localDW->Derivative2 * rtP.y[60];\r\n  localDW->Traj_loc[61].f1[1] += -localDW->Derivative2 * rtP.y[61];\r\n  localDW->Traj_loc[62].f1[1] += -localDW->Derivative2 * rtP.y[62];\r\n  localDW->Traj_loc[63].f1[1] += -localDW->Derivative2 * rtP.y[63];\r\n  localDW->Traj_loc[64].f1[1] += -localDW->Derivative2 * rtP.y[64];\r\n  localDW->Traj_loc[65].f1[1] += -localDW->Derivative2 * rtP.y[65];\r\n  localDW->Traj_loc[66].f1[1] += -localDW->Derivative2 * rtP.y[66];\r\n  localDW->Traj_loc[67].f1[1] += -localDW->Derivative2 * rtP.y[67];\r\n  localDW->Traj_loc[68].f1[1] += -localDW->Derivative2 * rtP.y[68];\r\n  localDW->Traj_loc[69].f1[1] += -localDW->Derivative2 * rtP.y[69];\r\n  localDW->Traj_loc[70].f1[1] += -localDW->Derivative2 * rtP.y[70];\r\n  localDW->Traj_loc[71].f1[1] += -localDW->Derivative2 * rtP.y[71];\r\n  localDW->Traj_loc[72].f1[1] += -localDW->Derivative2 * rtP.y[72];\r\n  localDW->Traj_loc[73].f1[1] += -localDW->Derivative2 * rtP.y[73];\r\n  localDW->Traj_loc[74].f1[1] += -localDW->Derivative2 * rtP.y[74];\r\n  localDW->Traj_loc[75].f1[1] += -localDW->Derivative2 * rtP.y[75];\r\n  localDW->Traj_loc[76].f1[1] += -localDW->Derivative2 * rtP.y[76];\r\n  localDW->Traj_loc[77].f1[1] += -localDW->Derivative2 * rtP.y[77];\r\n  localDW->Traj_loc[78].f1[1] += -localDW->Derivative2 * rtP.y[78];\r\n  localDW->Traj_loc[79].f1[1] += -localDW->Derivative2 * rtP.y[79];\r\n  localDW->Traj_loc[80].f1[1] += -localDW->Derivative2 * rtP.y[80];\r\n  localDW->Traj_loc[81].f1[1] += -localDW->Derivative2 * rtP.y[81];\r\n  localDW->Traj_loc[82].f1[1] += -localDW->Derivative2 * rtP.y[82];\r\n  localDW->Traj_loc[83].f1[1] += -localDW->Derivative2 * rtP.y[83];\r\n  localDW->Traj_loc[84].f1[1] += -localDW->Derivative2 * rtP.y[84];\r\n  localDW->Traj_loc[85].f1[1] += -localDW->Derivative2 * rtP.y[85];\r\n  localDW->Traj_loc[86].f1[1] += -localDW->Derivative2 * rtP.y[86];\r\n  localDW->Traj_loc[87].f1[1] += -localDW->Derivative2 * rtP.y[87];\r\n  localDW->Traj_loc[88].f1[1] += -localDW->Derivative2 * rtP.y[88];\r\n  localDW->Traj_loc[89].f1[1] += -localDW->Derivative2 * rtP.y[89];\r\n  localDW->Traj_loc[90].f1[1] += -localDW->Derivative2 * rtP.y[90];\r\n  localDW->Traj_loc[91].f1[1] += -localDW->Derivative2 * rtP.y[91];\r\n  localDW->Traj_loc[92].f1[1] += -localDW->Derivative2 * rtP.y[92];\r\n  localDW->Traj_loc[93].f1[1] += -localDW->Derivative2 * rtP.y[93];\r\n  localDW->Traj_loc[94].f1[1] += -localDW->Derivative2 * rtP.y[94];\r\n  localDW->Traj_loc[95].f1[1] += -localDW->Derivative2 * rtP.y[95];\r\n  localDW->Traj_loc[96].f1[1] += -localDW->Derivative2 * rtP.y[96];\r\n  localDW->Traj_loc[97].f1[1] += -localDW->Derivative2 * rtP.y[97];\r\n  localDW->Traj_loc[98].f1[1] += -localDW->Derivative2 * rtP.y[98];\r\n  localDW->Traj_loc[99].f1[1] += -localDW->Derivative2 * rtP.y[99];\r\n  localDW->Traj_loc[100].f1[1] += -localDW->Derivative2 * rtP.y[100];\r\n  localDW->Traj_loc[101].f1[1] += -localDW->Derivative2 * rtP.y[101];\r\n  localDW->Traj_loc[102].f1[1] += -localDW->Derivative2 * rtP.y[102];\r\n  localDW->Traj_loc[103].f1[1] += -localDW->Derivative2 * rtP.y[103];\r\n  localDW->Traj_loc[104].f1[1] += -localDW->Derivative2 * rtP.y[104];\r\n  localDW->Traj_loc[105].f1[1] += -localDW->Derivative2 * rtP.y[105];\r\n  localDW->Traj_loc[106].f1[1] += -localDW->Derivative2 * rtP.y[106];\r\n  localDW->Traj_loc[107].f1[1] += -localDW->Derivative2 * rtP.y[107];\r\n  localDW->Traj_loc[108].f1[1] += -localDW->Derivative2 * rtP.y[108];\r\n  localDW->Traj_loc[109].f1[1] += -localDW->Derivative2 * rtP.y[109];\r\n  localDW->Traj_loc[110].f1[1] += -localDW->Derivative2 * rtP.y[110];\r\n  localDW->Traj_loc[111].f1[1] += -localDW->Derivative2 * rtP.y[111];\r\n  localDW->Traj_loc[112].f1[1] += -localDW->Derivative2 * rtP.y[112];\r\n  localDW->Traj_loc[113].f1[1] += -localDW->Derivative2 * rtP.y[113];\r\n  localDW->Traj_loc[114].f1[1] += -localDW->Derivative2 * rtP.y[114];\r\n  localDW->Traj_loc[115].f1[1] += -localDW->Derivative2 * rtP.y[115];\r\n  localDW->Traj_loc[116].f1[1] += -localDW->Derivative2 * rtP.y[116];\r\n  localDW->Traj_loc[117].f1[1] += -localDW->Derivative2 * rtP.y[117];\r\n  localDW->Traj_loc[118].f1[1] += -localDW->Derivative2 * rtP.y[118];\r\n  localDW->Traj_loc[119].f1[1] += -localDW->Derivative2 * rtP.y[119];\r\n  localDW->Traj_loc[120].f1[1] += -localDW->Derivative2 * rtP.y[120];\r\n  localDW->Traj_loc[121].f1[1] += -localDW->Derivative2 * rtP.y[121];\r\n  localDW->Traj_loc[122].f1[1] += -localDW->Derivative2 * rtP.y[122];\r\n  localDW->Traj_loc[123].f1[1] += -localDW->Derivative2 * rtP.y[123];\r\n  localDW->Traj_loc[124].f1[1] += -localDW->Derivative2 * rtP.y[124];\r\n  localDW->Traj_loc[125].f1[1] += -localDW->Derivative2 * rtP.y[125];\r\n  localDW->Traj_loc[126].f1[1] += -localDW->Derivative2 * rtP.y[126];\r\n  localDW->Traj_loc[127].f1[1] += -localDW->Derivative2 * rtP.y[127];\r\n  localDW->Traj_loc[128].f1[1] += -localDW->Derivative2 * rtP.y[128];\r\n  localDW->Traj_loc[129].f1[1] += -localDW->Derivative2 * rtP.y[129];\r\n  localDW->Traj_loc[130].f1[1] += -localDW->Derivative2 * rtP.y[130];\r\n  localDW->Traj_loc[131].f1[1] += -localDW->Derivative2 * rtP.y[131];\r\n  localDW->Traj_loc[132].f1[1] += -localDW->Derivative2 * rtP.y[132];\r\n  localDW->Traj_loc[133].f1[1] += -localDW->Derivative2 * rtP.y[133];\r\n  localDW->Traj_loc[134].f1[1] += -localDW->Derivative2 * rtP.y[134];\r\n  localDW->Traj_loc[135].f1[1] += -localDW->Derivative2 * rtP.y[135];\r\n  localDW->Traj_loc[136].f1[1] += -localDW->Derivative2 * rtP.y[136];\r\n  localDW->Traj_loc[137].f1[1] += -localDW->Derivative2 * rtP.y[137];\r\n  localDW->Traj_loc[138].f1[1] += -localDW->Derivative2 * rtP.y[138];\r\n  localDW->Traj_loc[139].f1[1] += -localDW->Derivative2 * rtP.y[139];\r\n  localDW->Traj_loc[140].f1[1] += -localDW->Derivative2 * rtP.y[140];\r\n  localDW->Traj_loc[141].f1[1] += -localDW->Derivative2 * rtP.y[141];\r\n  localDW->Traj_loc[142].f1[1] += -localDW->Derivative2 * rtP.y[142];\r\n  localDW->Traj_loc[143].f1[1] += -localDW->Derivative2 * rtP.y[143];\r\n  localDW->Traj_loc[144].f1[1] += -localDW->Derivative2 * rtP.y[144];\r\n  localDW->Traj_loc[145].f1[1] += -localDW->Derivative2 * rtP.y[145];\r\n  localDW->Traj_loc[146].f1[1] += -localDW->Derivative2 * rtP.y[146];\r\n  localDW->Traj_loc[147].f1[1] += -localDW->Derivative2 * rtP.y[147];\r\n  localDW->Traj_loc[148].f1[1] += -localDW->Derivative2 * rtP.y[148];\r\n  localDW->Traj_loc[149].f1[1] += -localDW->Derivative2 * rtP.y[149];\r\n  localDW->Traj_loc[150].f1[1] += -localDW->Derivative2 * rtP.y[150];\r\n  localDW->Traj_loc[151].f1[1] += -localDW->Derivative2 * rtP.y[151];\r\n  localDW->Traj_loc[152].f1[1] += -localDW->Derivative2 * rtP.y[152];\r\n  localDW->Traj_loc[153].f1[1] += -localDW->Derivative2 * rtP.y[153];\r\n  localDW->Traj_loc[154].f1[1] += -localDW->Derivative2 * rtP.y[154];\r\n  localDW->Traj_loc[155].f1[1] += -localDW->Derivative2 * rtP.y[155];\r\n  localDW->Traj_loc[156].f1[1] += -localDW->Derivative2 * rtP.y[156];\r\n  localDW->Traj_loc[157].f1[1] += -localDW->Derivative2 * rtP.y[157];\r\n  localDW->Traj_loc[158].f1[1] += -localDW->Derivative2 * rtP.y[158];\r\n  localDW->Traj_loc[159].f1[1] += -localDW->Derivative2 * rtP.y[159];\r\n  localDW->Traj_loc[160].f1[1] += -localDW->Derivative2 * rtP.y[160];\r\n  localDW->Traj_loc[161].f1[1] += -localDW->Derivative2 * rtP.y[161];\r\n  localDW->Traj_loc[162].f1[1] += -localDW->Derivative2 * rtP.y[162];\r\n  localDW->Traj_loc[163].f1[1] += -localDW->Derivative2 * rtP.y[163];\r\n  localDW->Traj_loc[164].f1[1] += -localDW->Derivative2 * rtP.y[164];\r\n  localDW->Traj_loc[165].f1[1] += -localDW->Derivative2 * rtP.y[165];\r\n  localDW->Traj_loc[166].f1[1] += -localDW->Derivative2 * rtP.y[166];\r\n  localDW->Traj_loc[167].f1[1] += -localDW->Derivative2 * rtP.y[167];\r\n  localDW->Traj_loc[168].f1[1] += -localDW->Derivative2 * rtP.y[168];\r\n  localDW->Traj_loc[169].f1[1] += -localDW->Derivative2 * rtP.y[169];\r\n  localDW->Traj_loc[170].f1[1] += -localDW->Derivative2 * rtP.y[170];\r\n  localDW->Traj_loc[171].f1[1] += -localDW->Derivative2 * rtP.y[171];\r\n  localDW->Traj_loc[172].f1[1] += -localDW->Derivative2 * rtP.y[172];\r\n  localDW->Traj_loc[173].f1[1] += -localDW->Derivative2 * rtP.y[173];\r\n  localDW->Traj_loc[174].f1[1] += -localDW->Derivative2 * rtP.y[174];\r\n  localDW->Traj_loc[175].f1[1] += -localDW->Derivative2 * rtP.y[175];\r\n  localDW->Traj_loc[176].f1[1] += -localDW->Derivative2 * rtP.y[176];\r\n  localDW->Traj_loc[177].f1[1] += -localDW->Derivative2 * rtP.y[177];\r\n  localDW->Traj_loc[178].f1[1] += -localDW->Derivative2 * rtP.y[178];\r\n  localDW->Traj_loc[179].f1[1] += -localDW->Derivative2 * rtP.y[179];\r\n  localDW->Traj_loc[180].f1[1] += -localDW->Derivative2 * rtP.y[180];\r\n  localDW->Traj_loc[181].f1[1] += -localDW->Derivative2 * rtP.y[181];\r\n  localDW->Traj_loc[182].f1[1] += -localDW->Derivative2 * rtP.y[182];\r\n  localDW->Traj_loc[183].f1[1] += -localDW->Derivative2 * rtP.y[183];\r\n  localDW->Traj_loc[184].f1[1] += -localDW->Derivative2 * rtP.y[184];\r\n  localDW->Traj_loc[185].f1[1] += -localDW->Derivative2 * rtP.y[185];\r\n  localDW->Traj_loc[186].f1[1] += -localDW->Derivative2 * rtP.y[186];\r\n  localDW->Traj_loc[187].f1[1] += -localDW->Derivative2 * rtP.y[187];\r\n  localDW->Traj_loc[188].f1[1] += -localDW->Derivative2 * rtP.y[188];\r\n  localDW->Traj_loc[189].f1[1] += -localDW->Derivative2 * rtP.y[189];\r\n  localDW->Traj_loc[190].f1[1] += -localDW->Derivative2 * rtP.y[190];\r\n  localDW->Traj_loc[191].f1[1] += -localDW->Derivative2 * rtP.y[191];\r\n  localDW->Traj_loc[192].f1[1] += -localDW->Derivative2 * rtP.y[192];\r\n  localDW->Traj_loc[193].f1[1] += -localDW->Derivative2 * rtP.y[193];\r\n  localDW->Traj_loc[194].f1[1] += -localDW->Derivative2 * rtP.y[194];\r\n  localDW->Traj_loc[195].f1[1] += -localDW->Derivative2 * rtP.y[195];\r\n  localDW->Traj_loc[196].f1[1] += -localDW->Derivative2 * rtP.y[196];\r\n  localDW->Traj_loc[197].f1[1] += -localDW->Derivative2 * rtP.y[197];\r\n  localDW->Traj_loc[198].f1[1] += -localDW->Derivative2 * rtP.y[198];\r\n  localDW->Traj_loc[199].f1[1] += -localDW->Derivative2 * rtP.y[199];\r\n  localDW->Traj_loc[200].f1[1] += -localDW->Derivative2 * rtP.y[200];\r\n  localDW->Traj_loc[201].f1[1] += -localDW->Derivative2 * rtP.y[201];\r\n  localDW->Traj_loc[202].f1[1] += -localDW->Derivative2 * rtP.y[202];\r\n  localDW->Traj_loc[203].f1[1] += -localDW->Derivative2 * rtP.y[203];\r\n  localDW->Traj_loc[204].f1[1] += -localDW->Derivative2 * rtP.y[204];\r\n  localDW->Traj_loc[205].f1[1] += -localDW->Derivative2 * rtP.y[205];\r\n  localDW->Traj_loc[206].f1[1] += -localDW->Derivative2 * rtP.y[206];\r\n  localDW->Traj_loc[207].f1[1] += -localDW->Derivative2 * rtP.y[207];\r\n  localDW->Traj_loc[208].f1[1] += -localDW->Derivative2 * rtP.y[208];\r\n  localDW->Traj_loc[209].f1[1] += -localDW->Derivative2 * rtP.y[209];\r\n  localDW->Traj_loc[210].f1[1] += -localDW->Derivative2 * rtP.y[210];\r\n  localDW->Traj_loc[211].f1[1] += -localDW->Derivative2 * rtP.y[211];\r\n  localDW->Traj_loc[212].f1[1] += -localDW->Derivative2 * rtP.y[212];\r\n  localDW->Traj_loc[213].f1[1] += -localDW->Derivative2 * rtP.y[213];\r\n  localDW->Traj_loc[214].f1[1] += -localDW->Derivative2 * rtP.y[214];\r\n  localDW->Traj_loc[215].f1[1] += -localDW->Derivative2 * rtP.y[215];\r\n  localDW->Traj_loc[216].f1[1] += -localDW->Derivative2 * rtP.y[216];\r\n  localDW->Traj_loc[217].f1[1] += -localDW->Derivative2 * rtP.y[217];\r\n  localDW->Traj_loc[218].f1[1] += -localDW->Derivative2 * rtP.y[218];\r\n  localDW->Traj_loc[219].f1[1] += -localDW->Derivative2 * rtP.y[219];\r\n  localDW->Traj_loc[220].f1[1] += -localDW->Derivative2 * rtP.y[220];\r\n  localDW->Traj_loc[221].f1[1] += -localDW->Derivative2 * rtP.y[221];\r\n  localDW->Traj_loc[222].f1[1] += -localDW->Derivative2 * rtP.y[222];\r\n  localDW->Traj_loc[223].f1[1] += -localDW->Derivative2 * rtP.y[223];\r\n  localDW->Traj_loc[224].f1[1] += -localDW->Derivative2 * rtP.y[224];\r\n  localDW->Traj_loc[225].f1[1] += -localDW->Derivative2 * rtP.y[225];\r\n  localDW->Traj_loc[226].f1[1] += -localDW->Derivative2 * rtP.y[226];\r\n  localDW->Traj_loc[227].f1[1] += -localDW->Derivative2 * rtP.y[227];\r\n  localDW->Traj_loc[228].f1[1] += -localDW->Derivative2 * rtP.y[228];\r\n  localDW->Traj_loc[229].f1[1] += -localDW->Derivative2 * rtP.y[229];\r\n  localDW->Traj_loc[230].f1[1] += -localDW->Derivative2 * rtP.y[230];\r\n  localDW->Traj_loc[231].f1[1] += -localDW->Derivative2 * rtP.y[231];\r\n  localDW->Traj_loc[232].f1[1] += -localDW->Derivative2 * rtP.y[232];\r\n  localDW->Traj_loc[233].f1[1] += -localDW->Derivative2 * rtP.y[233];\r\n  localDW->Traj_loc[234].f1[1] += -localDW->Derivative2 * rtP.y[234];\r\n  localDW->Traj_loc[235].f1[1] += -localDW->Derivative2 * rtP.y[235];\r\n  localDW->Traj_loc[236].f1[1] += -localDW->Derivative2 * rtP.y[236];\r\n  localDW->Traj_loc[237].f1[1] += -localDW->Derivative2 * rtP.y[237];\r\n  localDW->Traj_loc[238].f1[1] += -localDW->Derivative2 * rtP.y[238];\r\n  localDW->Traj_loc[239].f1[1] += -localDW->Derivative2 * rtP.y[239];\r\n  localDW->Traj_loc[240].f1[1] += -localDW->Derivative2 * rtP.y[240];\r\n  localDW->Traj_loc[241].f1[1] += -localDW->Derivative2 * rtP.y[241];\r\n  localDW->Traj_loc[242].f1[1] += -localDW->Derivative2 * rtP.y[242];\r\n  localDW->Traj_loc[243].f1[1] += -localDW->Derivative2 * rtP.y[243];\r\n  localDW->Traj_loc[244].f1[1] += -localDW->Derivative2 * rtP.y[244];\r\n  localDW->Traj_loc[245].f1[1] += -localDW->Derivative2 * rtP.y[245];\r\n  localDW->Traj_loc[246].f1[1] += -localDW->Derivative2 * rtP.y[246];\r\n  localDW->Traj_loc[247].f1[1] += -localDW->Derivative2 * rtP.y[247];\r\n  localDW->Traj_loc[248].f1[1] += -localDW->Derivative2 * rtP.y[248];\r\n  localDW->Traj_loc[249].f1[1] += -localDW->Derivative2 * rtP.y[249];\r\n  localDW->Traj_loc[250].f1[1] += -localDW->Derivative2 * rtP.y[250];\r\n  localDW->Traj_loc[251].f1[1] += -localDW->Derivative2 * rtP.y[251];\r\n  localDW->Traj_loc[252].f1[1] += -localDW->Derivative2 * rtP.y[252];\r\n  localDW->Traj_loc[253].f1[1] += -localDW->Derivative2 * rtP.y[253];\r\n  localDW->Traj_loc[254].f1[1] += -localDW->Derivative2 * rtP.y[254];\r\n  localDW->Traj_loc[255].f1[1] += -localDW->Derivative2 * rtP.y[255];\r\n  localDW->Traj_loc[256].f1[1] += -localDW->Derivative2 * rtP.y[256];\r\n  localDW->Traj_loc[257].f1[1] += -localDW->Derivative2 * rtP.y[257];\r\n  localDW->Traj_loc[258].f1[1] += -localDW->Derivative2 * rtP.y[258];\r\n  localDW->Traj_loc[259].f1[1] += -localDW->Derivative2 * rtP.y[259];\r\n  localDW->Traj_loc[260].f1[1] += -localDW->Derivative2 * rtP.y[260];\r\n  localDW->Traj_loc[261].f1[1] += -localDW->Derivative2 * rtP.y[261];\r\n  localDW->Traj_loc[262].f1[1] += -localDW->Derivative2 * rtP.y[262];\r\n  localDW->Traj_loc[263].f1[1] += -localDW->Derivative2 * rtP.y[263];\r\n  localDW->Traj_loc[264].f1[1] += -localDW->Derivative2 * rtP.y[264];\r\n  localDW->Traj_loc[265].f1[1] += -localDW->Derivative2 * rtP.y[265];\r\n  localDW->Traj_loc[266].f1[1] += -localDW->Derivative2 * rtP.y[266];\r\n  localDW->Traj_loc[267].f1[1] += -localDW->Derivative2 * rtP.y[267];\r\n  localDW->Traj_loc[268].f1[1] += -localDW->Derivative2 * rtP.y[268];\r\n  localDW->Traj_loc[269].f1[1] += -localDW->Derivative2 * rtP.y[269];\r\n  localDW->Traj_loc[270].f1[1] += -localDW->Derivative2 * rtP.y[270];\r\n  localDW->Traj_loc[271].f1[1] += -localDW->Derivative2 * rtP.y[271];\r\n  localDW->Traj_loc[272].f1[1] += -localDW->Derivative2 * rtP.y[272];\r\n  localDW->Traj_loc[273].f1[1] += -localDW->Derivative2 * rtP.y[273];\r\n  localDW->Traj_loc[274].f1[1] += -localDW->Derivative2 * rtP.y[274];\r\n  localDW->Traj_loc[275].f1[1] += -localDW->Derivative2 * rtP.y[275];\r\n  localDW->Traj_loc[276].f1[1] += -localDW->Derivative2 * rtP.y[276];\r\n  localDW->Traj_loc[277].f1[1] += -localDW->Derivative2 * rtP.y[277];\r\n  localDW->Traj_loc[278].f1[1] += -localDW->Derivative2 * rtP.y[278];\r\n  localDW->Traj_loc[279].f1[1] += -localDW->Derivative2 * rtP.y[279];\r\n  localDW->Traj_loc[280].f1[1] += -localDW->Derivative2 * rtP.y[280];\r\n  localDW->Traj_loc[281].f1[1] += -localDW->Derivative2 * rtP.y[281];\r\n  localDW->Traj_loc[282].f1[1] += -localDW->Derivative2 * rtP.y[282];\r\n  localDW->Traj_loc[283].f1[1] += -localDW->Derivative2 * rtP.y[283];\r\n  localDW->Traj_loc[284].f1[1] += -localDW->Derivative2 * rtP.y[284];\r\n  localDW->Traj_loc[285].f1[1] += -localDW->Derivative2 * rtP.y[285];\r\n  localDW->Traj_loc[286].f1[1] += -localDW->Derivative2 * rtP.y[286];\r\n  localDW->Traj_loc[287].f1[1] += -localDW->Derivative2 * rtP.y[287];\r\n  localDW->Traj_loc[288].f1[1] += -localDW->Derivative2 * rtP.y[288];\r\n  localDW->Traj_loc[289].f1[1] += -localDW->Derivative2 * rtP.y[289];\r\n  localDW->Traj_loc[290].f1[1] += -localDW->Derivative2 * rtP.y[290];\r\n  localDW->Traj_loc[291].f1[1] += -localDW->Derivative2 * rtP.y[291];\r\n  localDW->Traj_loc[292].f1[1] += -localDW->Derivative2 * rtP.y[292];\r\n  localDW->Traj_loc[293].f1[1] += -localDW->Derivative2 * rtP.y[293];\r\n  localDW->Traj_loc[294].f1[1] += -localDW->Derivative2 * rtP.y[294];\r\n  localDW->Traj_loc[295].f1[1] += -localDW->Derivative2 * rtP.y[295];\r\n  localDW->Traj_loc[296].f1[1] += -localDW->Derivative2 * rtP.y[296];\r\n  localDW->Traj_loc[297].f1[1] += -localDW->Derivative2 * rtP.y[297];\r\n  localDW->Traj_loc[298].f1[1] += -localDW->Derivative2 * rtP.y[298];\r\n  localDW->Traj_loc[299].f1[1] += -localDW->Derivative2 * rtP.y[299];\r\n  localDW->Traj_loc[300].f1[1] += -localDW->Derivative2 * rtP.y[300];\r\n  localDW->Traj_loc[301].f1[1] += -localDW->Derivative2 * rtP.y[301];\r\n  localDW->Traj_loc[302].f1[1] += -localDW->Derivative2 * rtP.y[302];\r\n  localDW->Traj_loc[303].f1[1] += -localDW->Derivative2 * rtP.y[303];\r\n  localDW->Traj_loc[304].f1[1] += -localDW->Derivative2 * rtP.y[304];\r\n  localDW->Traj_loc[305].f1[1] += -localDW->Derivative2 * rtP.y[305];\r\n  localDW->Traj_loc[306].f1[1] += -localDW->Derivative2 * rtP.y[306];\r\n  localDW->Traj_loc[307].f1[1] += -localDW->Derivative2 * rtP.y[307];\r\n  localDW->Traj_loc[308].f1[1] += -localDW->Derivative2 * rtP.y[308];\r\n  localDW->Traj_loc[309].f1[1] += -localDW->Derivative2 * rtP.y[309];\r\n  localDW->Traj_loc[310].f1[1] += -localDW->Derivative2 * rtP.y[310];\r\n  localDW->Traj_loc[311].f1[1] += -localDW->Derivative2 * rtP.y[311];\r\n  localDW->Traj_loc[312].f1[1] += -localDW->Derivative2 * rtP.y[312];\r\n  localDW->Traj_loc[313].f1[1] += -localDW->Derivative2 * rtP.y[313];\r\n  localDW->Traj_loc[314].f1[1] += -localDW->Derivative2 * rtP.y[314];\r\n  localDW->Traj_loc[315].f1[1] += -localDW->Derivative2 * rtP.y[315];\r\n  localDW->Traj_loc[316].f1[1] += -localDW->Derivative2 * rtP.y[316];\r\n  localDW->Traj_loc[317].f1[1] += -localDW->Derivative2 * rtP.y[317];\r\n  localDW->Traj_loc[318].f1[1] += -localDW->Derivative2 * rtP.y[318];\r\n  localDW->Traj_loc[319].f1[1] += -localDW->Derivative2 * rtP.y[319];\r\n  localDW->Traj_loc[320].f1[1] += -localDW->Derivative2 * rtP.y[320];\r\n  localDW->Traj_loc[321].f1[1] += -localDW->Derivative2 * rtP.y[321];\r\n  localDW->Traj_loc[322].f1[1] += -localDW->Derivative2 * rtP.y[322];\r\n  localDW->Traj_loc[323].f1[1] += -localDW->Derivative2 * rtP.y[323];\r\n  localDW->Traj_loc[324].f1[1] += -localDW->Derivative2 * rtP.y[324];\r\n  localDW->Traj_loc[325].f1[1] += -localDW->Derivative2 * rtP.y[325];\r\n  localDW->Traj_loc[326].f1[1] += -localDW->Derivative2 * rtP.y[326];\r\n  localDW->Traj_loc[327].f1[1] += -localDW->Derivative2 * rtP.y[327];\r\n  localDW->Traj_loc[328].f1[1] += -localDW->Derivative2 * rtP.y[328];\r\n  localDW->Traj_loc[329].f1[1] += -localDW->Derivative2 * rtP.y[329];\r\n  localDW->Traj_loc[330].f1[1] += -localDW->Derivative2 * rtP.y[330];\r\n  localDW->Traj_loc[331].f1[1] += -localDW->Derivative2 * rtP.y[331];\r\n  localDW->Traj_loc[332].f1[1] += -localDW->Derivative2 * rtP.y[332];\r\n  localDW->Traj_loc[333].f1[1] += -localDW->Derivative2 * rtP.y[333];\r\n  localDW->Traj_loc[334].f1[1] += -localDW->Derivative2 * rtP.y[334];\r\n  localDW->Traj_loc[335].f1[1] += -localDW->Derivative2 * rtP.y[335];\r\n  localDW->Traj_loc[336].f1[1] += -localDW->Derivative2 * rtP.y[336];\r\n  localDW->Traj_loc[337].f1[1] += -localDW->Derivative2 * rtP.y[337];\r\n  localDW->Traj_loc[338].f1[1] += -localDW->Derivative2 * rtP.y[338];\r\n  localDW->Traj_loc[339].f1[1] += -localDW->Derivative2 * rtP.y[339];\r\n  localDW->Traj_loc[340].f1[1] += -localDW->Derivative2 * rtP.y[340];\r\n  localDW->Traj_loc[341].f1[1] += -localDW->Derivative2 * rtP.y[341];\r\n  localDW->Traj_loc[342].f1[1] += -localDW->Derivative2 * rtP.y[342];\r\n  localDW->Traj_loc[343].f1[1] += -localDW->Derivative2 * rtP.y[343];\r\n  localDW->Traj_loc[344].f1[1] += -localDW->Derivative2 * rtP.y[344];\r\n  localDW->Traj_loc[345].f1[1] += -localDW->Derivative2 * rtP.y[345];\r\n  localDW->Traj_loc[346].f1[1] += -localDW->Derivative2 * rtP.y[346];\r\n  localDW->Traj_loc[347].f1[1] += -localDW->Derivative2 * rtP.y[347];\r\n  localDW->Traj_loc[348].f1[1] += -localDW->Derivative2 * rtP.y[348];\r\n  localDW->Traj_loc[349].f1[1] += -localDW->Derivative2 * rtP.y[349];\r\n  localDW->Traj_loc[350].f1[1] += -localDW->Derivative2 * rtP.y[350];\r\n  localDW->Traj_loc[351].f1[1] += -localDW->Derivative2 * rtP.y[351];\r\n  localDW->Traj_loc[352].f1[1] += -localDW->Derivative2 * rtP.y[352];\r\n  localDW->Traj_loc[353].f1[1] += -localDW->Derivative2 * rtP.y[353];\r\n  localDW->Traj_loc[354].f1[1] += -localDW->Derivative2 * rtP.y[354];\r\n  localDW->Traj_loc[355].f1[1] += -localDW->Derivative2 * rtP.y[355];\r\n  localDW->Traj_loc[356].f1[1] += -localDW->Derivative2 * rtP.y[356];\r\n  localDW->Traj_loc[357].f1[1] += -localDW->Derivative2 * rtP.y[357];\r\n  localDW->Traj_loc[358].f1[1] += -localDW->Derivative2 * rtP.y[358];\r\n  localDW->Traj_loc[359].f1[1] += -localDW->Derivative2 * rtP.y[359];\r\n  localDW->Traj_loc[360].f1[1] += -localDW->Derivative2 * rtP.y[360];\r\n  localDW->Traj_loc[361].f1[1] += -localDW->Derivative2 * rtP.y[361];\r\n  localDW->Traj_loc[362].f1[1] += -localDW->Derivative2 * rtP.y[362];\r\n  localDW->Traj_loc[363].f1[1] += -localDW->Derivative2 * rtP.y[363];\r\n  localDW->Traj_loc[364].f1[1] += -localDW->Derivative2 * rtP.y[364];\r\n  localDW->Traj_loc[365].f1[1] += -localDW->Derivative2 * rtP.y[365];\r\n  localDW->Traj_loc[366].f1[1] += -localDW->Derivative2 * rtP.y[366];\r\n  localDW->Traj_loc[367].f1[1] += -localDW->Derivative2 * rtP.y[367];\r\n  localDW->Traj_loc[368].f1[1] += -localDW->Derivative2 * rtP.y[368];\r\n  localDW->Traj_loc[369].f1[1] += -localDW->Derivative2 * rtP.y[369];\r\n  localDW->Traj_loc[370].f1[1] += -localDW->Derivative2 * rtP.y[370];\r\n  localDW->Traj_loc[371].f1[1] += -localDW->Derivative2 * rtP.y[371];\r\n  localDW->Traj_loc[372].f1[1] += -localDW->Derivative2 * rtP.y[372];\r\n  localDW->Traj_loc[373].f1[1] += -localDW->Derivative2 * rtP.y[373];\r\n  localDW->Traj_loc[374].f1[1] += -localDW->Derivative2 * rtP.y[374];\r\n  localDW->Traj_loc[375].f1[1] += -localDW->Derivative2 * rtP.y[375];\r\n  localDW->Traj_loc[376].f1[1] += -localDW->Derivative2 * rtP.y[376];\r\n  localDW->Traj_loc[377].f1[1] += -localDW->Derivative2 * rtP.y[377];\r\n  localDW->Traj_loc[378].f1[1] += -localDW->Derivative2 * rtP.y[378];\r\n  localDW->Traj_loc[379].f1[1] += -localDW->Derivative2 * rtP.y[379];\r\n  localDW->Traj_loc[380].f1[1] += -localDW->Derivative2 * rtP.y[380];\r\n  localDW->Traj_loc[381].f1[1] += -localDW->Derivative2 * rtP.y[381];\r\n  localDW->Traj_loc[382].f1[1] += -localDW->Derivative2 * rtP.y[382];\r\n  localDW->Traj_loc[383].f1[1] += -localDW->Derivative2 * rtP.y[383];\r\n  localDW->Traj_loc[384].f1[1] += -localDW->Derivative2 * rtP.y[384];\r\n  localDW->Traj_loc[385].f1[1] += -localDW->Derivative2 * rtP.y[385];\r\n  localDW->Traj_loc[386].f1[1] += -localDW->Derivative2 * rtP.y[386];\r\n  localDW->Traj_loc[387].f1[1] += -localDW->Derivative2 * rtP.y[387];\r\n  localDW->Traj_loc[388].f1[1] += -localDW->Derivative2 * rtP.y[388];\r\n  localDW->Traj_loc[389].f1[1] += -localDW->Derivative2 * rtP.y[389];\r\n  localDW->Traj_loc[390].f1[1] += -localDW->Derivative2 * rtP.y[390];\r\n  localDW->Traj_loc[391].f1[1] += -localDW->Derivative2 * rtP.y[391];\r\n  localDW->Traj_loc[392].f1[1] += -localDW->Derivative2 * rtP.y[392];\r\n  localDW->Traj_loc[393].f1[1] += -localDW->Derivative2 * rtP.y[393];\r\n  localDW->Traj_loc[394].f1[1] += -localDW->Derivative2 * rtP.y[394];\r\n  localDW->Traj_loc[395].f1[1] += -localDW->Derivative2 * rtP.y[395];\r\n  localDW->Traj_loc[396].f1[1] += -localDW->Derivative2 * rtP.y[396];\r\n  localDW->Traj_loc[397].f1[1] += -localDW->Derivative2 * rtP.y[397];\r\n  localDW->Traj_loc[398].f1[1] += -localDW->Derivative2 * rtP.y[398];\r\n  localDW->Traj_loc[399].f1[1] += -localDW->Derivative2 * rtP.y[399];\r\n  localDW->Traj_loc[400].f1[1] += -localDW->Derivative2 * rtP.y[400];\r\n  localDW->Traj_loc[401].f1[1] += -localDW->Derivative2 * rtP.y[401];\r\n  localDW->Traj_loc[402].f1[1] += -localDW->Derivative2 * rtP.y[402];\r\n  localDW->Traj_loc[403].f1[1] += -localDW->Derivative2 * rtP.y[403];\r\n  localDW->Traj_loc[404].f1[1] += -localDW->Derivative2 * rtP.y[404];\r\n  localDW->Traj_loc[405].f1[1] += -localDW->Derivative2 * rtP.y[405];\r\n  localDW->Traj_loc[406].f1[1] += -localDW->Derivative2 * rtP.y[406];\r\n  localDW->Traj_loc[407].f1[1] += -localDW->Derivative2 * rtP.y[407];\r\n  localDW->Traj_loc[408].f1[1] += -localDW->Derivative2 * rtP.y[408];\r\n  localDW->Traj_loc[409].f1[1] += -localDW->Derivative2 * rtP.y[409];\r\n  localDW->Traj_loc[410].f1[1] += -localDW->Derivative2 * rtP.y[410];\r\n  localDW->Traj_loc[411].f1[1] += -localDW->Derivative2 * rtP.y[411];\r\n  localDW->Traj_loc[412].f1[1] += -localDW->Derivative2 * rtP.y[412];\r\n  localDW->Traj_loc[413].f1[1] += -localDW->Derivative2 * rtP.y[413];\r\n  localDW->Traj_loc[414].f1[1] += -localDW->Derivative2 * rtP.y[414];\r\n  localDW->Traj_loc[415].f1[1] += -localDW->Derivative2 * rtP.y[415];\r\n  localDW->Traj_loc[416].f1[1] += -localDW->Derivative2 * rtP.y[416];\r\n  localDW->Traj_loc[417].f1[1] += -localDW->Derivative2 * rtP.y[417];\r\n  localDW->Traj_loc[418].f1[1] += -localDW->Derivative2 * rtP.y[418];\r\n  localDW->Traj_loc[419].f1[1] += -localDW->Derivative2 * rtP.y[419];\r\n  localDW->Traj_loc[420].f1[1] += -localDW->Derivative2 * rtP.y[420];\r\n  localDW->Traj_loc[421].f1[1] += -localDW->Derivative2 * rtP.y[421];\r\n  localDW->Traj_loc[422].f1[1] += -localDW->Derivative2 * rtP.y[422];\r\n  localDW->Traj_loc[423].f1[1] += -localDW->Derivative2 * rtP.y[423];\r\n  localDW->Traj_loc[424].f1[1] += -localDW->Derivative2 * rtP.y[424];\r\n  localDW->Traj_loc[425].f1[1] += -localDW->Derivative2 * rtP.y[425];\r\n  localDW->Traj_loc[426].f1[1] += -localDW->Derivative2 * rtP.y[426];\r\n  localDW->Traj_loc[427].f1[1] += -localDW->Derivative2 * rtP.y[427];\r\n  localDW->Traj_loc[428].f1[1] += -localDW->Derivative2 * rtP.y[428];\r\n  localDW->Traj_loc[429].f1[1] += -localDW->Derivative2 * rtP.y[429];\r\n  localDW->Traj_loc[430].f1[1] += -localDW->Derivative2 * rtP.y[430];\r\n  localDW->Traj_loc[431].f1[1] += -localDW->Derivative2 * rtP.y[431];\r\n  localDW->Traj_loc[432].f1[1] += -localDW->Derivative2 * rtP.y[432];\r\n  localDW->Traj_loc[433].f1[1] += -localDW->Derivative2 * rtP.y[433];\r\n  localDW->Traj_loc[434].f1[1] += -localDW->Derivative2 * rtP.y[434];\r\n  localDW->Traj_loc[435].f1[1] += -localDW->Derivative2 * rtP.y[435];\r\n  localDW->Traj_loc[436].f1[1] += -localDW->Derivative2 * rtP.y[436];\r\n  localDW->Traj_loc[437].f1[1] += -localDW->Derivative2 * rtP.y[437];\r\n  localDW->Traj_loc[438].f1[1] += -localDW->Derivative2 * rtP.y[438];\r\n  localDW->Traj_loc[439].f1[1] += -localDW->Derivative2 * rtP.y[439];\r\n  localDW->Traj_loc[440].f1[1] += -localDW->Derivative2 * rtP.y[440];\r\n  localDW->Traj_loc[441].f1[1] += -localDW->Derivative2 * rtP.y[441];\r\n  localDW->Traj_loc[442].f1[1] += -localDW->Derivative2 * rtP.y[442];\r\n  localDW->Traj_loc[443].f1[1] += -localDW->Derivative2 * rtP.y[443];\r\n  localDW->Traj_loc[444].f1[1] += -localDW->Derivative2 * rtP.y[444];\r\n  localDW->Traj_loc[445].f1[1] += -localDW->Derivative2 * rtP.y[445];\r\n  localDW->Traj_loc[446].f1[1] += -localDW->Derivative2 * rtP.y[446];\r\n  localDW->Traj_loc[447].f1[1] += -localDW->Derivative2 * rtP.y[447];\r\n  localDW->Traj_loc[448].f1[1] += -localDW->Derivative2 * rtP.y[448];\r\n  localDW->Traj_loc[449].f1[1] += -localDW->Derivative2 * rtP.y[449];\r\n  localDW->Traj_loc[450].f1[1] += -localDW->Derivative2 * rtP.y[450];\r\n  localDW->Traj_loc[451].f1[1] += -localDW->Derivative2 * rtP.y[451];\r\n  localDW->Traj_loc[452].f1[1] += -localDW->Derivative2 * rtP.y[452];\r\n  localDW->Traj_loc[453].f1[1] += -localDW->Derivative2 * rtP.y[453];\r\n  localDW->Traj_loc[454].f1[1] += -localDW->Derivative2 * rtP.y[454];\r\n  localDW->Traj_loc[455].f1[1] += -localDW->Derivative2 * rtP.y[455];\r\n  localDW->Traj_loc[456].f1[1] += -localDW->Derivative2 * rtP.y[456];\r\n  localDW->Traj_loc[457].f1[1] += -localDW->Derivative2 * rtP.y[457];\r\n  localDW->Traj_loc[458].f1[1] += -localDW->Derivative2 * rtP.y[458];\r\n  localDW->Traj_loc[459].f1[1] += -localDW->Derivative2 * rtP.y[459];\r\n  localDW->Traj_loc[460].f1[1] += -localDW->Derivative2 * rtP.y[460];\r\n  localDW->Traj_loc[461].f1[1] += -localDW->Derivative2 * rtP.y[461];\r\n  localDW->Traj_loc[462].f1[1] += -localDW->Derivative2 * rtP.y[462];\r\n  localDW->Traj_loc[463].f1[1] += -localDW->Derivative2 * rtP.y[463];\r\n  localDW->Traj_loc[464].f1[1] += -localDW->Derivative2 * rtP.y[464];\r\n  localDW->Traj_loc[465].f1[1] += -localDW->Derivative2 * rtP.y[465];\r\n  localDW->Traj_loc[466].f1[1] += -localDW->Derivative2 * rtP.y[466];\r\n  localDW->Traj_loc[467].f1[1] += -localDW->Derivative2 * rtP.y[467];\r\n  localDW->Traj_loc[468].f1[1] += -localDW->Derivative2 * rtP.y[468];\r\n  localDW->Traj_loc[469].f1[1] += -localDW->Derivative2 * rtP.y[469];\r\n  localDW->Traj_loc[470].f1[1] += -localDW->Derivative2 * rtP.y[470];\r\n  localDW->Traj_loc[471].f1[1] += -localDW->Derivative2 * rtP.y[471];\r\n  localDW->Traj_loc[472].f1[1] += -localDW->Derivative2 * rtP.y[472];\r\n  localDW->Traj_loc[473].f1[1] += -localDW->Derivative2 * rtP.y[473];\r\n  localDW->Traj_loc[474].f1[1] += -localDW->Derivative2 * rtP.y[474];\r\n  localDW->Traj_loc[475].f1[1] += -localDW->Derivative2 * rtP.y[475];\r\n  localDW->Traj_loc[476].f1[1] += -localDW->Derivative2 * rtP.y[476];\r\n  localDW->Traj_loc[477].f1[1] += -localDW->Derivative2 * rtP.y[477];\r\n  localDW->Traj_loc[478].f1[1] += -localDW->Derivative2 * rtP.y[478];\r\n  localDW->Traj_loc[479].f1[1] += -localDW->Derivative2 * rtP.y[479];\r\n  localDW->Traj_loc[480].f1[1] += -localDW->Derivative2 * rtP.y[480];\r\n  localDW->Traj_loc[481].f1[1] += -localDW->Derivative2 * rtP.y[481];\r\n  localDW->Traj_loc[482].f1[1] += -localDW->Derivative2 * rtP.y[482];\r\n  localDW->Traj_loc[483].f1[1] += -localDW->Derivative2 * rtP.y[483];\r\n  localDW->Traj_loc[484].f1[1] += -localDW->Derivative2 * rtP.y[484];\r\n  localDW->Traj_loc[485].f1[1] += -localDW->Derivative2 * rtP.y[485];\r\n  localDW->Traj_loc[486].f1[1] += -localDW->Derivative2 * rtP.y[486];\r\n  localDW->Traj_loc[487].f1[1] += -localDW->Derivative2 * rtP.y[487];\r\n  localDW->Traj_loc[488].f1[1] += -localDW->Derivative2 * rtP.y[488];\r\n  localDW->Traj_loc[489].f1[1] += -localDW->Derivative2 * rtP.y[489];\r\n  localDW->Traj_loc[490].f1[1] += -localDW->Derivative2 * rtP.y[490];\r\n  localDW->Traj_loc[491].f1[1] += -localDW->Derivative2 * rtP.y[491];\r\n  localDW->Traj_loc[492].f1[1] += -localDW->Derivative2 * rtP.y[492];\r\n  localDW->Traj_loc[493].f1[1] += -localDW->Derivative2 * rtP.y[493];\r\n  localDW->Traj_loc[494].f1[1] += -localDW->Derivative2 * rtP.y[494];\r\n  localDW->Traj_loc[495].f1[1] += -localDW->Derivative2 * rtP.y[495];\r\n  localDW->Traj_loc[496].f1[1] += -localDW->Derivative2 * rtP.y[496];\r\n  localDW->Traj_loc[497].f1[1] += -localDW->Derivative2 * rtP.y[497];\r\n  localDW->Traj_loc[498].f1[1] += -localDW->Derivative2 * rtP.y[498];\r\n  localDW->Traj_loc[499].f1[1] += -localDW->Derivative2 * rtP.y[499];\r\n  localDW->Traj_loc[500].f1[1] += -localDW->Derivative2 * rtP.y[500];\r\n  localDW->Traj_loc[501].f1[1] += -localDW->Derivative2 * rtP.y[501];\r\n  localDW->Traj_loc[502].f1[1] += -localDW->Derivative2 * rtP.y[502];\r\n  localDW->Traj_loc[503].f1[1] += -localDW->Derivative2 * rtP.y[503];\r\n  localDW->Traj_loc[504].f1[1] += -localDW->Derivative2 * rtP.y[504];\r\n  localDW->Traj_loc[505].f1[1] += -localDW->Derivative2 * rtP.y[505];\r\n  localDW->Traj_loc[506].f1[1] += -localDW->Derivative2 * rtP.y[506];\r\n  localDW->Traj_loc[507].f1[1] += -localDW->Derivative2 * rtP.y[507];\r\n  localDW->Traj_loc[508].f1[1] += -localDW->Derivative2 * rtP.y[508];\r\n  localDW->Traj_loc[509].f1[1] += -localDW->Derivative2 * rtP.y[509];\r\n  localDW->Traj_loc[510].f1[1] += -localDW->Derivative2 * rtP.y[510];\r\n  localDW->Traj_loc[511].f1[1] += -localDW->Derivative2 * rtP.y[511];\r\n  localDW->Traj_loc[512].f1[1] += -localDW->Derivative2 * rtP.y[512];\r\n  localDW->Traj_loc[513].f1[1] += -localDW->Derivative2 * rtP.y[513];\r\n  localDW->Traj_loc[514].f1[1] += -localDW->Derivative2 * rtP.y[514];\r\n  localDW->Traj_loc[515].f1[1] += -localDW->Derivative2 * rtP.y[515];\r\n  localDW->Traj_loc[516].f1[1] += -localDW->Derivative2 * rtP.y[516];\r\n  localDW->Traj_loc[517].f1[1] += -localDW->Derivative2 * rtP.y[517];\r\n  localDW->Traj_loc[518].f1[1] += -localDW->Derivative2 * rtP.y[518];\r\n  localDW->Traj_loc[519].f1[1] += -localDW->Derivative2 * rtP.y[519];\r\n  localDW->Traj_loc[520].f1[1] += -localDW->Derivative2 * rtP.y[520];\r\n  localDW->Traj_loc[521].f1[1] += -localDW->Derivative2 * rtP.y[521];\r\n  localDW->Traj_loc[522].f1[1] += -localDW->Derivative2 * rtP.y[522];\r\n  localDW->Traj_loc[523].f1[1] += -localDW->Derivative2 * rtP.y[523];\r\n  localDW->Traj_loc[524].f1[1] += -localDW->Derivative2 * rtP.y[524];\r\n  localDW->Traj_loc[525].f1[1] += -localDW->Derivative2 * rtP.y[525];\r\n  localDW->Traj_loc[526].f1[1] += -localDW->Derivative2 * rtP.y[526];\r\n  localDW->Traj_loc[527].f1[1] += -localDW->Derivative2 * rtP.y[527];\r\n  localDW->Traj_loc[528].f1[1] += -localDW->Derivative2 * rtP.y[528];\r\n  localDW->Traj_loc[529].f1[1] += -localDW->Derivative2 * rtP.y[529];\r\n  localDW->Traj_loc[530].f1[1] += -localDW->Derivative2 * rtP.y[530];\r\n  localDW->Traj_loc[531].f1[1] += -localDW->Derivative2 * rtP.y[531];\r\n  localDW->Traj_loc[532].f1[1] += -localDW->Derivative2 * rtP.y[532];\r\n  localDW->Traj_loc[533].f1[1] += -localDW->Derivative2 * rtP.y[533];\r\n  localDW->Traj_loc[534].f1[1] += -localDW->Derivative2 * rtP.y[534];\r\n  localDW->Traj_loc[535].f1[1] += -localDW->Derivative2 * rtP.y[535];\r\n  localDW->Traj_loc[536].f1[1] += -localDW->Derivative2 * rtP.y[536];\r\n  localDW->Traj_loc[537].f1[1] += -localDW->Derivative2 * rtP.y[537];\r\n  localDW->Traj_loc[538].f1[1] += -localDW->Derivative2 * rtP.y[538];\r\n  localDW->Traj_loc[539].f1[1] += -localDW->Derivative2 * rtP.y[539];\r\n  localDW->Traj_loc[540].f1[1] += -localDW->Derivative2 * rtP.y[540];\r\n  localDW->Traj_loc[541].f1[1] += -localDW->Derivative2 * rtP.y[541];\r\n  localDW->Traj_loc[542].f1[1] += -localDW->Derivative2 * rtP.y[542];\r\n  localDW->Traj_loc[543].f1[1] += -localDW->Derivative2 * rtP.y[543];\r\n  localDW->Traj_loc[544].f1[1] += -localDW->Derivative2 * rtP.y[544];\r\n  localDW->Traj_loc[545].f1[1] += -localDW->Derivative2 * rtP.y[545];\r\n  localDW->Traj_loc[546].f1[1] += -localDW->Derivative2 * rtP.y[546];\r\n  localDW->Traj_loc[547].f1[1] += -localDW->Derivative2 * rtP.y[547];\r\n  localDW->Traj_loc[548].f1[1] += -localDW->Derivative2 * rtP.y[548];\r\n  localDW->Traj_loc[549].f1[1] += -localDW->Derivative2 * rtP.y[549];\r\n  localDW->Traj_loc[550].f1[1] += -localDW->Derivative2 * rtP.y[550];\r\n  localDW->Traj_loc[551].f1[1] += -localDW->Derivative2 * rtP.y[551];\r\n  localDW->Traj_loc[552].f1[1] += -localDW->Derivative2 * rtP.y[552];\r\n  localDW->Traj_loc[553].f1[1] += -localDW->Derivative2 * rtP.y[553];\r\n  localDW->Traj_loc[554].f1[1] += -localDW->Derivative2 * rtP.y[554];\r\n  localDW->Traj_loc[555].f1[1] += -localDW->Derivative2 * rtP.y[555];\r\n  localDW->Traj_loc[556].f1[1] += -localDW->Derivative2 * rtP.y[556];\r\n  localDW->Traj_loc[557].f1[1] += -localDW->Derivative2 * rtP.y[557];\r\n  localDW->Traj_loc[558].f1[1] += -localDW->Derivative2 * rtP.y[558];\r\n  localDW->Traj_loc[559].f1[1] += -localDW->Derivative2 * rtP.y[559];\r\n  localDW->Traj_loc[560].f1[1] += -localDW->Derivative2 * rtP.y[560];\r\n  localDW->Traj_loc[561].f1[1] += -localDW->Derivative2 * rtP.y[561];\r\n  localDW->Traj_loc[562].f1[1] += -localDW->Derivative2 * rtP.y[562];\r\n  localDW->Traj_loc[563].f1[1] += -localDW->Derivative2 * rtP.y[563];\r\n  localDW->Traj_loc[564].f1[1] += -localDW->Derivative2 * rtP.y[564];\r\n  localDW->Traj_loc[565].f1[1] += -localDW->Derivative2 * rtP.y[565];\r\n  localDW->Traj_loc[566].f1[1] += -localDW->Derivative2 * rtP.y[566];\r\n  localDW->Traj_loc[567].f1[1] += -localDW->Derivative2 * rtP.y[567];\r\n  localDW->Traj_loc[568].f1[1] += -localDW->Derivative2 * rtP.y[568];\r\n  localDW->Traj_loc[569].f1[1] += -localDW->Derivative2 * rtP.y[569];\r\n  localDW->Traj_loc[570].f1[1] += -localDW->Derivative2 * rtP.y[570];\r\n  localDW->Traj_loc[571].f1[1] += -localDW->Derivative2 * rtP.y[571];\r\n  localDW->Traj_loc[572].f1[1] += -localDW->Derivative2 * rtP.y[572];\r\n  localDW->Traj_loc[573].f1[1] += -localDW->Derivative2 * rtP.y[573];\r\n  localDW->Traj_loc[574].f1[1] += -localDW->Derivative2 * rtP.y[574];\r\n  localDW->Traj_loc[575].f1[1] += -localDW->Derivative2 * rtP.y[575];\r\n  localDW->Traj_loc[576].f1[1] += -localDW->Derivative2 * rtP.y[576];\r\n  localDW->Traj_loc[577].f1[1] += -localDW->Derivative2 * rtP.y[577];\r\n  localDW->Traj_loc[578].f1[1] += -localDW->Derivative2 * rtP.y[578];\r\n  localDW->Traj_loc[579].f1[1] += -localDW->Derivative2 * rtP.y[579];\r\n  localDW->Traj_loc[580].f1[1] += -localDW->Derivative2 * rtP.y[580];\r\n  localDW->Traj_loc[581].f1[1] += -localDW->Derivative2 * rtP.y[581];\r\n  localDW->Traj_loc[582].f1[1] += -localDW->Derivative2 * rtP.y[582];\r\n  localDW->Traj_loc[583].f1[1] += -localDW->Derivative2 * rtP.y[583];\r\n  localDW->Traj_loc[584].f1[1] += -localDW->Derivative2 * rtP.y[584];\r\n  localDW->Traj_loc[585].f1[1] += -localDW->Derivative2 * rtP.y[585];\r\n  localDW->Traj_loc[586].f1[1] += -localDW->Derivative2 * rtP.y[586];\r\n  localDW->Traj_loc[587].f1[1] += -localDW->Derivative2 * rtP.y[587];\r\n  localDW->Traj_loc[588].f1[1] += -localDW->Derivative2 * rtP.y[588];\r\n  localDW->Traj_loc[589].f1[1] += -localDW->Derivative2 * rtP.y[589];\r\n  localDW->Traj_loc[590].f1[1] += -localDW->Derivative2 * rtP.y[590];\r\n  localDW->Traj_loc[591].f1[1] += -localDW->Derivative2 * rtP.y[591];\r\n  localDW->Traj_loc[592].f1[1] += -localDW->Derivative2 * rtP.y[592];\r\n  localDW->Traj_loc[593].f1[1] += -localDW->Derivative2 * rtP.y[593];\r\n  localDW->Traj_loc[594].f1[1] += -localDW->Derivative2 * rtP.y[594];\r\n  localDW->Traj_loc[595].f1[1] += -localDW->Derivative2 * rtP.y[595];\r\n  localDW->Traj_loc[596].f1[1] += -localDW->Derivative2 * rtP.y[596];\r\n  localDW->Traj_loc[597].f1[1] += -localDW->Derivative2 * rtP.y[597];\r\n  localDW->Traj_loc[598].f1[1] += -localDW->Derivative2 * rtP.y[598];\r\n  localDW->Traj_loc[599].f1[1] += -localDW->Derivative2 * rtP.y[599];\r\n  localDW->Traj_loc[600].f1[1] += -localDW->Derivative2 * rtP.y[600];\r\n  localDW->Traj_loc[601].f1[1] += -localDW->Derivative2 * rtP.y[601];\r\n  localDW->Traj_loc[602].f1[1] += -localDW->Derivative2 * rtP.y[602];\r\n  localDW->Traj_loc[603].f1[1] += -localDW->Derivative2 * rtP.y[603];\r\n  localDW->Traj_loc[604].f1[1] += -localDW->Derivative2 * rtP.y[604];\r\n  localDW->Traj_loc[605].f1[1] += -localDW->Derivative2 * rtP.y[605];\r\n  localDW->Traj_loc[606].f1[1] += -localDW->Derivative2 * rtP.y[606];\r\n  localDW->Traj_loc[607].f1[1] += -localDW->Derivative2 * rtP.y[607];\r\n  localDW->Traj_loc[608].f1[1] += -localDW->Derivative2 * rtP.y[608];\r\n  localDW->Traj_loc[609].f1[1] += -localDW->Derivative2 * rtP.y[609];\r\n  localDW->Traj_loc[610].f1[1] += -localDW->Derivative2 * rtP.y[610];\r\n  localDW->Traj_loc[611].f1[1] += -localDW->Derivative2 * rtP.y[611];\r\n  localDW->Traj_loc[612].f1[1] += -localDW->Derivative2 * rtP.y[612];\r\n  localDW->Traj_loc[613].f1[1] += -localDW->Derivative2 * rtP.y[613];\r\n  localDW->Traj_loc[614].f1[1] += -localDW->Derivative2 * rtP.y[614];\r\n  localDW->Traj_loc[615].f1[1] += -localDW->Derivative2 * rtP.y[615];\r\n  localDW->Traj_loc[616].f1[1] += -localDW->Derivative2 * rtP.y[616];\r\n  localDW->Traj_loc[617].f1[1] += -localDW->Derivative2 * rtP.y[617];\r\n  localDW->Traj_loc[618].f1[1] += -localDW->Derivative2 * rtP.y[618];\r\n  localDW->Traj_loc[619].f1[1] += -localDW->Derivative2 * rtP.y[619];\r\n  localDW->Traj_loc[620].f1[1] += -localDW->Derivative2 * rtP.y[620];\r\n  localDW->Traj_loc[621].f1[1] += -localDW->Derivative2 * rtP.y[621];\r\n  localDW->Traj_loc[622].f1[1] += -localDW->Derivative2 * rtP.y[622];\r\n  localDW->Traj_loc[623].f1[1] += -localDW->Derivative2 * rtP.y[623];\r\n  localDW->Traj_loc[624].f1[1] += -localDW->Derivative2 * rtP.y[624];\r\n  localDW->Traj_loc[625].f1[1] += -localDW->Derivative2 * rtP.y[625];\r\n  localDW->Traj_loc[626].f1[1] += -localDW->Derivative2 * rtP.y[626];\r\n  localDW->Traj_loc[627].f1[1] += -localDW->Derivative2 * rtP.y[627];\r\n  localDW->Traj_loc[628].f1[1] += -localDW->Derivative2 * rtP.y[628];\r\n  localDW->Traj_loc[629].f1[1] += -localDW->Derivative2 * rtP.y[629];\r\n  localDW->Traj_loc[630].f1[1] += -localDW->Derivative2 * rtP.y[630];\r\n  localDW->Traj_loc[631].f1[1] += -localDW->Derivative2 * rtP.y[631];\r\n  localDW->Traj_loc[632].f1[1] += -localDW->Derivative2 * rtP.y[632];\r\n  localDW->Traj_loc[633].f1[1] += -localDW->Derivative2 * rtP.y[633];\r\n  localDW->Traj_loc[634].f1[1] += -localDW->Derivative2 * rtP.y[634];\r\n  localDW->Traj_loc[635].f1[1] += -localDW->Derivative2 * rtP.y[635];\r\n  localDW->Traj_loc[636].f1[1] += -localDW->Derivative2 * rtP.y[636];\r\n  localDW->Traj_loc[637].f1[1] += -localDW->Derivative2 * rtP.y[637];\r\n  localDW->Traj_loc[638].f1[1] += -localDW->Derivative2 * rtP.y[638];\r\n  localDW->Traj_loc[639].f1[1] += -localDW->Derivative2 * rtP.y[639];\r\n  localDW->Traj_loc[640].f1[1] += -localDW->Derivative2 * rtP.y[640];\r\n  localDW->Traj_loc[641].f1[1] += -localDW->Derivative2 * rtP.y[641];\r\n  localDW->Traj_loc[642].f1[1] += -localDW->Derivative2 * rtP.y[642];\r\n  localDW->Traj_loc[643].f1[1] += -localDW->Derivative2 * rtP.y[643];\r\n  localDW->Traj_loc[644].f1[1] += -localDW->Derivative2 * rtP.y[644];\r\n  localDW->Traj_loc[645].f1[1] += -localDW->Derivative2 * rtP.y[645];\r\n  localDW->Traj_loc[646].f1[1] += -localDW->Derivative2 * rtP.y[646];\r\n  localDW->Traj_loc[647].f1[1] += -localDW->Derivative2 * rtP.y[647];\r\n  localDW->Traj_loc[648].f1[1] += -localDW->Derivative2 * rtP.y[648];\r\n  localDW->Traj_loc[649].f1[1] += -localDW->Derivative2 * rtP.y[649];\r\n  localDW->Traj_loc[650].f1[1] += -localDW->Derivative2 * rtP.y[650];\r\n  localDW->Traj_loc[651].f1[1] += -localDW->Derivative2 * rtP.y[651];\r\n  localDW->Traj_loc[652].f1[1] += -localDW->Derivative2 * rtP.y[652];\r\n  localDW->Traj_loc[653].f1[1] += -localDW->Derivative2 * rtP.y[653];\r\n  localDW->Traj_loc[654].f1[1] += -localDW->Derivative2 * rtP.y[654];\r\n  localDW->Traj_loc[655].f1[1] += -localDW->Derivative2 * rtP.y[655];\r\n  localDW->Traj_loc[656].f1[1] += -localDW->Derivative2 * rtP.y[656];\r\n  localDW->Traj_loc[657].f1[1] += -localDW->Derivative2 * rtP.y[657];\r\n  localDW->Traj_loc[658].f1[1] += -localDW->Derivative2 * rtP.y[658];\r\n  localDW->Traj_loc[659].f1[1] += -localDW->Derivative2 * rtP.y[659];\r\n  localDW->Traj_loc[660].f1[1] += -localDW->Derivative2 * rtP.y[660];\r\n  localDW->Traj_loc[661].f1[1] += -localDW->Derivative2 * rtP.y[661];\r\n  localDW->Traj_loc[662].f1[1] += -localDW->Derivative2 * rtP.y[662];\r\n  localDW->Traj_loc[663].f1[1] += -localDW->Derivative2 * rtP.y[663];\r\n  localDW->Traj_loc[664].f1[1] += -localDW->Derivative2 * rtP.y[664];\r\n  localDW->Traj_loc[665].f1[1] += -localDW->Derivative2 * rtP.y[665];\r\n  localDW->Traj_loc[666].f1[1] += -localDW->Derivative2 * rtP.y[666];\r\n  localDW->Traj_loc[667].f1[1] += -localDW->Derivative2 * rtP.y[667];\r\n  localDW->Traj_loc[668].f1[1] += -localDW->Derivative2 * rtP.y[668];\r\n  localDW->Traj_loc[669].f1[1] += -localDW->Derivative2 * rtP.y[669];\r\n  localDW->Traj_loc[670].f1[1] += -localDW->Derivative2 * rtP.y[670];\r\n  localDW->Traj_loc[671].f1[1] += -localDW->Derivative2 * rtP.y[671];\r\n  localDW->Traj_loc[672].f1[1] += -localDW->Derivative2 * rtP.y[672];\r\n  localDW->Traj_loc[673].f1[1] += -localDW->Derivative2 * rtP.y[673];\r\n  localDW->Traj_loc[674].f1[1] += -localDW->Derivative2 * rtP.y[674];\r\n  localDW->Traj_loc[675].f1[1] += -localDW->Derivative2 * rtP.y[675];\r\n  localDW->Traj_loc[676].f1[1] += -localDW->Derivative2 * rtP.y[676];\r\n  localDW->Traj_loc[677].f1[1] += -localDW->Derivative2 * rtP.y[677];\r\n  localDW->Traj_loc[678].f1[1] += -localDW->Derivative2 * rtP.y[678];\r\n  localDW->Traj_loc[679].f1[1] += -localDW->Derivative2 * rtP.y[679];\r\n  localDW->Traj_loc[680].f1[1] += -localDW->Derivative2 * rtP.y[680];\r\n  localDW->Traj_loc[681].f1[1] += -localDW->Derivative2 * rtP.y[681];\r\n  localDW->Traj_loc[682].f1[1] += -localDW->Derivative2 * rtP.y[682];\r\n  localDW->Traj_loc[683].f1[1] += -localDW->Derivative2 * rtP.y[683];\r\n  localDW->Traj_loc[684].f1[1] += -localDW->Derivative2 * rtP.y[684];\r\n  localDW->Traj_loc[685].f1[1] += -localDW->Derivative2 * rtP.y[685];\r\n  localDW->Traj_loc[686].f1[1] += -localDW->Derivative2 * rtP.y[686];\r\n  localDW->Traj_loc[687].f1[1] += -localDW->Derivative2 * rtP.y[687];\r\n  localDW->Traj_loc[688].f1[1] += -localDW->Derivative2 * rtP.y[688];\r\n  localDW->Traj_loc[689].f1[1] += -localDW->Derivative2 * rtP.y[689];\r\n  localDW->Traj_loc[690].f1[1] += -localDW->Derivative2 * rtP.y[690];\r\n  localDW->Traj_loc[691].f1[1] += -localDW->Derivative2 * rtP.y[691];\r\n  localDW->Traj_loc[692].f1[1] += -localDW->Derivative2 * rtP.y[692];\r\n  localDW->Traj_loc[693].f1[1] += -localDW->Derivative2 * rtP.y[693];\r\n  localDW->Traj_loc[694].f1[1] += -localDW->Derivative2 * rtP.y[694];\r\n  localDW->Traj_loc[695].f1[1] += -localDW->Derivative2 * rtP.y[695];\r\n  localDW->Traj_loc[696].f1[1] += -localDW->Derivative2 * rtP.y[696];\r\n  localDW->Traj_loc[697].f1[1] += -localDW->Derivative2 * rtP.y[697];\r\n  localDW->Traj_loc[698].f1[1] += -localDW->Derivative2 * rtP.y[698];\r\n  localDW->Traj_loc[699].f1[1] += -localDW->Derivative2 * rtP.y[699];\r\n  localDW->Traj_loc[700].f1[1] += -localDW->Derivative2 * rtP.y[700];\r\n  localDW->Traj_loc[701].f1[1] += -localDW->Derivative2 * rtP.y[701];\r\n  localDW->Traj_loc[702].f1[1] += -localDW->Derivative2 * rtP.y[702];\r\n  localDW->Traj_loc[703].f1[1] += -localDW->Derivative2 * rtP.y[703];\r\n  localDW->Traj_loc[704].f1[1] += -localDW->Derivative2 * rtP.y[704];\r\n  localDW->Traj_loc[705].f1[1] += -localDW->Derivative2 * rtP.y[705];\r\n  localDW->Traj_loc[706].f1[1] += -localDW->Derivative2 * rtP.y[706];\r\n  localDW->Traj_loc[707].f1[1] += -localDW->Derivative2 * rtP.y[707];\r\n  localDW->Traj_loc[708].f1[1] += -localDW->Derivative2 * rtP.y[708];\r\n  localDW->Traj_loc[709].f1[1] += -localDW->Derivative2 * rtP.y[709];\r\n  localDW->Traj_loc[710].f1[1] += -localDW->Derivative2 * rtP.y[710];\r\n  localDW->Traj_loc[711].f1[1] += -localDW->Derivative2 * rtP.y[711];\r\n  localDW->Traj_loc[712].f1[1] += -localDW->Derivative2 * rtP.y[712];\r\n  localDW->Traj_loc[713].f1[1] += -localDW->Derivative2 * rtP.y[713];\r\n  localDW->Traj_loc[714].f1[1] += -localDW->Derivative2 * rtP.y[714];\r\n  localDW->Traj_loc[715].f1[1] += -localDW->Derivative2 * rtP.y[715];\r\n  localDW->Traj_loc[716].f1[1] += -localDW->Derivative2 * rtP.y[716];\r\n  localDW->Traj_loc[717].f1[1] += -localDW->Derivative2 * rtP.y[717];\r\n  localDW->Traj_loc[718].f1[1] += -localDW->Derivative2 * rtP.y[718];\r\n  localDW->Traj_loc[719].f1[1] += -localDW->Derivative2 * rtP.y[719];\r\n  localDW->Traj_loc[720].f1[1] += -localDW->Derivative2 * rtP.y[720];\r\n  localDW->Traj_loc[721].f1[1] += -localDW->Derivative2 * rtP.y[721];\r\n  localDW->Traj_loc[722].f1[1] += -localDW->Derivative2 * rtP.y[722];\r\n  localDW->Traj_loc[723].f1[1] += -localDW->Derivative2 * rtP.y[723];\r\n  localDW->Traj_loc[724].f1[1] += -localDW->Derivative2 * rtP.y[724];\r\n  localDW->Traj_loc[725].f1[1] += -localDW->Derivative2 * rtP.y[725];\r\n  localDW->Traj_loc[726].f1[1] += -localDW->Derivative2 * rtP.y[726];\r\n  localDW->Traj_loc[727].f1[1] += -localDW->Derivative2 * rtP.y[727];\r\n  localDW->Traj_loc[728].f1[1] += -localDW->Derivative2 * rtP.y[728];\r\n  localDW->Traj_loc[729].f1[1] += -localDW->Derivative2 * rtP.y[729];\r\n  localDW->Traj_loc[730].f1[1] += -localDW->Derivative2 * rtP.y[730];\r\n  localDW->Traj_loc[731].f1[1] += -localDW->Derivative2 * rtP.y[731];\r\n  localDW->Traj_loc[732].f1[1] += -localDW->Derivative2 * rtP.y[732];\r\n  localDW->Traj_loc[733].f1[1] += -localDW->Derivative2 * rtP.y[733];\r\n  localDW->Traj_loc[734].f1[1] += -localDW->Derivative2 * rtP.y[734];\r\n  localDW->Traj_loc[735].f1[1] += -localDW->Derivative2 * rtP.y[735];\r\n  localDW->Traj_loc[736].f1[1] += -localDW->Derivative2 * rtP.y[736];\r\n  localDW->Traj_loc[737].f1[1] += -localDW->Derivative2 * rtP.y[737];\r\n  localDW->Traj_loc[738].f1[1] += -localDW->Derivative2 * rtP.y[738];\r\n  localDW->Traj_loc[739].f1[1] += -localDW->Derivative2 * rtP.y[739];\r\n  localDW->Traj_loc[740].f1[1] += -localDW->Derivative2 * rtP.y[740];\r\n  localDW->Traj_loc[741].f1[1] += -localDW->Derivative2 * rtP.y[741];\r\n  localDW->Traj_loc[742].f1[1] += -localDW->Derivative2 * rtP.y[742];\r\n  localDW->Traj_loc[743].f1[1] += -localDW->Derivative2 * rtP.y[743];\r\n  localDW->Traj_loc[744].f1[1] += -localDW->Derivative2 * rtP.y[744];\r\n  localDW->Traj_loc[745].f1[1] += -localDW->Derivative2 * rtP.y[745];\r\n  localDW->Traj_loc[746].f1[1] += -localDW->Derivative2 * rtP.y[746];\r\n  localDW->Traj_loc[747].f1[1] += -localDW->Derivative2 * rtP.y[747];\r\n  localDW->Traj_loc[748].f1[1] += -localDW->Derivative2 * rtP.y[748];\r\n  localDW->Traj_loc[749].f1[1] += -localDW->Derivative2 * rtP.y[749];\r\n  localDW->Traj_loc[750].f1[1] += -localDW->Derivative2 * rtP.y[750];\r\n  localDW->Traj_loc[751].f1[1] += -localDW->Derivative2 * rtP.y[751];\r\n  localDW->Traj_loc[752].f1[1] += -localDW->Derivative2 * rtP.y[752];\r\n  localDW->Traj_loc[753].f1[1] += -localDW->Derivative2 * rtP.y[753];\r\n  localDW->Traj_loc[754].f1[1] += -localDW->Derivative2 * rtP.y[754];\r\n  localDW->Traj_loc[755].f1[1] += -localDW->Derivative2 * rtP.y[755];\r\n  localDW->Traj_loc[756].f1[1] += -localDW->Derivative2 * rtP.y[756];\r\n  localDW->Traj_loc[757].f1[1] += -localDW->Derivative2 * rtP.y[757];\r\n  localDW->Traj_loc[758].f1[1] += -localDW->Derivative2 * rtP.y[758];\r\n  localDW->Traj_loc[759].f1[1] += -localDW->Derivative2 * rtP.y[759];\r\n  localDW->Traj_loc[760].f1[1] += -localDW->Derivative2 * rtP.y[760];\r\n  localDW->Traj_loc[761].f1[1] += -localDW->Derivative2 * rtP.y[761];\r\n  localDW->Traj_loc[762].f1[1] += -localDW->Derivative2 * rtP.y[762];\r\n  localDW->Traj_loc[763].f1[1] += -localDW->Derivative2 * rtP.y[763];\r\n  localDW->Traj_loc[764].f1[1] += -localDW->Derivative2 * rtP.y[764];\r\n  localDW->Traj_loc[765].f1[1] += -localDW->Derivative2 * rtP.y[765];\r\n  localDW->Traj_loc[766].f1[1] += -localDW->Derivative2 * rtP.y[766];\r\n  localDW->Traj_loc[767].f1[1] += -localDW->Derivative2 * rtP.y[767];\r\n  localDW->Traj_loc[768].f1[1] += -localDW->Derivative2 * rtP.y[768];\r\n  localDW->Traj_loc[769].f1[1] += -localDW->Derivative2 * rtP.y[769];\r\n  localDW->Traj_loc[770].f1[1] += -localDW->Derivative2 * rtP.y[770];\r\n  localDW->Traj_loc[771].f1[1] += -localDW->Derivative2 * rtP.y[771];\r\n  localDW->Traj_loc[772].f1[1] += -localDW->Derivative2 * rtP.y[772];\r\n  localDW->Traj_loc[773].f1[1] += -localDW->Derivative2 * rtP.y[773];\r\n  localDW->Traj_loc[774].f1[1] += -localDW->Derivative2 * rtP.y[774];\r\n  localDW->Traj_loc[775].f1[1] += -localDW->Derivative2 * rtP.y[775];\r\n  localDW->Traj_loc[776].f1[1] += -localDW->Derivative2 * rtP.y[776];\r\n  localDW->Traj_loc[777].f1[1] += -localDW->Derivative2 * rtP.y[777];\r\n  localDW->Traj_loc[778].f1[1] += -localDW->Derivative2 * rtP.y[778];\r\n  localDW->Traj_loc[779].f1[1] += -localDW->Derivative2 * rtP.y[779];\r\n  localDW->Traj_loc[780].f1[1] += -localDW->Derivative2 * rtP.y[780];\r\n  localDW->Traj_loc[781].f1[1] += -localDW->Derivative2 * rtP.y[781];\r\n  localDW->Traj_loc[782].f1[1] += -localDW->Derivative2 * rtP.y[782];\r\n  localDW->Traj_loc[783].f1[1] += -localDW->Derivative2 * rtP.y[783];\r\n  localDW->Traj_loc[784].f1[1] += -localDW->Derivative2 * rtP.y[784];\r\n  localDW->Traj_loc[785].f1[1] += -localDW->Derivative2 * rtP.y[785];\r\n  localDW->Traj_loc[786].f1[1] += -localDW->Derivative2 * rtP.y[786];\r\n  localDW->Traj_loc[787].f1[1] += -localDW->Derivative2 * rtP.y[787];\r\n  localDW->Traj_loc[788].f1[1] += -localDW->Derivative2 * rtP.y[788];\r\n  localDW->Traj_loc[789].f1[1] += -localDW->Derivative2 * rtP.y[789];\r\n  localDW->Traj_loc[790].f1[1] += -localDW->Derivative2 * rtP.y[790];\r\n  localDW->Traj_loc[791].f1[1] += -localDW->Derivative2 * rtP.y[791];\r\n  localDW->Traj_loc[792].f1[1] += -localDW->Derivative2 * rtP.y[792];\r\n  localDW->Traj_loc[793].f1[1] += -localDW->Derivative2 * rtP.y[793];\r\n  localDW->Traj_loc[794].f1[1] += -localDW->Derivative2 * rtP.y[794];\r\n  localDW->Traj_loc[795].f1[1] += -localDW->Derivative2 * rtP.y[795];\r\n  localDW->Traj_loc[796].f1[1] += -localDW->Derivative2 * rtP.y[796];\r\n  localDW->Traj_loc[797].f1[1] += -localDW->Derivative2 * rtP.y[797];\r\n  localDW->Traj_loc[798].f1[1] += -localDW->Derivative2 * rtP.y[798];\r\n  localDW->Traj_loc[799].f1[1] += -localDW->Derivative2 * rtP.y[799];\r\n  localDW->Traj_loc[800].f1[1] += -localDW->Derivative2 * rtP.y[800];\r\n  for (localDW->p1 = 0; localDW->p1 < 5; localDW->p1++) {\r\n    localDW->D_idx_0 = a[localDW->p1];\r\n    localDW->x_ld[localDW->p1] = localDW->D_idx_0 * localDW->Derivative2 +\r\n      localX->Integrator5_CSTATE;\r\n    localDW->y_ld[localDW->p1] = localDW->D_idx_0 * localDW->absx21 +\r\n      localX->Integrator6_CSTATE;\r\n  }\r\n\r\n  localDW->b.f1[0] = localDW->x_ld[0];\r\n  localDW->b.f1[1] = localDW->y_ld[0];\r\n  localDW->c.f1[0] = localDW->x_ld[1];\r\n  localDW->c.f1[1] = localDW->y_ld[1];\r\n  localDW->d.f1[0] = localDW->x_ld[2];\r\n  localDW->d.f1[1] = localDW->y_ld[2];\r\n  localDW->e.f1[0] = localDW->x_ld[3];\r\n  localDW->e.f1[1] = localDW->y_ld[3];\r\n  localDW->f.f1[0] = localDW->x_ld[4];\r\n  localDW->f.f1[1] = localDW->y_ld[4];\r\n  localDW->PP[0] = localDW->b;\r\n  localDW->PP[1] = localDW->c;\r\n  localDW->PP[2] = localDW->d;\r\n  localDW->PP[3] = localDW->e;\r\n  localDW->PP[4] = localDW->f;\r\n  for (localDW->p1 = 0; localDW->p1 < 5; localDW->p1++) {\r\n    localDW->PP_loc[localDW->p1].f1[0] = 0.0;\r\n    localDW->PP_loc[localDW->p1].f1[0] += localDW->rtb_alpha_idx_0 * localDW->\r\n      PP[localDW->p1].f1[0];\r\n    localDW->PP_loc[localDW->p1].f1[0] += localDW->rtb_alpha_idx_2 * localDW->\r\n      PP[localDW->p1].f1[1];\r\n    localDW->PP_loc[localDW->p1].f1[1] = 0.0;\r\n    localDW->PP_loc[localDW->p1].f1[1] += localDW->rtb_alpha_idx_1 * localDW->\r\n      PP[localDW->p1].f1[0];\r\n    localDW->PP_loc[localDW->p1].f1[1] += localDW->rtb_alpha_idx_3 * localDW->\r\n      PP[localDW->p1].f1[1];\r\n    localDW->x_ld[localDW->p1] = 0.0;\r\n    localDW->Derivative2 = 1000.0;\r\n    for (localDW->p2 = 0; localDW->p2 < 801; localDW->p2++) {\r\n      localDW->absx21 = fabs(localDW->Traj_loc[localDW->p2].f1[0] -\r\n        localDW->PP_loc[localDW->p1].f1[0]);\r\n      if (localDW->absx21 < localDW->Derivative2) {\r\n        localDW->D_idx_0 = localDW->Traj_loc[localDW->p2].f1[1] -\r\n          localDW->PP_loc[localDW->p1].f1[1];\r\n        if (fabs(localDW->D_idx_0) < localDW->absx31) {\r\n          localDW->Derivative2 = localDW->absx21;\r\n          localDW->x_ld[localDW->p1] = localDW->D_idx_0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  localDW->absx31 = 0.0;\r\n  for (localDW->p1 = 0; localDW->p1 < 5; localDW->p1++) {\r\n    localDW->absx31 += localDW->x_ld[localDW->p1] * g[localDW->p1];\r\n  }\r\n\r\n  localDW->D_idx_0 = rtP.l1 + rtP.l2;\r\n  localDW->rtb_alpha_idx_0 = *rtyy_ActualVelocityLateralAcceleration *\r\n    *rtyy_ActualVelocityLateralAcceleration;\r\n  localDW->rtb_alpha_idx_1 = localDW->D_idx_0 * localDW->BCD_idx_0;\r\n  *rty_Steeringwheelangle = -((localDW->D_idx_0 - (rtP.l1 * localDW->BCD_idx_0 -\r\n    rtP.l2 * localDW->BCD_idx_0) * (localDW->rtb_alpha_idx_0 * rtP.m) /\r\n    (localDW->rtb_alpha_idx_1 * localDW->BCD_idx_0)) * 2.0 / (((rtP.l2 - rtP.l1 *\r\n    rtP.m * localDW->rtb_alpha_idx_0 / localDW->rtb_alpha_idx_1) * 2.0 + 9.0) *\r\n    9.0)) * localDW->absx31 * 16.0;\r\n\r\n  /* End of MATLAB Function: '<S5>/FWS Controller' */\r\n\r\n  /* Gain: '<S4>/1//mu2' incorporates:\r\n   *  Constant: '<S4>/hzpc2'\r\n   *  Sum: '<S4>/Sum4'\r\n   */\r\n  localDW->zu2_ddot = ((localDW->Ft[1] - localDW->rtb_Fs_idx_1) - rtP.mu2 *\r\n                       rtP.g) * (rtP.sw_zu2 / rtP.mu2);\r\n\r\n  /* Gain: '<S4>/1//mu3' incorporates:\r\n   *  Constant: '<S4>/hzpc3'\r\n   *  Sum: '<S4>/Sum5'\r\n   */\r\n  localDW->zu3_ddot = ((localDW->Ft[2] - localDW->rtb_Fs_idx_2) - rtP.mu3 *\r\n                       rtP.g) * (rtP.sw_zu3 / rtP.mu3);\r\n\r\n  /* Gain: '<S4>/1//mu4' incorporates:\r\n   *  Constant: '<S4>/hzp4'\r\n   *  Sum: '<S4>/Sum6'\r\n   */\r\n  localDW->zu4_ddot = ((localDW->Ft[3] - localDW->Derivative3) - rtP.mu4 * rtP.g)\r\n    * (rtP.sw_zu4 / rtP.mu4);\r\n\r\n  /* Gain: '<S4>/Gain10' incorporates:\r\n   *  Constant: '<S4>/m*g'\r\n   *  Sum: '<S4>/Sum of Elements2'\r\n   *  Sum: '<S4>/Sum7'\r\n   */\r\n  localDW->Gain10 = ((((localDW->rtb_Fs_idx_0 + localDW->rtb_Fs_idx_1) +\r\n                       localDW->rtb_Fs_idx_2) + localDW->Derivative3) - rtP.m *\r\n                     rtP.g) * (rtP.sw_zs / rtP.m);\r\n\r\n  /* Gain: '<S4>/`1//mu1' incorporates:\r\n   *  Constant: '<S4>/hzpc1'\r\n   *  Sum: '<S4>/Sum3'\r\n   */\r\n  localDW->zu1_ddot = ((localDW->Ft[0] - localDW->rtb_Fs_idx_0) - rtP.mu1 *\r\n                       rtP.g) * (rtP.sw_zu1 / rtP.mu1);\r\n  if (rtmIsMajorTimeStep(rtM)) {\r\n    /* MATLAB Function: '<S113>/MATLAB Function' incorporates:\r\n     *  Constant: '<S113>/Constant'\r\n     *  Constant: '<S113>/Constant1'\r\n     *  Constant: '<S113>/Constant2'\r\n     *  Constant: '<S113>/Constant3'\r\n     *  Constant: '<S113>/Constant4'\r\n     */\r\n    localDW->rtb_Fs_idx_0 = -(1.0 / rtP.Tc);\r\n    memset(&localDW->B_c[0], 0, sizeof(real_T) << 4U);\r\n    localDW->B_c[0] = -localDW->rtb_Fs_idx_0;\r\n    localDW->B_c[1] = -0.0;\r\n    localDW->B_c[4] = -0.0;\r\n    localDW->B_c[5] = -0.0;\r\n    localDW->Ft[0] = 1.0;\r\n    localDW->Ft[1] = 0.0;\r\n    localDW->Ft[2] = 0.0;\r\n    localDW->Ft[3] = 1.0;\r\n    localDW->rtb_Fs_idx_1 = rtP.B * rtP.B * 2.0 * 0.69314718055994529 /\r\n      (0.59857471687193387 * rtP.Tc);\r\n    localDW->rtb_Fs_idx_2 = rtP.K * rtP.K;\r\n    for (localDW->p1 = 0; localDW->p1 < 2; localDW->p1++) {\r\n      localDW->rtb_Ft_c[localDW->p1] = 0.0;\r\n      localDW->rtb_Ft_c[localDW->p1] += localDW->Ft[localDW->p1] *\r\n        localDW->rtb_Fs_idx_1;\r\n      localDW->rtb_Ft_c[localDW->p1 + 2] = 0.0;\r\n      localDW->rtb_Ft_c[localDW->p1 + 2] += localDW->Ft[localDW->p1 + 2] *\r\n        localDW->rtb_Fs_idx_2;\r\n      localDW->B_c[localDW->p1 + 8] = 0.0;\r\n      localDW->B_c[localDW->p1 + 8] += localDW->rtb_Ft_c[localDW->p1];\r\n      localDW->B_c[localDW->p1 + 8] += localDW->rtb_Ft_c[localDW->p1 + 2] * 0.0;\r\n      localDW->B_c[localDW->p1 + 12] = 0.0;\r\n      localDW->B_c[localDW->p1 + 12] += localDW->rtb_Ft_c[localDW->p1] * 0.0;\r\n      localDW->B_c[localDW->p1 + 12] += localDW->rtb_Ft_c[localDW->p1 + 2];\r\n    }\r\n\r\n    localDW->B_c[10] = localDW->rtb_Fs_idx_0;\r\n    localDW->B_c[11] = 0.0;\r\n    localDW->B_c[14] = 0.0;\r\n    localDW->B_c[15] = 0.0;\r\n    for (localDW->p1 = 0; localDW->p1 < 16; localDW->p1++) {\r\n      localDW->B_c_m[localDW->p1] = localDW->B_c[localDW->p1] / rtP.Fs;\r\n    }\r\n\r\n    expm(localDW->B_c_m, localDW->B_c, localDW);\r\n    localDW->Phi[0] = localDW->B_c[10];\r\n    localDW->Phi[1] = localDW->B_c[11];\r\n    localDW->Phi[2] = localDW->B_c[14];\r\n    localDW->Phi[3] = localDW->B_c[15];\r\n    localDW->Qbk = localDW->B_c[8];\r\n    localDW->Qkk = localDW->B_c[13];\r\n    localDW->Qnk = rtP.N * rtP.N * rtP.Fs;\r\n\r\n    /* End of MATLAB Function: '<S113>/MATLAB Function' */\r\n\r\n    /* Memory: '<S113>/Memory' */\r\n    localDW->Z_b1 = localDW->Memory_PreviousInput;\r\n\r\n    /* Memory: '<S113>/Memory1' */\r\n    localDW->Z_b2 = localDW->Memory1_PreviousInput;\r\n\r\n    /* MATLAB Function: '<S113>/MATLAB Function1' incorporates:\r\n     *  Constant: '<S113>/Constant'\r\n     */\r\n    localDW->rtb_Fs_idx_0 = 1.0 / rtP.Fs;\r\n    localDW->absx31 = localDW->absx11;\r\n    if (localDW->rtb_Fs_idx_0 == 0.0) {\r\n      if (localDW->absx11 == 0.0) {\r\n        localDW->absx31 = localDW->rtb_Fs_idx_0;\r\n      }\r\n    } else if (rtIsNaN(localDW->absx11)) {\r\n      localDW->absx31 = (rtNaN);\r\n    } else if (rtIsNaN(localDW->rtb_Fs_idx_0)) {\r\n      localDW->absx31 = (rtNaN);\r\n    } else if (rtIsInf(localDW->absx11)) {\r\n      localDW->absx31 = (rtNaN);\r\n    } else if (localDW->absx11 == 0.0) {\r\n      localDW->absx31 = 0.0 / localDW->rtb_Fs_idx_0;\r\n    } else if (rtIsInf(localDW->rtb_Fs_idx_0)) {\r\n      if ((localDW->rtb_Fs_idx_0 < 0.0) != (localDW->absx11 < 0.0)) {\r\n        localDW->absx31 = localDW->rtb_Fs_idx_0;\r\n      }\r\n    } else {\r\n      localDW->absx31 = fmod(localDW->absx11, localDW->rtb_Fs_idx_0);\r\n      rEQ0 = (localDW->absx31 == 0.0);\r\n      if ((!rEQ0) && (localDW->rtb_Fs_idx_0 > floor(localDW->rtb_Fs_idx_0))) {\r\n        localDW->Derivative2 = fabs(localDW->absx11 / localDW->rtb_Fs_idx_0);\r\n        rEQ0 = !(fabs(localDW->Derivative2 - floor(localDW->Derivative2 + 0.5)) >\r\n                 2.2204460492503131E-16 * localDW->Derivative2);\r\n      }\r\n\r\n      if (rEQ0) {\r\n        localDW->absx31 = localDW->rtb_Fs_idx_0 * 0.0;\r\n      } else if ((localDW->absx11 < 0.0) != (localDW->rtb_Fs_idx_0 < 0.0)) {\r\n        localDW->absx31 += localDW->rtb_Fs_idx_0;\r\n      }\r\n    }\r\n\r\n    if (localDW->absx31 == 0.0) {\r\n      localDW->absx31 = sqrt(localDW->Qbk);\r\n      localDW->Derivative2 = sqrt(localDW->Qkk);\r\n      localDW->rtb_Fs_idx_0 = sqrt(localDW->Qnk);\r\n      localDW->absx31 *= randn(localDW);\r\n      localDW->Derivative2 *= randn(localDW);\r\n      localDW->rtb_Fs_idx_0 *= randn(localDW);\r\n      localDW->absx11 = (localDW->Phi[0] * localDW->Z_b1 + localDW->Phi[2] *\r\n                         localDW->Z_b2) + localDW->absx31;\r\n      localDW->D_idx_0 = localDW->absx11;\r\n      localDW->rtb_Fs_idx_1 = localDW->absx11;\r\n      localDW->absx11 = (localDW->Phi[1] * localDW->Z_b1 + localDW->Phi[3] *\r\n                         localDW->Z_b2) + localDW->Derivative2;\r\n      localDW->Z_b1 = localDW->rtb_Fs_idx_1;\r\n      localDW->Z_b2 = localDW->absx11;\r\n      localDW->rtb_Fs_idx_0 += localDW->D_idx_0 + localDW->absx11;\r\n    } else {\r\n      localDW->rtb_Fs_idx_0 = 0.0;\r\n    }\r\n\r\n    /* Gain: '<S3>/Gain' incorporates:\r\n     *  Gain: '<S113>/Gain'\r\n     *  MATLAB Function: '<S113>/MATLAB Function1'\r\n     */\r\n    localDW->radnoise = localP->Gain_Gain * localDW->rtb_Fs_idx_0 *\r\n      localP->Gain_Gain_h;\r\n  }\r\n\r\n  /* Sum: '<S3>/Sum' incorporates:\r\n   *  Integrator: '<S4>/Integrator4'\r\n   */\r\n  localDW->Sum = localX->Integrator4_CSTATE + localDW->radnoise;\r\n}\r\n\r\n/* Update for atomic system: '<Root>/VandD' */\r\nstatic void VandD_Update(RT_MODEL * const rtM, DW_VandD *localDW)\r\n{\r\n  real_T *lastU;\r\n\r\n  /* Update for Derivative: '<S4>/Derivative' */\r\n  if (localDW->TimeStampA == (rtInf)) {\r\n    localDW->TimeStampA = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA;\r\n  } else if (localDW->TimeStampB == (rtInf)) {\r\n    localDW->TimeStampB = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB;\r\n  } else if (localDW->TimeStampA < localDW->TimeStampB) {\r\n    localDW->TimeStampA = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA;\r\n  } else {\r\n    localDW->TimeStampB = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB;\r\n  }\r\n\r\n  *lastU = localDW->Dz1;\r\n\r\n  /* End of Update for Derivative: '<S4>/Derivative' */\r\n\r\n  /* Update for Derivative: '<S4>/Derivative1' */\r\n  if (localDW->TimeStampA_l == (rtInf)) {\r\n    localDW->TimeStampA_l = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_k;\r\n  } else if (localDW->TimeStampB_o == (rtInf)) {\r\n    localDW->TimeStampB_o = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_a;\r\n  } else if (localDW->TimeStampA_l < localDW->TimeStampB_o) {\r\n    localDW->TimeStampA_l = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_k;\r\n  } else {\r\n    localDW->TimeStampB_o = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_a;\r\n  }\r\n\r\n  *lastU = localDW->Dz2;\r\n\r\n  /* End of Update for Derivative: '<S4>/Derivative1' */\r\n\r\n  /* Update for Derivative: '<S4>/Derivative2' */\r\n  if (localDW->TimeStampA_p == (rtInf)) {\r\n    localDW->TimeStampA_p = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_n;\r\n  } else if (localDW->TimeStampB_n == (rtInf)) {\r\n    localDW->TimeStampB_n = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_e;\r\n  } else if (localDW->TimeStampA_p < localDW->TimeStampB_n) {\r\n    localDW->TimeStampA_p = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_n;\r\n  } else {\r\n    localDW->TimeStampB_n = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_e;\r\n  }\r\n\r\n  *lastU = localDW->Dz3;\r\n\r\n  /* End of Update for Derivative: '<S4>/Derivative2' */\r\n\r\n  /* Update for Derivative: '<S4>/Derivative3' */\r\n  if (localDW->TimeStampA_o == (rtInf)) {\r\n    localDW->TimeStampA_o = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_e;\r\n  } else if (localDW->TimeStampB_l == (rtInf)) {\r\n    localDW->TimeStampB_l = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_h;\r\n  } else if (localDW->TimeStampA_o < localDW->TimeStampB_l) {\r\n    localDW->TimeStampA_o = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeA_e;\r\n  } else {\r\n    localDW->TimeStampB_l = rtM->Timing.t[0];\r\n    lastU = &localDW->LastUAtTimeB_h;\r\n  }\r\n\r\n  *lastU = localDW->Dz4;\r\n\r\n  /* End of Update for Derivative: '<S4>/Derivative3' */\r\n  if (rtmIsMajorTimeStep(rtM)) {\r\n    /* Update for Memory: '<S113>/Memory' */\r\n    localDW->Memory_PreviousInput = localDW->Z_b1;\r\n\r\n    /* Update for Memory: '<S113>/Memory1' */\r\n    localDW->Memory1_PreviousInput = localDW->Z_b2;\r\n  }\r\n}\r\n\r\n/* Derivatives for atomic system: '<Root>/VandD' */\r\nstatic void VandD_Deriv(real_T *rty_AngularVelocity, DW_VandD *localDW, P_VandD *\r\n  localP, X_VandD *localX, XDot_VandD *localXdot)\r\n{\r\n  /* Derivatives for Integrator: '<S4>/Integrator20' */\r\n  localXdot->Integrator20_CSTATE = localDW->euler_dot1;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator21' */\r\n  localXdot->Integrator21_CSTATE = localDW->euler_dot2;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator22' */\r\n  localXdot->Integrator22_CSTATE = localDW->euler_dot3;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator' */\r\n  localXdot->Integrator_CSTATE = localDW->Gain6;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator2' */\r\n  localXdot->Integrator2_CSTATE = localDW->Gain3;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator1' */\r\n  localXdot->Integrator1_CSTATE = localDW->Gain5;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator15' */\r\n  localXdot->Integrator15_CSTATE = localDW->zs_dot;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator14' */\r\n  localXdot->Integrator14_CSTATE = localDW->Gain10;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator11' */\r\n  localXdot->Integrator11_CSTATE = localDW->Integrator10;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator10' */\r\n  localXdot->Integrator10_CSTATE = localDW->zu3_ddot;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator13' */\r\n  localXdot->Integrator13_CSTATE = localDW->Integrator12;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator12' */\r\n  localXdot->Integrator12_CSTATE = localDW->zu4_ddot;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator7' */\r\n  localXdot->Integrator7_CSTATE = localDW->Integrator3;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator3' */\r\n  localXdot->Integrator3_CSTATE = localDW->zu1_ddot;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator9' */\r\n  localXdot->Integrator9_CSTATE = localDW->Integrator8;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator8' */\r\n  localXdot->Integrator8_CSTATE = localDW->zu2_ddot;\r\n\r\n  /* Derivatives for Integrator: '<S48>/Integrator' */\r\n  localXdot->Integrator_CSTATE_p = localDW->IProdOut;\r\n\r\n  /* Derivatives for Integrator: '<S43>/Filter' */\r\n  localXdot->Filter_CSTATE = localDW->NProdOut;\r\n\r\n  /* Derivatives for Integrator: '<S96>/Integrator' */\r\n  localXdot->Integrator_CSTATE_b = localDW->IntegralGain;\r\n\r\n  /* Derivatives for Integrator: '<S91>/Filter' */\r\n  localXdot->Filter_CSTATE_n = localDW->FilterCoefficient;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator19' */\r\n  localXdot->Integrator19_CSTATE = localDW->Gain12;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator17' */\r\n  localXdot->Integrator17_CSTATE = localDW->Integrator16;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator16' */\r\n  localXdot->Integrator16_CSTATE = localDW->Gain11;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator18' */\r\n  localXdot->Integrator18_CSTATE = localDW->Integrator19;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator5' */\r\n  localXdot->Integrator5_CSTATE = localDW->Product9[0];\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator6' */\r\n  localXdot->Integrator6_CSTATE = localDW->Product9[1];\r\n\r\n  /* Derivatives for TransferFcn: '<S3>/Transfer Fcn' */\r\n  localXdot->TransferFcn_CSTATE = localP->TransferFcn_A *\r\n    localX->TransferFcn_CSTATE;\r\n  localXdot->TransferFcn_CSTATE += localDW->Sum;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator4' */\r\n  localXdot->Integrator4_CSTATE = *rty_AngularVelocity;\r\n\r\n  /* Derivatives for Integrator: '<S4>/Integrator23' */\r\n  localXdot->Integrator23_CSTATE = localDW->Product9[2];\r\n}\r\n\r\n/* Model step function */\r\nvoid VandD_step(void)\r\n{\r\n  if (rtmIsMajorTimeStep(rtM)) {\r\n    /* set solver stop time */\r\n    rtsiSetSolverStopTime(&rtM->solverInfo,((rtM->Timing.clockTick0+1)*\r\n      rtM->Timing.stepSize0));\r\n  }                                    /* end MajorTimeStep */\r\n\r\n  /* Update absolute time of base rate at minor time step */\r\n  if (rtmIsMinorTimeStep(rtM)) {\r\n    rtM->Timing.t[0] = rtsiGetT(&rtM->solverInfo);\r\n  }\r\n\r\n  /* Outputs for Atomic SubSystem: '<Root>/VandD' */\r\n\r\n  /* Outport: '<Root>/Lateral Velocity' incorporates:\r\n   *  Inport: '<Root>/lamda'\r\n   *  Outport: '<Root>/Steering wheel angle'\r\n   *  Outport: '<Root>/throttle force'\r\n   */\r\n  VandD_g(rtM, rtU.lamda, rtDW.Fy, rtY.throttleforce, &rtY.Steeringwheelangle,\r\n          &rtDW.rtb_vx_m, &rtDW.psi_dot, &rtY.LateralVelocity, &rtDW.VandD_gs,\r\n          &rtP.VandD_gs, &rtX.VandD_gs);\r\n\r\n  /* End of Outputs for SubSystem: '<Root>/VandD' */\r\n\r\n  /* Outport: '<Root>/Fy1' */\r\n  rtY.Fy1 = rtDW.Fy[0];\r\n\r\n  /* Outport: '<Root>/Fy2' */\r\n  rtY.Fy2 = rtDW.Fy[1];\r\n\r\n  /* Outport: '<Root>/Fy3' */\r\n  rtY.Fy3 = rtDW.Fy[2];\r\n\r\n  /* Outport: '<Root>/Fy4' */\r\n  rtY.Fy4 = rtDW.Fy[3];\r\n\r\n  /* Outport: '<Root>/Actual Velocity' */\r\n  rtY.ActualVelocity = rtDW.rtb_vx_m;\r\n\r\n  /* Outport: '<Root>/Lateral Acceleration' */\r\n  rtY.LateralAcceleration = rtDW.rtb_vx_m;\r\n\r\n  /* Outport: '<Root>/Angular Velocity' */\r\n  rtY.AngularVelocity = rtDW.psi_dot;\r\n  if (rtmIsMajorTimeStep(rtM)) {\r\n    /* Update for Atomic SubSystem: '<Root>/VandD' */\r\n    VandD_Update(rtM, &rtDW.VandD_gs);\r\n\r\n    /* End of Update for SubSystem: '<Root>/VandD' */\r\n  }                                    /* end MajorTimeStep */\r\n\r\n  if (rtmIsMajorTimeStep(rtM)) {\r\n    rt_ertODEUpdateContinuousStates(&rtM->solverInfo);\r\n\r\n    /* Update absolute time for base rate */\r\n    /* The \"clockTick0\" counts the number of times the code of this task has\r\n     * been executed. The absolute time is the multiplication of \"clockTick0\"\r\n     * and \"Timing.stepSize0\". Size of \"clockTick0\" ensures timer will not\r\n     * overflow during the application lifespan selected.\r\n     */\r\n    ++rtM->Timing.clockTick0;\r\n    rtM->Timing.t[0] = rtsiGetSolverStopTime(&rtM->solverInfo);\r\n\r\n    {\r\n      /* Update absolute timer for sample time: [0.01s, 0.0s] */\r\n      /* The \"clockTick1\" counts the number of times the code of this task has\r\n       * been executed. The resolution of this integer timer is 0.01, which is the step size\r\n       * of the task. Size of \"clockTick1\" ensures timer will not overflow during the\r\n       * application lifespan selected.\r\n       */\r\n      rtM->Timing.clockTick1++;\r\n    }\r\n  }                                    /* end MajorTimeStep */\r\n}\r\n\r\n/* Derivatives for root system: '<Root>' */\r\nvoid VandD_derivatives(void)\r\n{\r\n  XDot *_rtXdot;\r\n  _rtXdot = ((XDot *) rtM->derivs);\r\n\r\n  /* Derivatives for Atomic SubSystem: '<Root>/VandD' */\r\n  VandD_Deriv(&rtDW.psi_dot, &rtDW.VandD_gs, &rtP.VandD_gs, &rtX.VandD_gs,\r\n              &_rtXdot->VandD_gs);\r\n\r\n  /* End of Derivatives for SubSystem: '<Root>/VandD' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid VandD_initialize(void)\r\n{\r\n  /* Registration code */\r\n\r\n  /* initialize non-finites */\r\n  rt_InitInfAndNaN(sizeof(real_T));\r\n\r\n  {\r\n    /* Setup solver object */\r\n    rtsiSetSimTimeStepPtr(&rtM->solverInfo, &rtM->Timing.simTimeStep);\r\n    rtsiSetTPtr(&rtM->solverInfo, &rtmGetTPtr(rtM));\r\n    rtsiSetStepSizePtr(&rtM->solverInfo, &rtM->Timing.stepSize0);\r\n    rtsiSetdXPtr(&rtM->solverInfo, &rtM->derivs);\r\n    rtsiSetContStatesPtr(&rtM->solverInfo, (real_T **) &rtM->contStates);\r\n    rtsiSetNumContStatesPtr(&rtM->solverInfo, &rtM->Sizes.numContStates);\r\n    rtsiSetNumPeriodicContStatesPtr(&rtM->solverInfo,\r\n      &rtM->Sizes.numPeriodicContStates);\r\n    rtsiSetPeriodicContStateIndicesPtr(&rtM->solverInfo,\r\n      &rtM->periodicContStateIndices);\r\n    rtsiSetPeriodicContStateRangesPtr(&rtM->solverInfo,\r\n      &rtM->periodicContStateRanges);\r\n    rtsiSetErrorStatusPtr(&rtM->solverInfo, (&rtmGetErrorStatus(rtM)));\r\n    rtsiSetRTModelPtr(&rtM->solverInfo, rtM);\r\n  }\r\n\r\n  rtsiSetSimTimeStep(&rtM->solverInfo, MAJOR_TIME_STEP);\r\n  rtM->intgData.y = rtM->odeY;\r\n  rtM->intgData.f[0] = rtM->odeF[0];\r\n  rtM->intgData.f[1] = rtM->odeF[1];\r\n  rtM->intgData.f[2] = rtM->odeF[2];\r\n  rtM->intgData.f[3] = rtM->odeF[3];\r\n  rtM->contStates = ((X *) &rtX);\r\n  rtsiSetSolverData(&rtM->solverInfo, (void *)&rtM->intgData);\r\n  rtsiSetIsMinorTimeStepWithModeChange(&rtM->solverInfo, false);\r\n  rtsiSetSolverName(&rtM->solverInfo,\"ode4\");\r\n  rtmSetTPtr(rtM, &rtM->Timing.tArray[0]);\r\n  rtM->Timing.stepSize0 = 0.01;\r\n\r\n  /* SystemInitialize for Atomic SubSystem: '<Root>/VandD' */\r\n  VandD_Init(&rtDW.VandD_gs, &rtP.VandD_gs, &rtX.VandD_gs);\r\n\r\n  /* End of SystemInitialize for SubSystem: '<Root>/VandD' */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"VandD.h","type":"header","group":"model","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: VandD.h\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_VandD_h_\r\n#define RTW_HEADER_VandD_h_\r\n#ifndef VandD_COMMON_INCLUDES_\r\n#define VandD_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#include \"rtw_continuous.h\"\r\n#include \"rtw_solver.h\"\r\n#endif                                 /* VandD_COMMON_INCLUDES_ */\r\n\r\n#include <string.h>\r\n#include <stddef.h>\r\n\r\n/* Model Code Variants */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetContStateDisabled\r\n#define rtmGetContStateDisabled(rtm)   ((rtm)->contStateDisabled)\r\n#endif\r\n\r\n#ifndef rtmSetContStateDisabled\r\n#define rtmSetContStateDisabled(rtm, val) ((rtm)->contStateDisabled = (val))\r\n#endif\r\n\r\n#ifndef rtmGetContStates\r\n#define rtmGetContStates(rtm)          ((rtm)->contStates)\r\n#endif\r\n\r\n#ifndef rtmSetContStates\r\n#define rtmSetContStates(rtm, val)     ((rtm)->contStates = (val))\r\n#endif\r\n\r\n#ifndef rtmGetContTimeOutputInconsistentWithStateAtMajorStepFlag\r\n#define rtmGetContTimeOutputInconsistentWithStateAtMajorStepFlag(rtm) ((rtm)->CTOutputIncnstWithState)\r\n#endif\r\n\r\n#ifndef rtmSetContTimeOutputInconsistentWithStateAtMajorStepFlag\r\n#define rtmSetContTimeOutputInconsistentWithStateAtMajorStepFlag(rtm, val) ((rtm)->CTOutputIncnstWithState = (val))\r\n#endif\r\n\r\n#ifndef rtmGetDerivCacheNeedsReset\r\n#define rtmGetDerivCacheNeedsReset(rtm) ((rtm)->derivCacheNeedsReset)\r\n#endif\r\n\r\n#ifndef rtmSetDerivCacheNeedsReset\r\n#define rtmSetDerivCacheNeedsReset(rtm, val) ((rtm)->derivCacheNeedsReset = (val))\r\n#endif\r\n\r\n#ifndef rtmGetIntgData\r\n#define rtmGetIntgData(rtm)            ((rtm)->intgData)\r\n#endif\r\n\r\n#ifndef rtmSetIntgData\r\n#define rtmSetIntgData(rtm, val)       ((rtm)->intgData = (val))\r\n#endif\r\n\r\n#ifndef rtmGetOdeF\r\n#define rtmGetOdeF(rtm)                ((rtm)->odeF)\r\n#endif\r\n\r\n#ifndef rtmSetOdeF\r\n#define rtmSetOdeF(rtm, val)           ((rtm)->odeF = (val))\r\n#endif\r\n\r\n#ifndef rtmGetOdeY\r\n#define rtmGetOdeY(rtm)                ((rtm)->odeY)\r\n#endif\r\n\r\n#ifndef rtmSetOdeY\r\n#define rtmSetOdeY(rtm, val)           ((rtm)->odeY = (val))\r\n#endif\r\n\r\n#ifndef rtmGetPeriodicContStateIndices\r\n#define rtmGetPeriodicContStateIndices(rtm) ((rtm)->periodicContStateIndices)\r\n#endif\r\n\r\n#ifndef rtmSetPeriodicContStateIndices\r\n#define rtmSetPeriodicContStateIndices(rtm, val) ((rtm)->periodicContStateIndices = (val))\r\n#endif\r\n\r\n#ifndef rtmGetPeriodicContStateRanges\r\n#define rtmGetPeriodicContStateRanges(rtm) ((rtm)->periodicContStateRanges)\r\n#endif\r\n\r\n#ifndef rtmSetPeriodicContStateRanges\r\n#define rtmSetPeriodicContStateRanges(rtm, val) ((rtm)->periodicContStateRanges = (val))\r\n#endif\r\n\r\n#ifndef rtmGetZCCacheNeedsReset\r\n#define rtmGetZCCacheNeedsReset(rtm)   ((rtm)->zCCacheNeedsReset)\r\n#endif\r\n\r\n#ifndef rtmSetZCCacheNeedsReset\r\n#define rtmSetZCCacheNeedsReset(rtm, val) ((rtm)->zCCacheNeedsReset = (val))\r\n#endif\r\n\r\n#ifndef rtmGetdX\r\n#define rtmGetdX(rtm)                  ((rtm)->derivs)\r\n#endif\r\n\r\n#ifndef rtmSetdX\r\n#define rtmSetdX(rtm, val)             ((rtm)->derivs = (val))\r\n#endif\r\n\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((rtm)->Timing.stopRequestedFlag)\r\n#endif\r\n\r\n#ifndef rtmSetStopRequested\r\n#define rtmSetStopRequested(rtm, val)  ((rtm)->Timing.stopRequestedFlag = (val))\r\n#endif\r\n\r\n#ifndef rtmGetStopRequestedPtr\r\n#define rtmGetStopRequestedPtr(rtm)    (&((rtm)->Timing.stopRequestedFlag))\r\n#endif\r\n\r\n#ifndef rtmGetT\r\n#define rtmGetT(rtm)                   (rtmGetTPtr((rtm))[0])\r\n#endif\r\n\r\n#ifndef rtmGetTPtr\r\n#define rtmGetTPtr(rtm)                ((rtm)->Timing.t)\r\n#endif\r\n\r\n#define VandD_M                        (rtM)\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM RT_MODEL;\r\n\r\n/* Custom Type definition for MATLAB Function: '<S5>/FWS Controller' */\r\n#ifndef struct_tag_RLzPOlY5WWc0uSZcYYgODD\r\n#define struct_tag_RLzPOlY5WWc0uSZcYYgODD\r\n\r\nstruct tag_RLzPOlY5WWc0uSZcYYgODD\r\n{\r\n  real_T f1[2];\r\n};\r\n\r\n#endif                                 /* struct_tag_RLzPOlY5WWc0uSZcYYgODD */\r\n\r\n#ifndef typedef_cell_wrap_0\r\n#define typedef_cell_wrap_0\r\n\r\ntypedef struct tag_RLzPOlY5WWc0uSZcYYgODD cell_wrap_0;\r\n\r\n#endif                                 /* typedef_cell_wrap_0 */\r\n\r\n/* Block signals and states (default storage) for system '<Root>/VandD' */\r\ntypedef struct {\r\n  cell_wrap_0 Traj_loc[801];\r\n  cell_wrap_0 PP_loc[5];\r\n  cell_wrap_0 PP[5];\r\n  cell_wrap_0 b;\r\n  cell_wrap_0 c;\r\n  cell_wrap_0 d;\r\n  cell_wrap_0 e;\r\n  cell_wrap_0 f;\r\n  real_T Product9[3];                  /* '<S4>/Product9' */\r\n  real_T Phi[4];                       /* '<S113>/MATLAB Function' */\r\n  real_T B_c[16];\r\n  real_T B_c_m[16];\r\n  real_T A2[16];\r\n  real_T A4[16];\r\n  real_T A6[16];\r\n  real_T Q[16];\r\n  real_T T[16];\r\n  real_T dv[16];\r\n  real_T b_a[16];\r\n  real_T cBuffer[16];\r\n  real_T aBuffer[16];\r\n  real_T cBuffer_c[16];\r\n  real_T b_x[16];\r\n  real_T x[9];\r\n  real_T b_x_k[9];\r\n  real_T y[9];                         /* '<S4>/MATLAB Function3' */\r\n  real_T x_ld[5];\r\n  real_T y_ld[5];\r\n  real_T Ft[4];                        /* '<S4>/MATLAB Function4' */\r\n  real_T rtb_Ft_c[4];\r\n  real_T rtb_y_b[3];\r\n  real_T rtb_y_p[3];\r\n  real_T rtb_y_c[3];\r\n  real_T rtb_y_f[3];\r\n  real_T V[16];\r\n  real_T A6_g[16];\r\n  real_T work[4];\r\n  real_T tau[3];\r\n  real_T v[3];\r\n  real_T work_g[4];\r\n  real_T zs_dot;                       /* '<S4>/Integrator14' */\r\n  real_T Integrator10;                 /* '<S4>/Integrator10' */\r\n  real_T Integrator12;                 /* '<S4>/Integrator12' */\r\n  real_T Integrator3;                  /* '<S4>/Integrator3' */\r\n  real_T Integrator8;                  /* '<S4>/Integrator8' */\r\n  real_T NProdOut;                     /* '<S51>/NProd Out' */\r\n  real_T FilterCoefficient;            /* '<S99>/Filter Coefficient' */\r\n  real_T Gain6;                        /* '<S4>/Gain6' */\r\n  real_T Integrator19;                 /* '<S4>/Integrator19' */\r\n  real_T Gain11;                       /* '<S4>/Gain11' */\r\n  real_T Gain3;                        /* '<S4>/Gain3' */\r\n  real_T Integrator16;                 /* '<S4>/Integrator16' */\r\n  real_T Gain12;                       /* '<S4>/Gain12' */\r\n  real_T Gain5;                        /* '<S4>/Gain5' */\r\n  real_T IProdOut;                     /* '<S45>/IProd Out' */\r\n  real_T IntegralGain;                 /* '<S93>/Integral Gain' */\r\n  real_T zu2_ddot;                     /* '<S4>/1//mu2' */\r\n  real_T zu3_ddot;                     /* '<S4>/1//mu3' */\r\n  real_T zu4_ddot;                     /* '<S4>/1//mu4' */\r\n  real_T Gain10;                       /* '<S4>/Gain10' */\r\n  real_T zu1_ddot;                     /* '<S4>/`1//mu1' */\r\n  real_T radnoise;                     /* '<S3>/Gain' */\r\n  real_T Sum;                          /* '<S3>/Sum' */\r\n  real_T euler_dot1;                   /* '<S4>/MATLAB Function5' */\r\n  real_T euler_dot2;                   /* '<S4>/MATLAB Function5' */\r\n  real_T euler_dot3;                   /* '<S4>/MATLAB Function5' */\r\n  real_T Dz1;                          /* '<S4>/MATLAB Function' */\r\n  real_T Dz2;                          /* '<S4>/MATLAB Function' */\r\n  real_T Dz3;                          /* '<S4>/MATLAB Function' */\r\n  real_T Dz4;                          /* '<S4>/MATLAB Function' */\r\n  real_T Z_b1;                         /* '<S113>/MATLAB Function1' */\r\n  real_T Z_b2;                         /* '<S113>/MATLAB Function1' */\r\n  real_T Qbk;                          /* '<S113>/MATLAB Function' */\r\n  real_T Qkk;                          /* '<S113>/MATLAB Function' */\r\n  real_T Qnk;                          /* '<S113>/MATLAB Function' */\r\n  real_T TimeStampA;                   /* '<S4>/Derivative' */\r\n  real_T LastUAtTimeA;                 /* '<S4>/Derivative' */\r\n  real_T TimeStampB;                   /* '<S4>/Derivative' */\r\n  real_T LastUAtTimeB;                 /* '<S4>/Derivative' */\r\n  real_T TimeStampA_l;                 /* '<S4>/Derivative1' */\r\n  real_T LastUAtTimeA_k;               /* '<S4>/Derivative1' */\r\n  real_T TimeStampB_o;                 /* '<S4>/Derivative1' */\r\n  real_T LastUAtTimeB_a;               /* '<S4>/Derivative1' */\r\n  real_T TimeStampA_p;                 /* '<S4>/Derivative2' */\r\n  real_T LastUAtTimeA_n;               /* '<S4>/Derivative2' */\r\n  real_T TimeStampB_n;                 /* '<S4>/Derivative2' */\r\n  real_T LastUAtTimeB_e;               /* '<S4>/Derivative2' */\r\n  real_T TimeStampA_o;                 /* '<S4>/Derivative3' */\r\n  real_T LastUAtTimeA_e;               /* '<S4>/Derivative3' */\r\n  real_T TimeStampB_l;                 /* '<S4>/Derivative3' */\r\n  real_T LastUAtTimeB_h;               /* '<S4>/Derivative3' */\r\n  real_T Memory_PreviousInput;         /* '<S113>/Memory' */\r\n  real_T Memory1_PreviousInput;        /* '<S113>/Memory1' */\r\n  real_T absx11;\r\n  real_T absx21;\r\n  real_T absx31;\r\n  real_T Derivative2;                  /* '<S4>/Derivative2' */\r\n  real_T Derivative3;                  /* '<S4>/Derivative3' */\r\n  real_T Fz;\r\n  real_T rtb_Fs_idx_0;\r\n  real_T rtb_Fs_idx_1;\r\n  real_T rtb_Fs_idx_2;\r\n  real_T rtb_alpha_idx_0;\r\n  real_T rtb_alpha_idx_1;\r\n  real_T rtb_alpha_idx_2;\r\n  real_T rtb_alpha_idx_3;\r\n  real_T BCD_idx_0;\r\n  real_T BCD_idx_1;\r\n  real_T BCD_idx_2;\r\n  real_T Fz_idx_0;\r\n  real_T D_idx_0;\r\n  real_T B_idx_1;\r\n  real_T Fz_idx_1;\r\n  real_T D_idx_1;\r\n  real_T B_idx_2;\r\n  real_T Fz_idx_2;\r\n  real_T D_idx_2;\r\n  real_T B_idx_3;\r\n  real_T D_tmp;\r\n  real_T exptj;\r\n  real_T d6;\r\n  real_T eta1;\r\n  real_T b_varargin_1;\r\n  real_T e_m;\r\n  real_T ed2;\r\n  real_T smax;\r\n  real_T s;\r\n  real_T d_n;\r\n  real_T A6_p;\r\n  real_T A4_l;\r\n  real_T tst;\r\n  real_T htmp1;\r\n  real_T ab;\r\n  real_T ba;\r\n  real_T aa;\r\n  real_T h12;\r\n  real_T sn;\r\n  real_T tst_tmp;\r\n  real_T tst_tmp_tmp;\r\n  real_T temp;\r\n  real_T p;\r\n  real_T bcmax;\r\n  real_T bcmis;\r\n  real_T scale;\r\n  real_T z;\r\n  real_T a;\r\n  real_T alpha1;\r\n  real_T xnorm;\r\n  real_T c_j;\r\n  real_T xnorm_d;\r\n  real_T a_g;\r\n  real_T scale_l;\r\n  real_T absxk;\r\n  real_T t;\r\n  real_T x_d;\r\n  real_T c_u;\r\n  real_T temp_d;\r\n  real_T temp_l;\r\n  real_T temp_o;\r\n  int32_T ipiv[4];\r\n  int32_T blockFormat[3];\r\n  int32_T ipiv_b[4];\r\n  int32_T p1;\r\n  int32_T p2;\r\n  int32_T p3;\r\n  int32_T itmp;\r\n  int32_T b_s;\r\n  int32_T e_j;\r\n  int32_T e_i;\r\n  int32_T A2_tmp;\r\n  int32_T i;\r\n  int32_T n;\r\n  int32_T nb;\r\n  int32_T nbitson;\r\n  int32_T b_n;\r\n  int32_T i1;\r\n  int32_T c_tmp;\r\n  int32_T c_tmp_tmp;\r\n  int32_T j;\r\n  int32_T i_n;\r\n  int32_T iaii;\r\n  int32_T knt;\r\n  int32_T lastc;\r\n  int32_T iy;\r\n  int32_T f_b;\r\n  int32_T i_l;\r\n  uint32_T state[2];                   /* '<S113>/MATLAB Function1' */\r\n  uint32_T state_o[2];                 /* '<S113>/MATLAB Function1' */\r\n  uint32_T state_d[625];               /* '<S113>/MATLAB Function1' */\r\n  uint32_T u32[2];\r\n  uint32_T method;                     /* '<S113>/MATLAB Function1' */\r\n  uint32_T method_b;                   /* '<S113>/MATLAB Function1' */\r\n  uint32_T state_g;                    /* '<S113>/MATLAB Function1' */\r\n  int8_T p_h[4];\r\n} DW_VandD;\r\n\r\n/* Continuous states for system '<Root>/VandD' */\r\ntypedef struct {\r\n  real_T Integrator20_CSTATE;          /* '<S4>/Integrator20' */\r\n  real_T Integrator21_CSTATE;          /* '<S4>/Integrator21' */\r\n  real_T Integrator22_CSTATE;          /* '<S4>/Integrator22' */\r\n  real_T Integrator_CSTATE;            /* '<S4>/Integrator' */\r\n  real_T Integrator2_CSTATE;           /* '<S4>/Integrator2' */\r\n  real_T Integrator1_CSTATE;           /* '<S4>/Integrator1' */\r\n  real_T Integrator15_CSTATE;          /* '<S4>/Integrator15' */\r\n  real_T Integrator14_CSTATE;          /* '<S4>/Integrator14' */\r\n  real_T Integrator11_CSTATE;          /* '<S4>/Integrator11' */\r\n  real_T Integrator10_CSTATE;          /* '<S4>/Integrator10' */\r\n  real_T Integrator13_CSTATE;          /* '<S4>/Integrator13' */\r\n  real_T Integrator12_CSTATE;          /* '<S4>/Integrator12' */\r\n  real_T Integrator7_CSTATE;           /* '<S4>/Integrator7' */\r\n  real_T Integrator3_CSTATE;           /* '<S4>/Integrator3' */\r\n  real_T Integrator9_CSTATE;           /* '<S4>/Integrator9' */\r\n  real_T Integrator8_CSTATE;           /* '<S4>/Integrator8' */\r\n  real_T Integrator_CSTATE_p;          /* '<S48>/Integrator' */\r\n  real_T Filter_CSTATE;                /* '<S43>/Filter' */\r\n  real_T Integrator_CSTATE_b;          /* '<S96>/Integrator' */\r\n  real_T Filter_CSTATE_n;              /* '<S91>/Filter' */\r\n  real_T Integrator19_CSTATE;          /* '<S4>/Integrator19' */\r\n  real_T Integrator17_CSTATE;          /* '<S4>/Integrator17' */\r\n  real_T Integrator16_CSTATE;          /* '<S4>/Integrator16' */\r\n  real_T Integrator18_CSTATE;          /* '<S4>/Integrator18' */\r\n  real_T Integrator5_CSTATE;           /* '<S4>/Integrator5' */\r\n  real_T Integrator6_CSTATE;           /* '<S4>/Integrator6' */\r\n  real_T TransferFcn_CSTATE;           /* '<S3>/Transfer Fcn' */\r\n  real_T Integrator4_CSTATE;           /* '<S4>/Integrator4' */\r\n  real_T Integrator23_CSTATE;          /* '<S4>/Integrator23' */\r\n} X_VandD;\r\n\r\n/* State derivatives for system '<Root>/VandD' */\r\ntypedef struct {\r\n  real_T Integrator20_CSTATE;          /* '<S4>/Integrator20' */\r\n  real_T Integrator21_CSTATE;          /* '<S4>/Integrator21' */\r\n  real_T Integrator22_CSTATE;          /* '<S4>/Integrator22' */\r\n  real_T Integrator_CSTATE;            /* '<S4>/Integrator' */\r\n  real_T Integrator2_CSTATE;           /* '<S4>/Integrator2' */\r\n  real_T Integrator1_CSTATE;           /* '<S4>/Integrator1' */\r\n  real_T Integrator15_CSTATE;          /* '<S4>/Integrator15' */\r\n  real_T Integrator14_CSTATE;          /* '<S4>/Integrator14' */\r\n  real_T Integrator11_CSTATE;          /* '<S4>/Integrator11' */\r\n  real_T Integrator10_CSTATE;          /* '<S4>/Integrator10' */\r\n  real_T Integrator13_CSTATE;          /* '<S4>/Integrator13' */\r\n  real_T Integrator12_CSTATE;          /* '<S4>/Integrator12' */\r\n  real_T Integrator7_CSTATE;           /* '<S4>/Integrator7' */\r\n  real_T Integrator3_CSTATE;           /* '<S4>/Integrator3' */\r\n  real_T Integrator9_CSTATE;           /* '<S4>/Integrator9' */\r\n  real_T Integrator8_CSTATE;           /* '<S4>/Integrator8' */\r\n  real_T Integrator_CSTATE_p;          /* '<S48>/Integrator' */\r\n  real_T Filter_CSTATE;                /* '<S43>/Filter' */\r\n  real_T Integrator_CSTATE_b;          /* '<S96>/Integrator' */\r\n  real_T Filter_CSTATE_n;              /* '<S91>/Filter' */\r\n  real_T Integrator19_CSTATE;          /* '<S4>/Integrator19' */\r\n  real_T Integrator17_CSTATE;          /* '<S4>/Integrator17' */\r\n  real_T Integrator16_CSTATE;          /* '<S4>/Integrator16' */\r\n  real_T Integrator18_CSTATE;          /* '<S4>/Integrator18' */\r\n  real_T Integrator5_CSTATE;           /* '<S4>/Integrator5' */\r\n  real_T Integrator6_CSTATE;           /* '<S4>/Integrator6' */\r\n  real_T TransferFcn_CSTATE;           /* '<S3>/Transfer Fcn' */\r\n  real_T Integrator4_CSTATE;           /* '<S4>/Integrator4' */\r\n  real_T Integrator23_CSTATE;          /* '<S4>/Integrator23' */\r\n} XDot_VandD;\r\n\r\n/* State Disabled for system '<Root>/VandD' */\r\ntypedef struct {\r\n  boolean_T Integrator20_CSTATE;       /* '<S4>/Integrator20' */\r\n  boolean_T Integrator21_CSTATE;       /* '<S4>/Integrator21' */\r\n  boolean_T Integrator22_CSTATE;       /* '<S4>/Integrator22' */\r\n  boolean_T Integrator_CSTATE;         /* '<S4>/Integrator' */\r\n  boolean_T Integrator2_CSTATE;        /* '<S4>/Integrator2' */\r\n  boolean_T Integrator1_CSTATE;        /* '<S4>/Integrator1' */\r\n  boolean_T Integrator15_CSTATE;       /* '<S4>/Integrator15' */\r\n  boolean_T Integrator14_CSTATE;       /* '<S4>/Integrator14' */\r\n  boolean_T Integrator11_CSTATE;       /* '<S4>/Integrator11' */\r\n  boolean_T Integrator10_CSTATE;       /* '<S4>/Integrator10' */\r\n  boolean_T Integrator13_CSTATE;       /* '<S4>/Integrator13' */\r\n  boolean_T Integrator12_CSTATE;       /* '<S4>/Integrator12' */\r\n  boolean_T Integrator7_CSTATE;        /* '<S4>/Integrator7' */\r\n  boolean_T Integrator3_CSTATE;        /* '<S4>/Integrator3' */\r\n  boolean_T Integrator9_CSTATE;        /* '<S4>/Integrator9' */\r\n  boolean_T Integrator8_CSTATE;        /* '<S4>/Integrator8' */\r\n  boolean_T Integrator_CSTATE_p;       /* '<S48>/Integrator' */\r\n  boolean_T Filter_CSTATE;             /* '<S43>/Filter' */\r\n  boolean_T Integrator_CSTATE_b;       /* '<S96>/Integrator' */\r\n  boolean_T Filter_CSTATE_n;           /* '<S91>/Filter' */\r\n  boolean_T Integrator19_CSTATE;       /* '<S4>/Integrator19' */\r\n  boolean_T Integrator17_CSTATE;       /* '<S4>/Integrator17' */\r\n  boolean_T Integrator16_CSTATE;       /* '<S4>/Integrator16' */\r\n  boolean_T Integrator18_CSTATE;       /* '<S4>/Integrator18' */\r\n  boolean_T Integrator5_CSTATE;        /* '<S4>/Integrator5' */\r\n  boolean_T Integrator6_CSTATE;        /* '<S4>/Integrator6' */\r\n  boolean_T TransferFcn_CSTATE;        /* '<S3>/Transfer Fcn' */\r\n  boolean_T Integrator4_CSTATE;        /* '<S4>/Integrator4' */\r\n  boolean_T Integrator23_CSTATE;       /* '<S4>/Integrator23' */\r\n} XDis_VandD;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  DW_VandD VandD_gs;                   /* '<Root>/VandD' */\r\n  real_T Fy[4];                        /* '<S4>/MATLAB Function2' */\r\n  real_T psi_dot;                      /* '<S4>/Integrator2' */\r\n  real_T rtb_vx_m;\r\n} DW;\r\n\r\n/* Continuous states (default storage) */\r\ntypedef struct {\r\n  X_VandD VandD_gs;                    /* '<Root>/VandD' */\r\n} X;\r\n\r\n/* State derivatives (default storage) */\r\ntypedef struct {\r\n  XDot_VandD VandD_gs;                 /* '<Root>/VandD' */\r\n} XDot;\r\n\r\n/* State disabled  */\r\ntypedef struct {\r\n  XDis_VandD VandD_gs;                 /* '<Root>/VandD' */\r\n} XDis;\r\n\r\n#ifndef ODE4_INTG\r\n#define ODE4_INTG\r\n\r\n/* ODE4 Integration Data */\r\ntypedef struct {\r\n  real_T *y;                           /* output */\r\n  real_T *f[4];                        /* derivatives */\r\n} ODE4_IntgData;\r\n\r\n#endif\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T lamda[4];                     /* '<Root>/lamda' */\r\n} ExtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T Fy1;                          /* '<Root>/Fy1' */\r\n  real_T Fy2;                          /* '<Root>/Fy2' */\r\n  real_T Fy3;                          /* '<Root>/Fy3' */\r\n  real_T Fy4;                          /* '<Root>/Fy4' */\r\n  real_T throttleforce[4];             /* '<Root>/throttle force' */\r\n  real_T Steeringwheelangle;           /* '<Root>/Steering wheel angle' */\r\n  real_T ActualVelocity;               /* '<Root>/Actual Velocity' */\r\n  real_T LateralAcceleration;          /* '<Root>/Lateral Acceleration' */\r\n  real_T AngularVelocity;              /* '<Root>/Angular Velocity' */\r\n  real_T LateralVelocity;              /* '<Root>/Lateral Velocity' */\r\n} ExtY;\r\n\r\n/* Parameters for system: '<Root>/VandD' */\r\nstruct P_VandD_ {\r\n  real_T PIDController1_D;             /* Mask Parameter: PIDController1_D\r\n                                        * Referenced by: '<S90>/Derivative Gain'\r\n                                        */\r\n  real_T PIDController1_I;             /* Mask Parameter: PIDController1_I\r\n                                        * Referenced by: '<S93>/Integral Gain'\r\n                                        */\r\n  real_T PIDController_InitialConditionForFilter;\r\n                      /* Mask Parameter: PIDController_InitialConditionForFilter\r\n                       * Referenced by: '<S43>/Filter'\r\n                       */\r\n  real_T PIDController1_InitialConditionForFilter;\r\n                     /* Mask Parameter: PIDController1_InitialConditionForFilter\r\n                      * Referenced by: '<S91>/Filter'\r\n                      */\r\n  real_T PIDController_InitialConditionForIntegrator;\r\n                  /* Mask Parameter: PIDController_InitialConditionForIntegrator\r\n                   * Referenced by: '<S48>/Integrator'\r\n                   */\r\n  real_T PIDController1_InitialConditionForIntegrator;\r\n                 /* Mask Parameter: PIDController1_InitialConditionForIntegrator\r\n                  * Referenced by: '<S96>/Integrator'\r\n                  */\r\n  real_T PIDController1_N;             /* Mask Parameter: PIDController1_N\r\n                                        * Referenced by: '<S99>/Filter Coefficient'\r\n                                        */\r\n  real_T PIDController1_P;             /* Mask Parameter: PIDController1_P\r\n                                        * Referenced by: '<S101>/Proportional Gain'\r\n                                        */\r\n  real_T Out1_Y0;                      /* Computed Parameter: Out1_Y0\r\n                                        * Referenced by: '<S10>/Out1'\r\n                                        */\r\n  real_T Out1_Y0_j;                    /* Computed Parameter: Out1_Y0_j\r\n                                        * Referenced by: '<S11>/Out1'\r\n                                        */\r\n  real_T Out1_Y0_c;                    /* Computed Parameter: Out1_Y0_c\r\n                                        * Referenced by: '<S12>/Out1'\r\n                                        */\r\n  real_T Out1_Y0_b;                    /* Computed Parameter: Out1_Y0_b\r\n                                        * Referenced by: '<S13>/Out1'\r\n                                        */\r\n  real_T Integrator20_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator20'\r\n                                        */\r\n  real_T Integrator21_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator21'\r\n                                        */\r\n  real_T Integrator22_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator22'\r\n                                        */\r\n  real_T hzpchzpchzpchzpc_Value[4];    /* Expression: [hzpc,hzpc,hzpc,hzpc]\r\n                                        * Referenced by: '<S4>/[hzpc,hzpc,hzpc,hzpc]'\r\n                                        */\r\n  real_T l1l1l2l2_Value[4];            /* Expression: [+l1, +l1, -l2, -l2]\r\n                                        * Referenced by: '<S4>/[l1,l1,-l2,-l2]'\r\n                                        */\r\n  real_T hzrc_Value[4];                /* Expression: [hzrc,hzrc,hzrc,hzrc]\r\n                                        * Referenced by: '<S4>/hzrc'\r\n                                        */\r\n  real_T b1b2b3b4_Value[4];            /* Expression: [b1, -b2, b3, -b4]\r\n                                        * Referenced by: '<S4>/b1, -b2, b3, -b4'\r\n                                        */\r\n  real_T b1b2b3b4_Value_f[4];          /* Expression: [+b1, -b2, +b3, -b4]\r\n                                        * Referenced by: '<S4>/[b1, -b2, b3, -b4]'\r\n                                        */\r\n  real_T l1l1l2l2_Value_m[4];          /* Expression: [l1, l1, -l2, -l2]\r\n                                        * Referenced by: '<S4>/[l1, l1, -l2, -l2]'\r\n                                        */\r\n  real_T b1b2b3b4_Value_j[4];          /* Expression: [-b1, +b2, -b3, +b4]\r\n                                        * Referenced by: '<S4>/[-b1, b2, -b3, b4]'\r\n                                        */\r\n  real_T Integrator15_IC;              /* Expression: -0.058\r\n                                        * Referenced by: '<S4>/Integrator15'\r\n                                        */\r\n  real_T Integrator14_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator14'\r\n                                        */\r\n  real_T Integrator10_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator10'\r\n                                        */\r\n  real_T Integrator12_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator12'\r\n                                        */\r\n  real_T Integrator3_IC;               /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator3'\r\n                                        */\r\n  real_T Integrator8_IC;               /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator8'\r\n                                        */\r\n  real_T Constant_Value;               /* Expression: 10\r\n                                        * Referenced by: '<S6>/Constant'\r\n                                        */\r\n  real_T Constant1_Value;              /* Expression: 10\r\n                                        * Referenced by: '<S6>/Constant1'\r\n                                        */\r\n  real_T Integrator19_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator19'\r\n                                        */\r\n  real_T Integrator17_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator17'\r\n                                        */\r\n  real_T Integrator16_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator16'\r\n                                        */\r\n  real_T Integrator18_IC;              /* Expression: 0\r\n                                        * Referenced by: '<S4>/Integrator18'\r\n                                        */\r\n  real_T TransferFcn_A;                /* Computed Parameter: TransferFcn_A\r\n                                        * Referenced by: '<S3>/Transfer Fcn'\r\n                                        */\r\n  real_T TransferFcn_C;                /* Computed Parameter: TransferFcn_C\r\n                                        * Referenced by: '<S3>/Transfer Fcn'\r\n                                        */\r\n  real_T Memory_InitialCondition;      /* Expression: 0\r\n                                        * Referenced by: '<S113>/Memory'\r\n                                        */\r\n  real_T Memory1_InitialCondition;     /* Expression: 0\r\n                                        * Referenced by: '<S113>/Memory1'\r\n                                        */\r\n  real_T Gain_Gain;                    /* Expression: pi/180\r\n                                        * Referenced by: '<S113>/Gain'\r\n                                        */\r\n  real_T Gain_Gain_h;                  /* Expression: 1\r\n                                        * Referenced by: '<S3>/Gain'\r\n                                        */\r\n  real_T Constant_Value_l;             /* Expression: 1\r\n                                        * Referenced by: '<S8>/Constant'\r\n                                        */\r\n  real_T Constant1_Value_m;            /* Expression: 1\r\n                                        * Referenced by: '<S8>/Constant1'\r\n                                        */\r\n  real_T Constant_Value_c;             /* Expression: 1\r\n                                        * Referenced by: '<S9>/Constant'\r\n                                        */\r\n  real_T Constant1_Value_g;            /* Expression: 1\r\n                                        * Referenced by: '<S9>/Constant1'\r\n                                        */\r\n  uint8_T ManualSwitch_CurrentSetting;\r\n                              /* Computed Parameter: ManualSwitch_CurrentSetting\r\n                               * Referenced by: '<S6>/Manual Switch'\r\n                               */\r\n};\r\n\r\n/* Parameters for system: '<Root>/VandD' */\r\ntypedef struct P_VandD_ P_VandD;\r\n\r\n/* Parameters (default storage) */\r\nstruct P_ {\r\n  real_T B;                            /* Variable: B\r\n                                        * Referenced by: '<S113>/Constant3'\r\n                                        */\r\n  real_T Fs;                           /* Variable: Fs\r\n                                        * Referenced by: '<S113>/Constant'\r\n                                        */\r\n  real_T Ix;                           /* Variable: Ix\r\n                                        * Referenced by: '<S4>/Gain12'\r\n                                        */\r\n  real_T Ix_Iy;                        /* Variable: Ix_Iy\r\n                                        * Referenced by: '<S4>/Ix-Iy'\r\n                                        */\r\n  real_T Iy;                           /* Variable: Iy\r\n                                        * Referenced by: '<S4>/Gain11'\r\n                                        */\r\n  real_T Iy_Iz;                        /* Variable: Iy_Iz\r\n                                        * Referenced by: '<S4>/Iy-Iz'\r\n                                        */\r\n  real_T Iz;                           /* Variable: Iz\r\n                                        * Referenced by: '<S4>/Gain3'\r\n                                        */\r\n  real_T Iz_Ix;                        /* Variable: Iz_Ix\r\n                                        * Referenced by: '<S4>/Iz-Ix'\r\n                                        */\r\n  real_T K;                            /* Variable: K\r\n                                        * Referenced by: '<S113>/Constant2'\r\n                                        */\r\n  real_T Model;                        /* Variable: Model\r\n                                        * Referenced by: '<S4>/MATLAB Function2'\r\n                                        */\r\n  real_T N;                            /* Variable: N\r\n                                        * Referenced by: '<S113>/Constant1'\r\n                                        */\r\n  real_T THETAo;                       /* Variable: THETAo\r\n                                        * Referenced by: '<S4>/Integrator4'\r\n                                        */\r\n  real_T Tc;                           /* Variable: Tc\r\n                                        * Referenced by: '<S113>/Constant4'\r\n                                        */\r\n  real_T Xo;                           /* Variable: Xo\r\n                                        * Referenced by: '<S4>/Integrator5'\r\n                                        */\r\n  real_T Yo;                           /* Variable: Yo\r\n                                        * Referenced by:\r\n                                        *   '<S4>/Integrator23'\r\n                                        *   '<S4>/Integrator6'\r\n                                        */\r\n  real_T b1;                           /* Variable: b1\r\n                                        * Referenced by: '<S4>/MATLAB Function'\r\n                                        */\r\n  real_T b2;                           /* Variable: b2\r\n                                        * Referenced by: '<S4>/MATLAB Function'\r\n                                        */\r\n  real_T b3;                           /* Variable: b3\r\n                                        * Referenced by: '<S4>/MATLAB Function'\r\n                                        */\r\n  real_T b4;                           /* Variable: b4\r\n                                        * Referenced by: '<S4>/MATLAB Function'\r\n                                        */\r\n  real_T dpc;                          /* Variable: dpc\r\n                                        * Referenced by:\r\n                                        *   '<S4>/drc'\r\n                                        *   '<S4>/m*g*dpc'\r\n                                        */\r\n  real_T drc;                          /* Variable: drc\r\n                                        * Referenced by:\r\n                                        *   '<S4>/dpc'\r\n                                        *   '<S4>/m*g*drc'\r\n                                        */\r\n  real_T g;                            /* Variable: g\r\n                                        * Referenced by:\r\n                                        *   '<S4>/hzp4'\r\n                                        *   '<S4>/hzpc1'\r\n                                        *   '<S4>/hzpc2'\r\n                                        *   '<S4>/hzpc3'\r\n                                        *   '<S4>/m*g'\r\n                                        *   '<S4>/m*g*dpc'\r\n                                        *   '<S4>/m*g*drc'\r\n                                        */\r\n  real_T l1;                           /* Variable: l1\r\n                                        * Referenced by:\r\n                                        *   '<S4>/MATLAB Function'\r\n                                        *   '<S4>/MATLAB Function1'\r\n                                        *   '<S5>/FWS Controller'\r\n                                        */\r\n  real_T l2;                           /* Variable: l2\r\n                                        * Referenced by:\r\n                                        *   '<S4>/MATLAB Function'\r\n                                        *   '<S4>/MATLAB Function1'\r\n                                        *   '<S5>/FWS Controller'\r\n                                        */\r\n  real_T m;                            /* Variable: m\r\n                                        * Referenced by:\r\n                                        *   '<S4>/m*g'\r\n                                        *   '<S4>/m*g*dpc'\r\n                                        *   '<S4>/m*g*drc'\r\n                                        *   '<S4>/Gain1'\r\n                                        *   '<S4>/Gain10'\r\n                                        *   '<S4>/Gain2'\r\n                                        *   '<S4>/Gain5'\r\n                                        *   '<S4>/Gain6'\r\n                                        *   '<S4>/Gain8'\r\n                                        *   '<S5>/FWS Controller'\r\n                                        */\r\n  real_T mu1;                          /* Variable: mu1\r\n                                        * Referenced by:\r\n                                        *   '<S4>/hzpc1'\r\n                                        *   '<S4>/`1//mu1'\r\n                                        */\r\n  real_T mu2;                          /* Variable: mu2\r\n                                        * Referenced by:\r\n                                        *   '<S4>/hzpc2'\r\n                                        *   '<S4>/1//mu2'\r\n                                        */\r\n  real_T mu3;                          /* Variable: mu3\r\n                                        * Referenced by:\r\n                                        *   '<S4>/hzpc3'\r\n                                        *   '<S4>/1//mu3'\r\n                                        */\r\n  real_T mu4;                          /* Variable: mu4\r\n                                        * Referenced by:\r\n                                        *   '<S4>/hzp4'\r\n                                        *   '<S4>/1//mu4'\r\n                                        */\r\n  real_T radius;                       /* Variable: radius\r\n                                        * Referenced by: '<S5>/FWS Controller'\r\n                                        */\r\n  real_T ro;                           /* Variable: ro\r\n                                        * Referenced by: '<S4>/Integrator2'\r\n                                        */\r\n  real_T sw_delta_f;                   /* Variable: sw_delta_f\r\n                                        * Referenced by:\r\n                                        *   '<S8>/Constant2'\r\n                                        *   '<S9>/Constant2'\r\n                                        */\r\n  real_T sw_phi;                       /* Variable: sw_phi\r\n                                        * Referenced by: '<S4>/Gain12'\r\n                                        */\r\n  real_T sw_psi;                       /* Variable: sw_psi\r\n                                        * Referenced by: '<S4>/Gain3'\r\n                                        */\r\n  real_T sw_theta;                     /* Variable: sw_theta\r\n                                        * Referenced by: '<S4>/Gain11'\r\n                                        */\r\n  real_T sw_x;                         /* Variable: sw_x\r\n                                        * Referenced by: '<S4>/Gain6'\r\n                                        */\r\n  real_T sw_y;                         /* Variable: sw_y\r\n                                        * Referenced by: '<S4>/Gain5'\r\n                                        */\r\n  real_T sw_zs;                        /* Variable: sw_zs\r\n                                        * Referenced by: '<S4>/Gain10'\r\n                                        */\r\n  real_T sw_zu1;                       /* Variable: sw_zu1\r\n                                        * Referenced by: '<S4>/`1//mu1'\r\n                                        */\r\n  real_T sw_zu2;                       /* Variable: sw_zu2\r\n                                        * Referenced by: '<S4>/1//mu2'\r\n                                        */\r\n  real_T sw_zu3;                       /* Variable: sw_zu3\r\n                                        * Referenced by: '<S4>/1//mu3'\r\n                                        */\r\n  real_T sw_zu4;                       /* Variable: sw_zu4\r\n                                        * Referenced by: '<S4>/1//mu4'\r\n                                        */\r\n  real_T vxo;                          /* Variable: vxo\r\n                                        * Referenced by: '<S4>/Integrator'\r\n                                        */\r\n  real_T vyo;                          /* Variable: vyo\r\n                                        * Referenced by: '<S4>/Integrator1'\r\n                                        */\r\n  real_T x[801];                       /* Variable: x\r\n                                        * Referenced by: '<S5>/FWS Controller'\r\n                                        */\r\n  real_T y[801];                       /* Variable: y\r\n                                        * Referenced by: '<S5>/FWS Controller'\r\n                                        */\r\n  real_T zu1_0;                        /* Variable: zu1_0\r\n                                        * Referenced by: '<S4>/Integrator7'\r\n                                        */\r\n  real_T zu2_0;                        /* Variable: zu2_0\r\n                                        * Referenced by: '<S4>/Integrator9'\r\n                                        */\r\n  real_T zu3_0;                        /* Variable: zu3_0\r\n                                        * Referenced by: '<S4>/Integrator11'\r\n                                        */\r\n  real_T zu4_0;                        /* Variable: zu4_0\r\n                                        * Referenced by: '<S4>/Integrator13'\r\n                                        */\r\n  P_VandD VandD_gs;                    /* '<Root>/VandD' */\r\n};\r\n\r\n/* Parameters (default storage) */\r\ntypedef struct P_ P;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM {\r\n  const char_T *errorStatus;\r\n  RTWSolverInfo solverInfo;\r\n  X *contStates;\r\n  int_T *periodicContStateIndices;\r\n  real_T *periodicContStateRanges;\r\n  real_T *derivs;\r\n  boolean_T *contStateDisabled;\r\n  boolean_T zCCacheNeedsReset;\r\n  boolean_T derivCacheNeedsReset;\r\n  boolean_T CTOutputIncnstWithState;\r\n  real_T odeY[29];\r\n  real_T odeF[4][29];\r\n  ODE4_IntgData intgData;\r\n\r\n  /*\r\n   * Sizes:\r\n   * The following substructure contains sizes information\r\n   * for many of the model attributes such as inputs, outputs,\r\n   * dwork, sample times, etc.\r\n   */\r\n  struct {\r\n    int_T numContStates;\r\n    int_T numPeriodicContStates;\r\n    int_T numSampTimes;\r\n  } Sizes;\r\n\r\n  /*\r\n   * Timing:\r\n   * The following substructure contains information regarding\r\n   * the timing information for the model.\r\n   */\r\n  struct {\r\n    uint32_T clockTick0;\r\n    time_T stepSize0;\r\n    uint32_T clockTick1;\r\n    SimTimeStep simTimeStep;\r\n    boolean_T stopRequestedFlag;\r\n    time_T *t;\r\n    time_T tArray[2];\r\n  } Timing;\r\n};\r\n\r\n/* Block parameters (default storage) */\r\nextern P rtP;\r\n\r\n/* Continuous states (default storage) */\r\nextern X rtX;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY rtY;\r\n\r\n/* Model entry point functions */\r\nextern void VandD_initialize(void);\r\nextern void VandD_step(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL *const rtM;\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<S5>/From Workspace' : Unused code path elimination\r\n * Block '<S8>/Product' : Unused code path elimination\r\n * Block '<S8>/Product1' : Unused code path elimination\r\n * Block '<S8>/Sum' : Unused code path elimination\r\n * Block '<S9>/Product' : Unused code path elimination\r\n * Block '<S9>/Product1' : Unused code path elimination\r\n * Block '<S9>/Sum' : Unused code path elimination\r\n * Block '<S6>/Constant2' : Unused code path elimination\r\n * Block '<S3>/Scope' : Unused code path elimination\r\n * Block '<S4>/Fs1' : Unused code path elimination\r\n * Block '<S4>/Fs10' : Unused code path elimination\r\n * Block '<S4>/Fs11' : Unused code path elimination\r\n * Block '<S4>/Fs12' : Unused code path elimination\r\n * Block '<S4>/Fs17' : Unused code path elimination\r\n * Block '<S4>/Fs2' : Unused code path elimination\r\n * Block '<S4>/Fs3' : Unused code path elimination\r\n * Block '<S4>/Fs4' : Unused code path elimination\r\n * Block '<S4>/Fs5' : Unused code path elimination\r\n * Block '<S4>/Fs6' : Unused code path elimination\r\n * Block '<S4>/Fs7' : Unused code path elimination\r\n * Block '<S4>/Scope' : Unused code path elimination\r\n * Block '<S4>/Scope1' : Unused code path elimination\r\n * Block '<S4>/Scope2' : Unused code path elimination\r\n * Block '<S4>/Scope3' : Unused code path elimination\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('MalaksModelSub/VandD')    - opens subsystem MalaksModelSub/VandD\r\n * hilite_system('MalaksModelSub/VandD/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'MalaksModelSub'\r\n * '<S1>'   : 'MalaksModelSub/VandD'\r\n * '<S2>'   : 'MalaksModelSub/VandD/Driver Subsystem'\r\n * '<S3>'   : 'MalaksModelSub/VandD/Orientation Gyro'\r\n * '<S4>'   : 'MalaksModelSub/VandD/Vehicle model'\r\n * '<S5>'   : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control'\r\n * '<S6>'   : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control'\r\n * '<S7>'   : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/FWS Controller'\r\n * '<S8>'   : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem'\r\n * '<S9>'   : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem1'\r\n * '<S10>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem/If Action Subsystem'\r\n * '<S11>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem/If Action Subsystem1'\r\n * '<S12>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem1/If Action Subsystem'\r\n * '<S13>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Steering Control/Subsystem1/If Action Subsystem1'\r\n * '<S14>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/MATLAB Function'\r\n * '<S15>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller'\r\n * '<S16>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1'\r\n * '<S17>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Anti-windup'\r\n * '<S18>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/D Gain'\r\n * '<S19>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Filter'\r\n * '<S20>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Filter ICs'\r\n * '<S21>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/I Gain'\r\n * '<S22>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Ideal P Gain'\r\n * '<S23>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Ideal P Gain Fdbk'\r\n * '<S24>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Integrator'\r\n * '<S25>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Integrator ICs'\r\n * '<S26>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/N Copy'\r\n * '<S27>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/N Gain'\r\n * '<S28>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/P Copy'\r\n * '<S29>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Parallel P Gain'\r\n * '<S30>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Reset Signal'\r\n * '<S31>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Saturation'\r\n * '<S32>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Saturation Fdbk'\r\n * '<S33>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Sum'\r\n * '<S34>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Sum Fdbk'\r\n * '<S35>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tracking Mode'\r\n * '<S36>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tracking Mode Sum'\r\n * '<S37>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tsamp - Integral'\r\n * '<S38>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tsamp - Ngain'\r\n * '<S39>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/postSat Signal'\r\n * '<S40>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/preSat Signal'\r\n * '<S41>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Anti-windup/Passthrough'\r\n * '<S42>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/D Gain/External Parameters'\r\n * '<S43>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Filter/Cont. Filter'\r\n * '<S44>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Filter ICs/Internal IC - Filter'\r\n * '<S45>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/I Gain/External Parameters'\r\n * '<S46>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Ideal P Gain/Passthrough'\r\n * '<S47>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Ideal P Gain Fdbk/Disabled'\r\n * '<S48>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Integrator/Continuous'\r\n * '<S49>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Integrator ICs/Internal IC'\r\n * '<S50>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/N Copy/Disabled'\r\n * '<S51>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/N Gain/External Parameters'\r\n * '<S52>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/P Copy/Disabled'\r\n * '<S53>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Parallel P Gain/External Parameters'\r\n * '<S54>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Reset Signal/Disabled'\r\n * '<S55>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Saturation/Passthrough'\r\n * '<S56>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Saturation Fdbk/Disabled'\r\n * '<S57>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Sum/Sum_PID'\r\n * '<S58>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Sum Fdbk/Disabled'\r\n * '<S59>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tracking Mode/Disabled'\r\n * '<S60>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tracking Mode Sum/Passthrough'\r\n * '<S61>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tsamp - Integral/Passthrough'\r\n * '<S62>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/Tsamp - Ngain/Passthrough'\r\n * '<S63>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/postSat Signal/Forward_Path'\r\n * '<S64>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller/preSat Signal/Forward_Path'\r\n * '<S65>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Anti-windup'\r\n * '<S66>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/D Gain'\r\n * '<S67>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Filter'\r\n * '<S68>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Filter ICs'\r\n * '<S69>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/I Gain'\r\n * '<S70>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Ideal P Gain'\r\n * '<S71>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Ideal P Gain Fdbk'\r\n * '<S72>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Integrator'\r\n * '<S73>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Integrator ICs'\r\n * '<S74>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/N Copy'\r\n * '<S75>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/N Gain'\r\n * '<S76>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/P Copy'\r\n * '<S77>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Parallel P Gain'\r\n * '<S78>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Reset Signal'\r\n * '<S79>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Saturation'\r\n * '<S80>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Saturation Fdbk'\r\n * '<S81>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Sum'\r\n * '<S82>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Sum Fdbk'\r\n * '<S83>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tracking Mode'\r\n * '<S84>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tracking Mode Sum'\r\n * '<S85>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tsamp - Integral'\r\n * '<S86>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tsamp - Ngain'\r\n * '<S87>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/postSat Signal'\r\n * '<S88>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/preSat Signal'\r\n * '<S89>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Anti-windup/Passthrough'\r\n * '<S90>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/D Gain/Internal Parameters'\r\n * '<S91>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Filter/Cont. Filter'\r\n * '<S92>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S93>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/I Gain/Internal Parameters'\r\n * '<S94>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S95>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S96>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Integrator/Continuous'\r\n * '<S97>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Integrator ICs/Internal IC'\r\n * '<S98>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/N Copy/Disabled'\r\n * '<S99>'  : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/N Gain/Internal Parameters'\r\n * '<S100>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/P Copy/Disabled'\r\n * '<S101>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S102>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Reset Signal/Disabled'\r\n * '<S103>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Saturation/Passthrough'\r\n * '<S104>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S105>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Sum/Sum_PID'\r\n * '<S106>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Sum Fdbk/Disabled'\r\n * '<S107>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tracking Mode/Disabled'\r\n * '<S108>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S109>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tsamp - Integral/Passthrough'\r\n * '<S110>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S111>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/postSat Signal/Forward_Path'\r\n * '<S112>' : 'MalaksModelSub/VandD/Driver Subsystem/Driver Throttle Control/PID Controller1/preSat Signal/Forward_Path'\r\n * '<S113>' : 'MalaksModelSub/VandD/Orientation Gyro/Allan Noise'\r\n * '<S114>' : 'MalaksModelSub/VandD/Orientation Gyro/Allan Noise/MATLAB Function'\r\n * '<S115>' : 'MalaksModelSub/VandD/Orientation Gyro/Allan Noise/MATLAB Function1'\r\n * '<S116>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function'\r\n * '<S117>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function1'\r\n * '<S118>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function2'\r\n * '<S119>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function3'\r\n * '<S120>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function4'\r\n * '<S121>' : 'MalaksModelSub/VandD/Vehicle model/MATLAB Function5'\r\n */\r\n#endif                                 /* RTW_HEADER_VandD_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"VandD_data.c","type":"source","group":"data","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Data files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: VandD_data.c\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"VandD.h\"\r\n\r\n/* Block parameters (default storage) */\r\nP rtP = {\r\n  /* Variable: B\r\n   * Referenced by: '<S113>/Constant3'\r\n   */\r\n  0.00416,\r\n\r\n  /* Variable: Fs\r\n   * Referenced by: '<S113>/Constant'\r\n   */\r\n  100.0,\r\n\r\n  /* Variable: Ix\r\n   * Referenced by: '<S4>/Gain12'\r\n   */\r\n  616.00993684887271,\r\n\r\n  /* Variable: Ix_Iy\r\n   * Referenced by: '<S4>/Ix-Iy'\r\n   */\r\n  -852.92722689800007,\r\n\r\n  /* Variable: Iy\r\n   * Referenced by: '<S4>/Gain11'\r\n   */\r\n  1468.9371637468728,\r\n\r\n  /* Variable: Iy_Iz\r\n   * Referenced by: '<S4>/Iy-Iz'\r\n   */\r\n  281.93716374687278,\r\n\r\n  /* Variable: Iz\r\n   * Referenced by: '<S4>/Gain3'\r\n   */\r\n  1187.0,\r\n\r\n  /* Variable: Iz_Ix\r\n   * Referenced by: '<S4>/Iz-Ix'\r\n   */\r\n  570.99006315112729,\r\n\r\n  /* Variable: K\r\n   * Referenced by: '<S113>/Constant2'\r\n   */\r\n  0.0014,\r\n\r\n  /* Variable: Model\r\n   * Referenced by: '<S4>/MATLAB Function2'\r\n   */\r\n  3.0,\r\n\r\n  /* Variable: N\r\n   * Referenced by: '<S113>/Constant1'\r\n   */\r\n  0.00166667,\r\n\r\n  /* Variable: THETAo\r\n   * Referenced by: '<S4>/Integrator4'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Tc\r\n   * Referenced by: '<S113>/Constant4'\r\n   */\r\n  32.0,\r\n\r\n  /* Variable: Xo\r\n   * Referenced by: '<S4>/Integrator5'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Yo\r\n   * Referenced by:\r\n   *   '<S4>/Integrator23'\r\n   *   '<S4>/Integrator6'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: b1\r\n   * Referenced by: '<S4>/MATLAB Function'\r\n   */\r\n  0.776,\r\n\r\n  /* Variable: b2\r\n   * Referenced by: '<S4>/MATLAB Function'\r\n   */\r\n  0.776,\r\n\r\n  /* Variable: b3\r\n   * Referenced by: '<S4>/MATLAB Function'\r\n   */\r\n  0.78,\r\n\r\n  /* Variable: b4\r\n   * Referenced by: '<S4>/MATLAB Function'\r\n   */\r\n  0.78,\r\n\r\n  /* Variable: dpc\r\n   * Referenced by:\r\n   *   '<S4>/drc'\r\n   *   '<S4>/m*g*dpc'\r\n   */\r\n  0.48781449179999997,\r\n\r\n  /* Variable: drc\r\n   * Referenced by:\r\n   *   '<S4>/dpc'\r\n   *   '<S4>/m*g*drc'\r\n   */\r\n  0.48781449179999997,\r\n\r\n  /* Variable: g\r\n   * Referenced by:\r\n   *   '<S4>/hzp4'\r\n   *   '<S4>/hzpc1'\r\n   *   '<S4>/hzpc2'\r\n   *   '<S4>/hzpc3'\r\n   *   '<S4>/m*g'\r\n   *   '<S4>/m*g*dpc'\r\n   *   '<S4>/m*g*drc'\r\n   */\r\n  9.81,\r\n\r\n  /* Variable: l1\r\n   * Referenced by:\r\n   *   '<S4>/MATLAB Function'\r\n   *   '<S4>/MATLAB Function1'\r\n   *   '<S5>/FWS Controller'\r\n   */\r\n  1.12695753,\r\n\r\n  /* Variable: l2\r\n   * Referenced by:\r\n   *   '<S4>/MATLAB Function'\r\n   *   '<S4>/MATLAB Function1'\r\n   *   '<S5>/FWS Controller'\r\n   */\r\n  1.59304247,\r\n\r\n  /* Variable: m\r\n   * Referenced by:\r\n   *   '<S4>/m*g'\r\n   *   '<S4>/m*g*dpc'\r\n   *   '<S4>/m*g*drc'\r\n   *   '<S4>/Gain1'\r\n   *   '<S4>/Gain10'\r\n   *   '<S4>/Gain2'\r\n   *   '<S4>/Gain5'\r\n   *   '<S4>/Gain6'\r\n   *   '<S4>/Gain8'\r\n   *   '<S5>/FWS Controller'\r\n   */\r\n  1609.23,\r\n\r\n  /* Variable: mu1\r\n   * Referenced by:\r\n   *   '<S4>/hzpc1'\r\n   *   '<S4>/`1//mu1'\r\n   */\r\n  49.5,\r\n\r\n  /* Variable: mu2\r\n   * Referenced by:\r\n   *   '<S4>/hzpc2'\r\n   *   '<S4>/1//mu2'\r\n   */\r\n  49.5,\r\n\r\n  /* Variable: mu3\r\n   * Referenced by:\r\n   *   '<S4>/hzpc3'\r\n   *   '<S4>/1//mu3'\r\n   */\r\n  42.0,\r\n\r\n  /* Variable: mu4\r\n   * Referenced by:\r\n   *   '<S4>/hzp4'\r\n   *   '<S4>/1//mu4'\r\n   */\r\n  42.0,\r\n\r\n  /* Variable: radius\r\n   * Referenced by: '<S5>/FWS Controller'\r\n   */\r\n  60.0,\r\n\r\n  /* Variable: ro\r\n   * Referenced by: '<S4>/Integrator2'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: sw_delta_f\r\n   * Referenced by:\r\n   *   '<S8>/Constant2'\r\n   *   '<S9>/Constant2'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_phi\r\n   * Referenced by: '<S4>/Gain12'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_psi\r\n   * Referenced by: '<S4>/Gain3'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_theta\r\n   * Referenced by: '<S4>/Gain11'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_x\r\n   * Referenced by: '<S4>/Gain6'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_y\r\n   * Referenced by: '<S4>/Gain5'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_zs\r\n   * Referenced by: '<S4>/Gain10'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_zu1\r\n   * Referenced by: '<S4>/`1//mu1'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_zu2\r\n   * Referenced by: '<S4>/1//mu2'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_zu3\r\n   * Referenced by: '<S4>/1//mu3'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: sw_zu4\r\n   * Referenced by: '<S4>/1//mu4'\r\n   */\r\n  1.0,\r\n\r\n  /* Variable: vxo\r\n   * Referenced by: '<S4>/Integrator'\r\n   */\r\n  10.0,\r\n\r\n  /* Variable: vyo\r\n   * Referenced by: '<S4>/Integrator1'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: x\r\n   * Referenced by: '<S5>/FWS Controller'\r\n   */\r\n  { 0.0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0, 3.25,\r\n    3.5, 3.75, 4.0, 4.25, 4.5, 4.75, 5.0, 5.25, 5.5, 5.75, 6.0, 6.25, 6.5, 6.75,\r\n    7.0, 7.25, 7.5, 7.75, 8.0, 8.25, 8.5, 8.75, 9.0, 9.25, 9.5, 9.75, 10.0,\r\n    10.25, 10.5, 10.75, 11.0, 11.25, 11.5, 11.75, 12.0, 12.25, 12.5, 12.75, 13.0,\r\n    13.25, 13.5, 13.75, 14.0, 14.25, 14.5, 14.75, 15.0, 15.25, 15.5, 15.75, 16.0,\r\n    16.25, 16.5, 16.75, 17.0, 17.25, 17.5, 17.75, 18.0, 18.25, 18.5, 18.75, 19.0,\r\n    19.25, 19.5, 19.75, 20.0, 20.25, 20.5, 20.75, 21.0, 21.25, 21.5, 21.75, 22.0,\r\n    22.25, 22.5, 22.75, 23.0, 23.25, 23.5, 23.75, 24.0, 24.25, 24.5, 24.75, 25.0,\r\n    25.25, 25.5, 25.75, 26.0, 26.25, 26.5, 26.75, 27.0, 27.25, 27.5, 27.75, 28.0,\r\n    28.25, 28.5, 28.75, 29.0, 29.25, 29.5, 29.75, 30.0, 30.25, 30.5, 30.75, 31.0,\r\n    31.25, 31.5, 31.75, 32.0, 32.25, 32.5, 32.75, 33.0, 33.25, 33.5, 33.75, 34.0,\r\n    34.25, 34.5, 34.75, 35.0, 35.25, 35.5, 35.75, 36.0, 36.25, 36.5, 36.75, 37.0,\r\n    37.25, 37.5, 37.75, 38.0, 38.25, 38.5, 38.75, 39.0, 39.25, 39.5, 39.75, 40.0,\r\n    40.25, 40.5, 40.75, 41.0, 41.25, 41.5, 41.75, 42.0, 42.25, 42.5, 42.75, 43.0,\r\n    43.25, 43.5, 43.75, 44.0, 44.25, 44.5, 44.75, 45.0, 45.25, 45.5, 45.75, 46.0,\r\n    46.25, 46.5, 46.75, 47.0, 47.25, 47.5, 47.75, 48.0, 48.25, 48.5, 48.75, 49.0,\r\n    49.25, 49.5, 49.75, 50.0, 50.25, 50.5, 50.75, 51.0, 51.25, 51.5, 51.75, 52.0,\r\n    52.25, 52.5, 52.75, 53.0, 53.25, 53.5, 53.75, 54.0, 54.25, 54.5, 54.75, 55.0,\r\n    55.25, 55.5, 55.75, 56.0, 56.25, 56.5, 56.75, 57.0, 57.25, 57.5, 57.75, 58.0,\r\n    58.25, 58.5, 58.75, 59.0, 59.25, 59.5, 59.75, 60.0, 60.25, 60.5, 60.75, 61.0,\r\n    61.25, 61.5, 61.75, 62.0, 62.25, 62.5, 62.75, 63.0, 63.25, 63.5, 63.75, 64.0,\r\n    64.25, 64.5, 64.75, 65.0, 65.25, 65.5, 65.75, 66.0, 66.25, 66.5, 66.75, 67.0,\r\n    67.25, 67.5, 67.75, 68.0, 68.25, 68.5, 68.75, 69.0, 69.25, 69.5, 69.75, 70.0,\r\n    70.25, 70.5, 70.75, 71.0, 71.25, 71.5, 71.75, 72.0, 72.25, 72.5, 72.75, 73.0,\r\n    73.25, 73.5, 73.75, 74.0, 74.25, 74.5, 74.75, 75.0, 75.25, 75.5, 75.75, 76.0,\r\n    76.25, 76.5, 76.75, 77.0, 77.25, 77.5, 77.75, 78.0, 78.25, 78.5, 78.75, 79.0,\r\n    79.25, 79.5, 79.75, 80.0, 80.25, 80.5, 80.75, 81.0, 81.25, 81.5, 81.75, 82.0,\r\n    82.25, 82.5, 82.75, 83.0, 83.25, 83.5, 83.75, 84.0, 84.25, 84.5, 84.75, 85.0,\r\n    85.25, 85.5, 85.75, 86.0, 86.25, 86.5, 86.75, 87.0, 87.25, 87.5, 87.75, 88.0,\r\n    88.25, 88.5, 88.75, 89.0, 89.25, 89.5, 89.75, 90.0, 90.25, 90.5, 90.75, 91.0,\r\n    91.25, 91.5, 91.75, 92.0, 92.25, 92.5, 92.75, 93.0, 93.25, 93.5, 93.75, 94.0,\r\n    94.25, 94.5, 94.75, 95.0, 95.25, 95.5, 95.75, 96.0, 96.25, 96.5, 96.75, 97.0,\r\n    97.25, 97.5, 97.75, 98.0, 98.25, 98.5, 98.75, 99.0, 99.25, 99.5, 99.75,\r\n    100.0, 100.25, 100.5, 100.75, 101.0, 101.25, 101.5, 101.75, 102.0, 102.25,\r\n    102.5, 102.75, 103.0, 103.25, 103.5, 103.75, 104.0, 104.25, 104.5, 104.75,\r\n    105.0, 105.25, 105.5, 105.75, 106.0, 106.25, 106.5, 106.75, 107.0, 107.25,\r\n    107.5, 107.75, 108.0, 108.25, 108.5, 108.75, 109.0, 109.25, 109.5, 109.75,\r\n    110.0, 110.25, 110.5, 110.75, 111.0, 111.25, 111.5, 111.75, 112.0, 112.25,\r\n    112.5, 112.75, 113.0, 113.25, 113.5, 113.75, 114.0, 114.25, 114.5, 114.75,\r\n    115.0, 115.25, 115.5, 115.75, 116.0, 116.25, 116.5, 116.75, 117.0, 117.25,\r\n    117.5, 117.75, 118.0, 118.25, 118.5, 118.75, 119.0, 119.25, 119.5, 119.75,\r\n    120.0, 120.25, 120.5, 120.75, 121.0, 121.25, 121.5, 121.75, 122.0, 122.25,\r\n    122.5, 122.75, 123.0, 123.25, 123.5, 123.75, 124.0, 124.25, 124.5, 124.75,\r\n    125.0, 125.25, 125.5, 125.75, 126.0, 126.25, 126.5, 126.75, 127.0, 127.25,\r\n    127.5, 127.75, 128.0, 128.25, 128.5, 128.75, 129.0, 129.25, 129.5, 129.75,\r\n    130.0, 130.25, 130.5, 130.75, 131.0, 131.25, 131.5, 131.75, 132.0, 132.25,\r\n    132.5, 132.75, 133.0, 133.25, 133.5, 133.75, 134.0, 134.25, 134.5, 134.75,\r\n    135.0, 135.25, 135.5, 135.75, 136.0, 136.25, 136.5, 136.75, 137.0, 137.25,\r\n    137.5, 137.75, 138.0, 138.25, 138.5, 138.75, 139.0, 139.25, 139.5, 139.75,\r\n    140.0, 140.25, 140.5, 140.75, 141.0, 141.25, 141.5, 141.75, 142.0, 142.25,\r\n    142.5, 142.75, 143.0, 143.25, 143.5, 143.75, 144.0, 144.25, 144.5, 144.75,\r\n    145.0, 145.25, 145.5, 145.75, 146.0, 146.25, 146.5, 146.75, 147.0, 147.25,\r\n    147.5, 147.75, 148.0, 148.25, 148.5, 148.75, 149.0, 149.25, 149.5, 149.75,\r\n    150.0, 150.25, 150.5, 150.75, 151.0, 151.25, 151.5, 151.75, 152.0, 152.25,\r\n    152.5, 152.75, 153.0, 153.25, 153.5, 153.75, 154.0, 154.25, 154.5, 154.75,\r\n    155.0, 155.25, 155.5, 155.75, 156.0, 156.25, 156.5, 156.75, 157.0, 157.25,\r\n    157.5, 157.75, 158.0, 158.25, 158.5, 158.75, 159.0, 159.25, 159.5, 159.75,\r\n    160.0, 160.25, 160.5, 160.75, 161.0, 161.25, 161.5, 161.75, 162.0, 162.25,\r\n    162.5, 162.75, 163.0, 163.25, 163.5, 163.75, 164.0, 164.25, 164.5, 164.75,\r\n    165.0, 165.25, 165.5, 165.75, 166.0, 166.25, 166.5, 166.75, 167.0, 167.25,\r\n    167.5, 167.75, 168.0, 168.25, 168.5, 168.75, 169.0, 169.25, 169.5, 169.75,\r\n    170.0, 170.25, 170.5, 170.75, 171.0, 171.25, 171.5, 171.75, 172.0, 172.25,\r\n    172.5, 172.75, 173.0, 173.25, 173.5, 173.75, 174.0, 174.25, 174.5, 174.75,\r\n    175.0, 175.25, 175.5, 175.75, 176.0, 176.25, 176.5, 176.75, 177.0, 177.25,\r\n    177.5, 177.75, 178.0, 178.25, 178.5, 178.75, 179.0, 179.25, 179.5, 179.75,\r\n    180.0, 180.25, 180.5, 180.75, 181.0, 181.25, 181.5, 181.75, 182.0, 182.25,\r\n    182.5, 182.75, 183.0, 183.25, 183.5, 183.75, 184.0, 184.25, 184.5, 184.75,\r\n    185.0, 185.25, 185.5, 185.75, 186.0, 186.25, 186.5, 186.75, 187.0, 187.25,\r\n    187.5, 187.75, 188.0, 188.25, 188.5, 188.75, 189.0, 189.25, 189.5, 189.75,\r\n    190.0, 190.25, 190.5, 190.75, 191.0, 191.25, 191.5, 191.75, 192.0, 192.25,\r\n    192.5, 192.75, 193.0, 193.25, 193.5, 193.75, 194.0, 194.25, 194.5, 194.75,\r\n    195.0, 195.25, 195.5, 195.75, 196.0, 196.25, 196.5, 196.75, 197.0, 197.25,\r\n    197.5, 197.75, 198.0, 198.25, 198.5, 198.75, 199.0, 199.25, 199.5, 199.75,\r\n    200.0 },\r\n\r\n  /* Variable: y\r\n   * Referenced by: '<S5>/FWS Controller'\r\n   */\r\n  { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.0, 0.00061304553327112821, 0.0024517621504112075, 0.0055148896868995045,\r\n    0.0098003288281343082, 0.015305142548196926, 0.022025558122744426,\r\n    0.029956969714644011, 0.039093941530586873, 0.049430211546505953,\r\n    0.060958695799256279, 0.073671493241610708, 0.087559891157239722,\r\n    0.10261437113197558, 0.1188246155772541, 0.13617951480127855,\r\n    0.15466717462304458, 0.17427492452401738, 0.19498932633187582,\r\n    0.21679618343036045, 0.23968055048892567, 0.26362674370552597,\r\n    0.28861835155550897, 0.3146382460392485, 0.34166859442083086,\r\n    0.36969087144971469, 0.398685872057011, 0.42863372451768056,\r\n    0.45951390406962433, 0.49130524698032496, 0.52398596505141182,\r\n    0.55753366055121067, 0.591925341565025, 0.62713743775264019,\r\n    0.66314581650226989, 0.6999257994698358, 0.73745217949226927,\r\n    0.77569923786324479, 0.81464076195950075, 0.85425006320565378,\r\n    0.894499995365219, 0.93536297314528938, 0.976810991102108,\r\n    1.0188156428346056, 1.061348140452731, 1.1043793343072306,\r\n    1.1478797329673585, 1.1918195234328328, 1.2361685915661824,\r\n    1.2808965427314614, 1.3259727226252214, 1.3713662382854415,\r\n    1.4170459792640149, 1.4629806389482987, 1.5091387360171065,\r\n    1.5554886360164291, 1.6019985730401076, 1.6486366715006002,\r\n    1.6953709679749234, 1.7421694331107753, 1.7889999935778591,\r\n    1.835830554049346, 1.8826290191983992, 1.9293633156947128,\r\n    1.9760014141859732, 2.0225113512491739, 2.0688612512967461,\r\n    2.1150193484224982, 2.1609540081723835, 2.2066337492251669,\r\n    2.2520272649681554, 2.2971034449531893, 2.3418313962181814,\r\n    2.3861804644596143, 2.4301202550414716, 2.4736206538262007,\r\n    2.5166518478134341, 2.5591843455723349, 2.6011889974535549,\r\n    2.6426370155669376, 2.6834999935113069, 2.7237499258427968,\r\n    2.7633592272683796, 2.8023007515514462, 2.8405478101164885,\r\n    2.8780741903401106, 2.9148541735158484, 2.9508625524804915,\r\n    2.9860746488898147, 3.0204663301318764, 3.0540140258663095,\r\n    3.0866947441782564, 3.1184860873358744, 3.1493662671406257,\r\n    3.1793141198598218, 3.2083091207311822, 3.2363313980294897,\r\n    3.2633617466856704, 3.2893816414489949, 3.3143732495833556,\r\n    3.3383194430889338, 3.3612038104408786, 3.3830106678369423,\r\n    3.4037250699463768, 3.4233328201527158, 3.4418204802834271,\r\n    3.4591753798197669, 3.4753856245805155, 3.4904401048736586,\r\n    3.5043285031104165, 3.5170413008763988, 3.5285697854550566,\r\n    3.5389060557989369, 3.5480430279446713, 3.5559744398679674,\r\n    3.5626948557752876, 3.5681996698292728, 3.5724851093053496,\r\n    3.575548237177371, 3.577386954130505, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578,\r\n    3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.578, 3.5746237326686008,\r\n    3.5704065219289629, 3.5645082546081084, 3.5569347515837735,\r\n    3.5476934869890773, 3.536793580836457, 3.524245790017317, 3.5100624976862731,\r\n    3.4942577010404761, 3.4768469975060707, 3.4578475693454123,\r\n    3.4372781667002532, 3.4151590890876169, 3.3915121653666227,\r\n    3.3663607321960405, 3.3397296110038215, 3.3116450834913507,\r\n    3.2821348656965781, 3.2512280806416327, 3.2189552295919248,\r\n    3.1853481619550679, 3.1504400438493669, 3.1142653253728594, 3.07685970660523,\r\n    3.0382601023761429, 2.9985046058347575, 2.9576324508563951,\r\n    2.915683973323433, 2.8727005713186715, 2.8287246642704083,\r\n    2.7837996510895944, 2.7379698673403463, 2.6912805414860954,\r\n    2.6437777502545585, 2.5955083731655662, 2.54652004626664, 2.4968611151219604,\r\n    2.4465805871011437, 2.3957280830148671, 2.3443537881451317,\r\n    2.2925084027184455, 2.2402430918708189, 2.1876094351539566,\r\n    2.1346593756324626, 2.0814451686223108, 2.0280193301211513,\r\n    1.9744345849813751, 1.9207438148770304, 1.8670000061160081,\r\n    1.8132561973489503, 1.7595654272265042, 1.705980682056579,\r\n    1.6525548435132558, 1.5993406364489606, 1.5463905768613975,\r\n    1.493756920066611, 1.4414916091292802, 1.3896462236011966,\r\n    1.3382719286184721, 1.2874194244077255, 1.237138896251081,\r\n    1.1874799649593526, 1.138491637902296, 1.0902222606442453,\r\n    1.0427194692328996, 0.99603014318826222, 0.95020035923823642,\r\n    0.90527534584645275, 0.86129943857723579, 0.818316036341754,\r\n    0.77636755856853579, 0.73549540334061347, 0.69573990654061368,\r\n    0.65714030204411167, 0.61973468300053247, 0.58355996423981116,\r\n    0.54865184584191307, 0.5150447779051649, 0.48277192654816681,\r\n    0.45186514117883714, 0.42235492306289324, 0.39427039522278318,\r\n    0.36763927369678029, 0.34248784018659795, 0.318840916120524,\r\n    0.29672183815766784, 0.276152435157495, 0.2571530066373785,\r\n    0.23974230273942573, 0.22393750572635249, 0.20975421302466354,\r\n    0.19720642183187484, 0.18630651530297446, 0.17706525032973572,\r\n    0.16949174692497002, 0.16359347922217213, 0.15937626809945402,\r\n    0.15684427543504106, 0.156, 0.15684427499225437, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156,\r\n    0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156, 0.156 },\r\n\r\n  /* Variable: zu1_0\r\n   * Referenced by: '<S4>/Integrator7'\r\n   */\r\n  -0.025542532638346844,\r\n\r\n  /* Variable: zu2_0\r\n   * Referenced by: '<S4>/Integrator9'\r\n   */\r\n  -0.025542532638346844,\r\n\r\n  /* Variable: zu3_0\r\n   * Referenced by: '<S4>/Integrator11'\r\n   */\r\n  -0.01841190811165316,\r\n\r\n  /* Variable: zu4_0\r\n   * Referenced by: '<S4>/Integrator13'\r\n   */\r\n  -0.01841190811165316,\r\n\r\n  /* Start of '<Root>/VandD' */\r\n  {\r\n    /* Mask Parameter: PIDController1_D\r\n     * Referenced by: '<S90>/Derivative Gain'\r\n     */\r\n    9.58388407210146,\r\n\r\n    /* Mask Parameter: PIDController1_I\r\n     * Referenced by: '<S93>/Integral Gain'\r\n     */\r\n    316.552153422139,\r\n\r\n    /* Mask Parameter: PIDController_InitialConditionForFilter\r\n     * Referenced by: '<S43>/Filter'\r\n     */\r\n    0.0,\r\n\r\n    /* Mask Parameter: PIDController1_InitialConditionForFilter\r\n     * Referenced by: '<S91>/Filter'\r\n     */\r\n    0.0,\r\n\r\n    /* Mask Parameter: PIDController_InitialConditionForIntegrator\r\n     * Referenced by: '<S48>/Integrator'\r\n     */\r\n    0.0,\r\n\r\n    /* Mask Parameter: PIDController1_InitialConditionForIntegrator\r\n     * Referenced by: '<S96>/Integrator'\r\n     */\r\n    0.0,\r\n\r\n    /* Mask Parameter: PIDController1_N\r\n     * Referenced by: '<S99>/Filter Coefficient'\r\n     */\r\n    238.770606857548,\r\n\r\n    /* Mask Parameter: PIDController1_P\r\n     * Referenced by: '<S101>/Proportional Gain'\r\n     */\r\n    830.015869772746,\r\n\r\n    /* Computed Parameter: Out1_Y0\r\n     * Referenced by: '<S10>/Out1'\r\n     */\r\n    0.0,\r\n\r\n    /* Computed Parameter: Out1_Y0_j\r\n     * Referenced by: '<S11>/Out1'\r\n     */\r\n    0.0,\r\n\r\n    /* Computed Parameter: Out1_Y0_c\r\n     * Referenced by: '<S12>/Out1'\r\n     */\r\n    0.0,\r\n\r\n    /* Computed Parameter: Out1_Y0_b\r\n     * Referenced by: '<S13>/Out1'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator20'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator21'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator22'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: [hzpc,hzpc,hzpc,hzpc]\r\n     * Referenced by: '<S4>/[hzpc,hzpc,hzpc,hzpc]'\r\n     */\r\n    { 0.05, 0.05, 0.05, 0.05 },\r\n\r\n    /* Expression: [+l1, +l1, -l2, -l2]\r\n     * Referenced by: '<S4>/[l1,l1,-l2,-l2]'\r\n     */\r\n    { 1.12695753, 1.12695753, -1.59304247, -1.59304247 },\r\n\r\n    /* Expression: [hzrc,hzrc,hzrc,hzrc]\r\n     * Referenced by: '<S4>/hzrc'\r\n     */\r\n    { 0.05, 0.05, 0.05, 0.05 },\r\n\r\n    /* Expression: [b1, -b2, b3, -b4]\r\n     * Referenced by: '<S4>/b1, -b2, b3, -b4'\r\n     */\r\n    { 0.776, -0.776, 0.78, -0.78 },\r\n\r\n    /* Expression: [+b1, -b2, +b3, -b4]\r\n     * Referenced by: '<S4>/[b1, -b2, b3, -b4]'\r\n     */\r\n    { 0.776, -0.776, 0.78, -0.78 },\r\n\r\n    /* Expression: [l1, l1, -l2, -l2]\r\n     * Referenced by: '<S4>/[l1, l1, -l2, -l2]'\r\n     */\r\n    { 1.12695753, 1.12695753, -1.59304247, -1.59304247 },\r\n\r\n    /* Expression: [-b1, +b2, -b3, +b4]\r\n     * Referenced by: '<S4>/[-b1, b2, -b3, b4]'\r\n     */\r\n    { -0.776, 0.776, -0.78, 0.78 },\r\n\r\n    /* Expression: -0.058\r\n     * Referenced by: '<S4>/Integrator15'\r\n     */\r\n    -0.058,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator14'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator10'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator12'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator3'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator8'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 10\r\n     * Referenced by: '<S6>/Constant'\r\n     */\r\n    10.0,\r\n\r\n    /* Expression: 10\r\n     * Referenced by: '<S6>/Constant1'\r\n     */\r\n    10.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator19'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator17'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator16'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S4>/Integrator18'\r\n     */\r\n    0.0,\r\n\r\n    /* Computed Parameter: TransferFcn_A\r\n     * Referenced by: '<S3>/Transfer Fcn'\r\n     */\r\n    -30.0,\r\n\r\n    /* Computed Parameter: TransferFcn_C\r\n     * Referenced by: '<S3>/Transfer Fcn'\r\n     */\r\n    30.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S113>/Memory'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: 0\r\n     * Referenced by: '<S113>/Memory1'\r\n     */\r\n    0.0,\r\n\r\n    /* Expression: pi/180\r\n     * Referenced by: '<S113>/Gain'\r\n     */\r\n    0.017453292519943295,\r\n\r\n    /* Expression: 1\r\n     * Referenced by: '<S3>/Gain'\r\n     */\r\n    1.0,\r\n\r\n    /* Expression: 1\r\n     * Referenced by: '<S8>/Constant'\r\n     */\r\n    1.0,\r\n\r\n    /* Expression: 1\r\n     * Referenced by: '<S8>/Constant1'\r\n     */\r\n    1.0,\r\n\r\n    /* Expression: 1\r\n     * Referenced by: '<S9>/Constant'\r\n     */\r\n    1.0,\r\n\r\n    /* Expression: 1\r\n     * Referenced by: '<S9>/Constant1'\r\n     */\r\n    1.0,\r\n\r\n    /* Computed Parameter: ManualSwitch_CurrentSetting\r\n     * Referenced by: '<S6>/Manual Switch'\r\n     */\r\n    1U\r\n  }\r\n  /* End of '<Root>/VandD' */\r\n};\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: MATLAB Host\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Interface files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'VandD'.\r\n *\r\n * Model version                  : 1.67\r\n * Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n * C/C++ source code generated on : Wed Jan 17 19:11:48 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Emulation hardware selection:\r\n *    Differs from embedded hardware (MATLAB Host)\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"VandD.h\"\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"MW_custom_RTOS_header.h","type":"header","group":"other","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _MW_CUSTOM_RTOS_HEADER_H_\r\n#define _MW_CUSTOM_RTOS_HEADER_H_\r\n#define MW_BASERATE_PRIORITY           40\r\n#define MW_BASERATE_PERIOD             0.01\r\n#define MW_NUMBER_SUBRATES             0\r\n#define MW_NUMBER_APERIODIC_TASKS      0\r\n#define MW_IS_CONCURRENT               0\r\n#define MW_NUMBER_TIMER_DRIVEN_TASKS   0\r\n\r\nextern void exitFcn(int sig);\r\nextern void *terminateTask(void *arg);\r\nextern void *baseRateTask(void *arg);\r\nextern void *subrateTask(void *arg);\r\nextern pthread_t schedulerThread;\r\nextern pthread_t baseRateThread;\r\nextern pthread_t subRateThread[];\r\nextern sem_t stopSem;\r\nextern sem_t baserateTaskSem;\r\nextern sem_t subrateTaskSem[];\r\nextern int taskId[];\r\nextern int subratePriority[];\r\n\r\n#endif\r\n\r\n#define MW_MAX_TASKNAME                16\r\n"},{"name":"MW_target_hardware_resources.h","type":"header","group":"other","path":"C:\\Users\\16134\\Desktop\\masters\\Model\\VandD_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef PORTABLE_WORDSIZES\n#ifdef __MW_TARGET_USE_HARDWARE_RESOURCES_H__\n#ifndef __MW_TARGET_HARDWARE_RESOURCES_H__\n#define __MW_TARGET_HARDWARE_RESOURCES_H__\n\n#define MW_MULTI_TASKING_MODE 1\n\n#define MW_USECODERTARGET 1\n#define MW_TARGETHARDWARE BeagleBone Black\n#define MW_CONNECTIONINFO_TCPIP_IPADDRESS codertarget.beaglebone.internal.getBoardParam('Hostname')\n#define MW_CONNECTIONINFO_TCPIP_PORT 17725\n#define MW_CONNECTIONINFO_TCPIP_VERBOSE 0\n#define MW_CONNECTIONINFO_TCPIP_RUNINBACKGROUND 1\n#define MW_EXTMODE_CONFIGURATION TCP/IP\n#define MW_RTOS Linux\n#define MW_RTOSBASERATETASKPRIORITY 40\n#define MW_SCHEDULER_INTERRUPT_SOURCE 0\n#define MW_BOARDPARAMETERS_DEVICEADDRESS 192.168.7.2\n#define MW_BOARDPARAMETERS_USERNAME debian\n#define MW_BOARDPARAMETERS_PASSWORD temppwd\n#define MW_RUNTIME_BUILDACTION 0\n#define MW_CLOCKING_CPUCLOCKRATEMHZ 1000\n#define MW_DATAVERSION 2016.02\n\n#endif /* __MW_TARGET_HARDWARE_RESOURCES_H__ */\n\n#endif\n\n#endif\n"},{"name":"linuxinitialize.c","type":"source","group":"legacy","path":"C:\\Program Files\\MATLAB\\R2022a\\toolbox\\target\\codertarget\\rtos\\src","tag":"","groupDisplay":"Other files","code":"/* Copyright 2013-2020 The MathWorks, Inc. */\n\n\n/* ---------------------------- */\n/* RTOS-specific headers        */\n/* Note: must be included first */\n/* ---------------------------- */\n#include \"linuxinitialize.h\"\n#include \"rtwtypes.h\"\n/* ---------------------------- */\n/* Required Coder Target header */\n/* ---------------------------- */\n#include \"MW_custom_RTOS_header.h\"\n\n#if defined(MW_SOC_ENABLED) && defined(MW_KERNEL_PROFILING_ON)   \n#include \"kernelprofiler-tp.h\"\n#endif\n\n#if (MW_NUM_APERIODIC_PROXY_TASKS > 0)\n#include \"mw_cpuloadgenerator.h\"\n#endif\n\n#define NAMELEN 16\n\ntypedef struct {\n    void* (*pAsyncTasks)(void* arg);\n    char taskName[NAMELEN];\n    int priority;\n    int policy;\n    int coreSelection;\n    int coreNum;\n} MW_AsyncTaskCodeGenInfo_Type;\n\n#if (defined(MW_TSKMGR_EVENT_DRIVEN_TASKS) && (MW_TSKMGR_EVENT_DRIVEN_TASKS > 0))\nstatic MW_AsyncTaskCodeGenInfo_Type asyncTaskCodeGenInfo[MW_TSKMGR_EVENT_DRIVEN_TASKS];\n\nvoid mw_setAsyncTaskCodeGenInfo(void * (*taskHandler)(void *), \n        const char* taskName, int priority, int policy, \n        int coreSelection, int coreNum, int idx)\n{\n    asyncTaskCodeGenInfo[idx].pAsyncTasks = taskHandler;\n    snprintf(asyncTaskCodeGenInfo[idx].taskName, NAMELEN, \"%s\", taskName);\n    asyncTaskCodeGenInfo[idx].priority = priority;\n    asyncTaskCodeGenInfo[idx].policy = policy;\n    asyncTaskCodeGenInfo[idx].coreSelection = coreSelection;\n    asyncTaskCodeGenInfo[idx].coreNum = coreNum;\n}\n#endif\nextern volatile boolean_T runModel;\n/* ---------------------------- */\n/* RTOS-specific declarations   */\n/* ---------------------------- */\ntypedef struct {\n    double period;\n} baseRateInfo_t;\n\npthread_t baseTimerThread;\n#if (MW_NUM_APERIODIC_PROXY_TASKS > 0)   \npthread_t proxyTaskEventSrcThread;\n#endif\n\npthread_attr_t attr;\nbaseRateInfo_t info;\nstruct sched_param sp;\n\n/* MW_NUM_SUBRATES is set to 0 if we are in single-tasking mode or number of subrates are 0 */\n#define MW_SP_SCHED_FIFO ((MW_NUMBER_SUBRATES > 0) || !defined(MW_SCHED_OTHER))\n#ifdef MW_RTOS_DEBUG\n    #define MW_DEBUG_LOG(str)  printf(str); fflush(stdout)\n#else\n    #define MW_DEBUG_LOG(str)\n#endif\n\n#ifdef MW_HAS_COMM_SERVICE\n    extern int makeCSTaskIdle();\n#endif\n\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\n    sem_t timerTaskSem[MW_NUMBER_TIMER_DRIVEN_TASKS];\n    int timer_fd[MW_NUMBER_TIMER_DRIVEN_TASKS];\n    double timer_period[MW_NUMBER_TIMER_DRIVEN_TASKS];\n#endif\n    \nint mw_CreateArmedTimer(double period)\n{\n    int status;\n    int fd;\n    struct itimerspec its;\n\n    /* Create the timer */\n    fd = timerfd_create(CLOCK_MONOTONIC, 0);\n    if (fd == -1) {\n        fprintf(stderr, \"Call to timerfd_create failed.\\n\"); \n        perror(\"timerfd_create\");\n        fflush(stderr); \n        exit(EXIT_FAILURE);\n    }\n\n    /* Make the timer periodic */\n    its.it_value.tv_sec = (time_t)period;\n    its.it_value.tv_nsec = (period - (time_t)period) * 1000000000;\n    its.it_interval.tv_sec = its.it_value.tv_sec;\n    its.it_interval.tv_nsec = its.it_value.tv_nsec;\n    status = timerfd_settime(fd, 0, &its, NULL);\n    CHECK_STATUS(status, 0, \"timer_settime\");\n    \n    return fd;\n}\n\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\nvoid mw_init_timerTaskSem(int idx)\n{\n    int status;\n    status = sem_init(&timerTaskSem[idx], 0, 0);\n    CHECK_STATUS(status, 0, \"sem_init:mw_init_timerTaskSem\");\n}\n\nint mw_CreateUnarmedTimer(double period, int idx)\n{\n    int fd;\n    int status;\n\n    /* Create the timer */\n    fd = timerfd_create(CLOCK_MONOTONIC, 0);\n    timer_fd[idx] = fd;\n    timer_period[idx] = period;\n    if (fd == -1) {\n        fprintf(stderr, \"Call to timerfd_create failed.\\n\"); \n        perror(\"timerfd_create\");\n        fflush(stderr); \n        exit(EXIT_FAILURE);\n    }     \n    /* Signal that the timer has been created. */\n    status = sem_post(&timerTaskSem[idx]); \n    CHECK_STATUS(status, 0, \"sem_post:mw_CreateUnarmedTimer\");     \n    #ifdef MW_RTOS_DEBUG\n        printf(\"Created unarmed timer # %d %d.\\n\", fd, idx);\n        fflush(stdout);\n    #endif    \n    return fd;\n}\n#endif\n\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\nvoid mw_ArmTimer(int idx)\n{\n    int status;\n    struct itimerspec its;\n    int fd = timer_fd[idx];\n    double period = timer_period[idx];\n    \n    its.it_interval.tv_sec = (time_t)period;\n    its.it_interval.tv_nsec = (period - (time_t)period) * 1000000000;\n    its.it_value.tv_sec = 0;\n    its.it_value.tv_nsec = 1.0;\n    #ifdef MW_RTOS_DEBUG\n        printf(\"About to arm timer # %d %d.\\n\", fd, idx);\n        fflush(stdout);\n    #endif\n    status = timerfd_settime(fd, 0, &its, NULL);\n    #ifdef MW_RTOS_DEBUG\n        printf(\"Armed timer # %d %d.\\n\", fd, idx);\n        fflush(stdout);\n    #endif\n    \n    CHECK_STATUS(status, 0, \"timer_settime\"); \n}\n#endif\n\nvoid mw_WaitForTimerEvent(int fd)\n{\n    unsigned long long missed;\n    int status;\n    \n    /* Wait for the next timer event. If we have missed any the\n       number is written to \"missed\" */\n    while ((status = read(fd, &missed, sizeof(missed)) == -1) && (errno == EINTR)) {\n        /* Restart if interrupted by a signal */\n        continue;\n    }\n    if (status == -1) {\n        perror(\"read(timerfd)\");\n    }\n}\n\nvoid mw_WaitForTimerEventCatchup(int fd)\n{\n    unsigned long long missed = 0;\n    int status = 0;\n    static unsigned int outstanding = 0;\n    \n    /* Wait for the next timer event. If we have missed any the\n     * number is written to \"missed\" */\n    if (outstanding == 0)\n    {\n        while ((status = read(fd, &missed, sizeof(missed)) == -1) && (errno == EINTR)) {\n            /* Restart if interrupted by a signal */\n            continue;\n        }\n        if (status == -1) {\n            perror(\"read(timerfd)\");\n        }\n        if (missed > 1) {\n            #ifdef MW_RTOS_DEBUG\n            printf(\"Missed %llu events for the timer # %d.\\n\", missed, fd);\n            fflush(stdout);\n            #endif\n            outstanding = outstanding + missed - 1;\n        }\n    }\n    else\n    {\n        #ifdef MW_RTOS_DEBUG\n        printf(\"Catching up with the missed events for timer # %d.\\n\", fd);\n        fflush(stdout);\n        #endif\n        outstanding--;\n    }\n}\n\n/* ---------------------------- */\n/* Internally visible functions */\n/* ---------------------------- */\n\n\n#ifdef MW_SOC_ENABLED\nvoid *baseTimerTask(void* arg)\n{\n    /* SOCB product installed and used */\n    int fd;\n    baseRateInfo_t info = *((baseRateInfo_t *)arg);\n\n    MW_DEBUG_LOG(\"baseTimerTask entered\\n\");\n    fd = mw_CreateArmedTimer(info.period);  \n    SOCB_RateCounterFcn();   \n    while(1) {\n        mw_WaitForTimerEvent(fd);\n        SOCB_RateCounterFcn();\n    }\n}\n#if (MW_NUM_APERIODIC_PROXY_TASKS > 0)\nvoid *proxyTaskEventSrcTask(void *unused)\n{\n    int fd;\n    int status;\n    double oldTime;\n    struct itimerspec its; \n    static int cnt = 0;\n    extern SOC_eventSourceDataType SOC_eventSourceData[];\n    SOC_eventSourceDataType *pOldEvent = NULL;\n    SOC_eventSourceDataType *pNewEvent = NULL;\n    pNewEvent = (SOC_eventSourceDataType*) &SOC_eventSourceData[cnt];\n    double period = pNewEvent->time + 1e-9; // cannot be zero\n    fprintf(stderr, \"First timer value %g\\n\", period); \n    fflush(stderr);\n    \n    MW_DEBUG_LOG(\"proxyTaskSrcTask entered\\n\");\n    fd = mw_CreateArmedTimer(period);  \n    while(1) {\n        MW_DEBUG_LOG(\"waiting for proxyTaskSrcTask timer event\\n\");\n        mw_WaitForTimerEvent(fd);\n        MW_DEBUG_LOG(\"got proxyTaskSrcTask timer event\\n\");\n        sem_post(&SOCB_ProxyTaskSem[(int) pNewEvent->semIdx]);\n        /* Update the timer period for the next event */\n        if (++cnt < SOC_MAXEVENTSRCCOUNTER) {\n            pOldEvent = (SOC_eventSourceDataType*) &SOC_eventSourceData[cnt-1];\n            pNewEvent = (SOC_eventSourceDataType*) &SOC_eventSourceData[cnt];\n            period = pNewEvent->time - pOldEvent->time;// what if zero??? \n            fprintf(stderr, \"Next timer value %g\\n\", period);\n            fflush(stderr);\n        } else {\n            period = 0.0;   \n        }\n        its.it_value.tv_sec = (time_t)period;\n        its.it_value.tv_nsec = (period - (time_t)period) * 1000000000;\n        its.it_interval.tv_sec = its.it_value.tv_sec;\n        its.it_interval.tv_nsec = its.it_value.tv_nsec;\n        status = timerfd_settime(fd, 0, &its, NULL);\n        CHECK_STATUS(status, 0, \"timer_settime\");   \n    }\n}\n#endif\n#else \nvoid *schedulerTask(void* arg)\n{\n    /* SOCB product not installed or not used */\n    int fd;\n    baseRateInfo_t info = *((baseRateInfo_t *)arg);\n\n    MW_DEBUG_LOG(\"schedulerTask entered\\n\");\n    fd = mw_CreateArmedTimer(info.period);\n    sem_post(&baserateTaskSem); \n    while(runModel) {\n        mw_WaitForTimerEvent(fd);\n        #ifdef DETECT_OVERRUNS        \n            testForRateOverrun(0);\n        #endif\n        sem_post(&baserateTaskSem);\n    }\n}\n\n#ifdef MW_SCHEDULE_TASK_WITH_ALSA_AUDIO\nvoid *schedulerTaskALSA(void* arg)\n{\n    /*Register the ALSA Audio capture block with base rate */\n    mw_alsa_registerCallback();\n}\n\nvoid triggerBaseRate(void){\n    /*Post the semaphore after period event from ALSA block*/\n    sem_post(&baserateTaskSem);\n}\n#endif\n#endif\n\n\n/* Should use this fcn, but currently are not using it */\n/* Why: it is safe ??? from interruption */\nvoid my_sem_wait(sem_t *sem)\n{\n    int status;\n    while (((status = sem_wait(sem)) == -1) && (errno == EINTR)) {\n        /* Restart if interrupted by a signal */\n        continue;\n    }\n    CHECK_STATUS(status, 0, \"my_sem_wait\");\n}\n\nstatic void setThreadPriority(const int priority, pthread_attr_t *attr, struct sched_param *sp)\n{\n#if MW_SP_SCHED_FIFO\n    int status;\n    \n    sp->sched_priority = priority;\n    status = pthread_attr_setschedparam(attr, sp);\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedparam\");\n#endif\n}\n\n/* ---------------------------- */\n/* Externally visible functions */\n/* ---------------------------- */\n\nvoid mw_CreateTask(void * (*taskHandler)(void *), const char* taskName, int priority, int policy, int coreSelection, int coreNum)\n{\n    int status;\n    int inherit;\n    pthread_attr_t attr;\n    pthread_t thread;\n    struct sched_param param;\n    size_t stackSize;\n    pthread_attr_init(&attr);\n    cpu_set_t cpuset;\n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    char thisTaskName[MW_MAX_TASKNAME];\n#endif\n\n    /* Set thread inherit attribute */\n    inherit = PTHREAD_EXPLICIT_SCHED;\n    status = pthread_attr_setinheritsched(&attr, inherit);\n    CHECK_STATUS(status, 0, \"pthread_attr_setinheritsched\");\n\n    /* Set thread detach attribute */\n    status = pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);\n    CHECK_STATUS(status, 0, \"pthread_attr_setdetachstate\");\n\n    /* Set thread stack size attribute */\n    stackSize = (512 > PTHREAD_STACK_MIN) ? 512:PTHREAD_STACK_MIN;\n    status = pthread_attr_setstacksize(&attr, stackSize);\n    CHECK_STATUS(status, 0, \"pthread_attr_setstacksize\");\n\n    /* Set thread schedule policy attribute */\n    policy = SCHED_FIFO;\n    status = pthread_attr_setschedpolicy(&attr, policy);\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedpolicy\");\n\n    /* Set thread priority attribute */\n    param.sched_priority = priority;\n    status = pthread_attr_setschedparam(&attr, &param);\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedparam\");\n    \n    /* Set the thread core affinity */\n    if (2 == coreSelection) \n    {\n        CPU_ZERO(&cpuset);\n        CPU_SET(coreNum, &cpuset);\n        status =  pthread_attr_setaffinity_np(&attr, sizeof(cpu_set_t), &cpuset);\n        CHECK_STATUS(status, 0, \"pthread_attr_setaffinity_np\");\n    }\n\n    /* Create the thread */\n    status = pthread_create(&thread, &attr, taskHandler, NULL);\n    CHECK_STATUS(status, 0, \"pthread_create\");\n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    /* Set name of the thread */\n    snprintf(thisTaskName, MW_MAX_TASKNAME, \"%s\", taskName);\n    status = pthread_setname_np(thread, thisTaskName);\n    CHECK_STATUS(status, 0, \"pthread_setname_np at mw_CreateTask\");\n#endif\n    pthread_attr_destroy(&attr);\n}\n\nvoid myAddBlockForThisEvent(int sigNo)\n{\n    int status;\n    sigset_t sigMask;\n\n    sigemptyset(&sigMask);\n    sigaddset(&sigMask, sigNo);\n    status = pthread_sigmask(SIG_BLOCK, &sigMask, NULL);\n    CHECK_STATUS(status, 0, \"pthread_sigmask\");\n}\n\nvoid myAddHandlerForThisEvent(int sigNo, int sigToBlock[], int numSigToBlock, void (*sigHandler)(int))\n{\n    int idx;\n    int status;\n    struct sigaction sa;\n\n    sa.sa_handler = (__sighandler_t) sigHandler;\n    sigemptyset(&sa.sa_mask);\n    for (idx=0; idx<numSigToBlock; idx++) {\n            sigaddset(&sa.sa_mask, sigToBlock[idx]);\n    }\n    sa.sa_flags = SA_RESTART; /* Restart functions if interrupted by handler */\n    status = sigaction(sigNo, &sa, NULL);\n    CHECK_STATUS_NOT(status, -1, \"sigaction to register a signal handler\");\n}\n\nvoid myRestoreDefaultHandlerForThisEvent(int sigNo)\n{\n    int status;\n    struct sigaction sa;\n    sa.sa_handler = SIG_DFL;\n    sigemptyset(&sa.sa_mask);\n    sa.sa_flags = SA_RESTART; /* Restart functions if interrupted by handler */\n    status = sigaction(sigNo, &sa, NULL);\n    CHECK_STATUS_NOT(status, -1, \"sigaction to restore default signal handler\");\n}\n\n/* ***********************************************************************/\n/* ***********************************************************************/\n/* ***********************************************************************/\n\nvoid myRTOSInit(double baseRatePeriod, int numSubrates)\n{\n    int i;\n    int status;\n    uid_t euid;\n    size_t stackSize;\n    unsigned long cpuMask = 0x1;\n    unsigned int len = sizeof(cpuMask);  \n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    char thisTaskName[MW_MAX_TASKNAME];\n#endif\n\n#if (defined(MW_TSKMGR_EVENT_DRIVEN_TASKS) && (MW_TSKMGR_EVENT_DRIVEN_TASKS > 0))\n    {\n        int idx;\n        for (idx=0;idx < MW_TSKMGR_EVENT_DRIVEN_TASKS;idx++)\n        {\n            mw_CreateTask(asyncTaskCodeGenInfo[idx].pAsyncTasks, \\\n                    (const char*) asyncTaskCodeGenInfo[idx].taskName,\\\n                    asyncTaskCodeGenInfo[idx].priority, \\\n                    asyncTaskCodeGenInfo[idx].policy, \\\n                    asyncTaskCodeGenInfo[idx].coreSelection, \\\n                    asyncTaskCodeGenInfo[idx].coreNum);\n#if defined(MW_SOC_ENABLED)\n    /* pause the main thread for 50us, so that main thread goes to waiting state and event driven tasks initialize properly. */\n    /* event driven tasks take ~30-40 us for the initialization.*/\n    /* for more information refer geck 2045382. */        \n\t\t\tusleep(50);\n#endif\n        }\n    }\n#endif\n    UNUSED(baseRatePeriod);\n    UNUSED(numSubrates);\n        \n    if (!MW_IS_CONCURRENT) {\n        /* All threads created by this process will run on a single CPU */\n        status = sched_setaffinity(0, len, (cpu_set_t *) &cpuMask);\n        CHECK_STATUS(status, 0, \"sched_setaffinity\");\n    }\n\n#if MW_SP_SCHED_FIFO && !defined (_POSIX_THREAD_PRIORITY_SCHEDULING)\n    fprintf(stderr, \"Priority scheduling is NOT supported by your system.\\n\");\n    fprintf(stderr, \"The generated code will not run correctly because your\\n\");\n    fprintf(stderr, \"model contains multiple rates and uses multi-tasking\\n\");\n    fprintf(stderr, \"code generation mode. You can only run the generated code\\n\");\n    fprintf(stderr, \"in single-tasking mode in your system. Open\\n\");\n    fprintf(stderr, \"Simulation -> Configuration Parameters -> Solver dialog\\n\");\n    fprintf(stderr, \"and set \\\"Tasking mode for periodic sample times\\\" parameter to SingleTasking.\\n\");\n    fprintf(stderr, \"Re-build the Simulink model with the new settings and try executing the generated code again.\\n\");\n    fflush(stderr);\n    exit(EXIT_FAILURE);\n#endif\n    \n#if MW_SP_SCHED_FIFO\n    /* Need root privileges for real-time scheduling */\n    euid = geteuid();\n    if (euid != 0) {\n        fprintf(stderr, \"You must have root privileges to run the generated code because\\n\");\n        fprintf(stderr, \"generated code requires SCHED_FIFO scheduling class to run correctly.\\n\");\n        fprintf(stderr, \"Try running the executable with the following command: sudo ./<executable name>\\n\");\n        fflush(stderr);\n        exit(EXIT_FAILURE);\n    }\n#endif\n\n    status = sem_init(&baserateTaskSem, 0, 0);\n    CHECK_STATUS(status, 0, \"sem_init:baserateTaskSemSem\");\n    status = sem_init(&stopSem, 0, 0);\n    CHECK_STATUS(status, 0, \"sem_init:stopSem\");\n    \n#if MW_SP_SCHED_FIFO\n    /* Set scheduling policy of the main thread to SCHED_FIFO */\n    sp.sched_priority = sched_get_priority_max(SCHED_FIFO);\n    status = sched_setscheduler(0, SCHED_FIFO, &sp);\n    CHECK_STATUS(status, 0, \"sched_setscheduler\");\n#endif\n\n    /* Create threads executing the Simulink model */\n    pthread_attr_init(&attr);\n    status = pthread_attr_setinheritsched(&attr, PTHREAD_EXPLICIT_SCHED);\n    CHECK_STATUS(status, 0, \"pthread_attr_setinheritsched\");\n#if MW_SP_SCHED_FIFO\n    status = pthread_attr_setschedpolicy(&attr, SCHED_FIFO);\n#else\n    status = pthread_attr_setschedpolicy(&attr, SCHED_OTHER);\n#endif\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedpolicy\");\n    status = pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_JOINABLE);\n    CHECK_STATUS(status, 0, \"pthread_attr_setdetachstate\");\n\n    /* Set thread stack size if necessary */\n    status = pthread_attr_getstacksize(&attr, &stackSize);\n    CHECK_STATUS(status, 0, \"pthread_attr_getstacksize\");\n    if (stackSize < STACK_SIZE) {\n        /* Make sure that stackSize is a multiple of 8 */\n        stackSize = (STACK_SIZE + 7) & (~0x7);\n        pthread_attr_setstacksize(&attr, stackSize);\n        CHECK_STATUS(status, 0, \"pthread_attr_setstacksize\");\n    }\n\n    signal(SIGTERM, exitFcn);     /* kill */\n    signal(SIGHUP, exitFcn);      /* kill -HUP */\n    signal(SIGINT, exitFcn);      /* Interrupt from keyboard */\n    signal(SIGQUIT, exitFcn);     /* Quit from keyboard */\n\n#ifdef MW_STANDALONE_EXECUTION_PROFILER_ON\n    status = pthread_mutex_init(&profilingDataStoreMutex, NULL);    \n#endif\n    \n#ifdef MW_HAS_MULTIPLE_RATES\n    MW_DEBUG_LOG(\"**creating subrate task threads**\\n\");   \n    for (i = 0; i < MW_NUMBER_SUBRATES; i++) {\n        taskId[i] = i;\n        status = sem_init(&subrateTaskSem[i], 0, 0);\n        CHECK_STATUS(status, 0, \"sem_init\");\n        setThreadPriority(subratePriority[i], &attr, &sp);\n        status = pthread_create(&subRateThread[i], &attr, &subrateTask, (void *)&taskId[i]);\n        CHECK_STATUS(status, 0, \"pthread_create\");\n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n        /* Set name of sub-rate threads */\n        snprintf(thisTaskName, MW_MAX_TASKNAME, \"%s\", _mwTskMgrTimerDrivenTaskNames[i+1]);\n        MW_DEBUG_LOG(thisTaskName);   \n        status = pthread_setname_np(subRateThread[i], thisTaskName);\n        CHECK_STATUS(status, 0, \"pthread_setname_np at subRateThread\");\n#endif        \n#if !defined(MW_SOC_ENABLED) && defined(DETECT_OVERRUNS)\n        status = pthread_mutex_init(&rateTaskFcnRunningMutex[i+1], NULL);\n        CHECK_STATUS(status, 0, \"pthread_mutex_init\");\n#endif        \n#ifdef COREAFFINITYREQUIRED\n        if (coreAffinity[i] >= 0) {\n             cpu_set_t cpuset;\n             CPU_ZERO(&cpuset);\n             CPU_SET(coreAffinity[i], &cpuset);\n             status = pthread_setaffinity_np(subRateThread[i], sizeof(cpu_set_t), &cpuset);\n             CHECK_STATUS(status, 0, \"pthread_setaffinity_np\");\n         }\n#endif\n    }\n#endif\n\n    MW_DEBUG_LOG(\"**creating the base rate task thread**\\n\");    \n    setThreadPriority(MW_BASERATE_PRIORITY, &attr, &sp);  \n    status = pthread_create(&baseRateThread, &attr, &baseRateTask, NULL);\n    CHECK_STATUS(status, 0, \"pthread_create\");\n    \n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    /* Set name of the base-rate thread */\n    snprintf(thisTaskName, MW_MAX_TASKNAME, _mwTskMgrTimerDrivenTaskNames[0]);\n    status = pthread_setname_np(baseRateThread, thisTaskName);\n    CHECK_STATUS(status, 0, \"pthread_setname_np at baserateThread\");\n#endif\n    \n#if !defined(MW_SOC_ENABLED) && defined(DETECT_OVERRUNS)\n    status = pthread_mutex_init(&rateTaskFcnRunningMutex[0], NULL);\n    CHECK_STATUS(status, 0, \"pthread_mutex_init\");\n#endif\n\n#ifdef COREAFFINITYREQUIRED\n    if (coreAffinityBaseRate >= 0) {\n        cpu_set_t cpuset;\n        CPU_ZERO(&cpuset);\n        CPU_SET(coreAffinityBaseRate, &cpuset);\n        status = pthread_setaffinity_np(baseRateThread, sizeof(cpu_set_t), &cpuset);\n        CHECK_STATUS(status, 0, \"pthread_setaffinity_np\");\n    }   \n#endif\n\n#ifdef MW_SOC_ENABLED    \n#if (MW_NUM_APERIODIC_PROXY_TASKS > 0)    \n    MW_DEBUG_LOG(\"**creating the socb proxy task event src thread **\\n\");  \n    /* Set the priority just below the highest possible */    \n    setThreadPriority(sched_get_priority_max(SCHED_FIFO)-1, &attr, &sp);\n    status = pthread_create(&proxyTaskEventSrcThread, &attr, &proxyTaskEventSrcTask, NULL);\n    CHECK_STATUS(status, 0, \"pthread_create\");\n    status = pthread_setname_np(proxyTaskEventSrcThread, \"proxyTaskEventSrcTask\"); \n#endif    \n    MW_DEBUG_LOG(\"**creating the socb base rate timer handler thread**\\n\");  \n    /* Set the priority the highest possible */  \n    setThreadPriority(sched_get_priority_max(SCHED_FIFO), &attr, &sp);\n    info.period = MW_BASERATE_PERIOD;\n    status = pthread_create(&baseTimerThread, &attr, &baseTimerTask, (void *) &info);\n    CHECK_STATUS(status, 0, \"pthread_create\");\n    status = pthread_setname_np(baseTimerThread, \"baseTimerTask\");\n#endif \n    \n    MW_DEBUG_LOG(\"**creating the scheduler thread**\\n\");  \n    #ifdef MW_SCHEDULE_TASK_WITH_ALSA_AUDIO\n        status = pthread_create(&schedulerThread, &attr, &schedulerTaskALSA, (void *) &info);\n    #else\n        /* Set the priority higher (higher number) than the base rate */    \n        setThreadPriority(MW_BASERATE_PRIORITY + 1, &attr, &sp);\n        info.period = MW_BASERATE_PERIOD;\n        status = pthread_create(&schedulerThread, &attr, &schedulerTask, (void *) &info);\n    #endif\n    CHECK_STATUS(status, 0, \"pthread_create\");\n       \n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    /* Set name of the scheduler thread */\n    snprintf(thisTaskName, MW_MAX_TASKNAME, \"scheduler\");\n    status = pthread_setname_np(schedulerThread, thisTaskName);\n    CHECK_STATUS(status, 0, \"pthread_setname_np at scheduler thread\");\n#endif\n\n#ifdef MW_HAS_APERIODIC_TASKS\n    MW_DEBUG_LOG(\"**creating asynchronously triggered task threads**\\n\"); \n    /* Set the priority higher (higher number) than the base rate */    \n    sp.sched_priority = MW_BASERATE_PRIORITY + 1;\n    for (i = 0; i < MW_NUMBER_APERIODIC_TASKS; i++) {\n        status = pthread_create(&asyncThread[i], &attr, (void *) pAsyncTasks[i], NULL);\n        CHECK_STATUS(status, 0, \"pthread_create\");\n    }\n#endif\n    \n#ifdef MW_NEEDS_BACKGROUND_TASK\n    MW_DEBUG_LOG(\"**creating the background thread**\\n\");\n    status = pthread_attr_setschedpolicy(&attr, SCHED_OTHER);\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedpolicy\");\n    setThreadPriority(0, &attr, &sp);\n    status = pthread_create(&backgroundThread, &attr, &backgroundTask, NULL);\n    CHECK_STATUS(status, 0, \"pthread_create\");\n#ifdef MW_TSKMGR_TIMER_DRIVEN_TASKS\n    /* Set name of the background thread */\n    snprintf(thisTaskName, MW_MAX_TASKNAME, \"background\");\n    status = pthread_setname_np(backgroundThread, thisTaskName);\n    CHECK_STATUS(status, 0, \"pthread_setname_np at backgroundThread\");\n#endif \n#if MW_SP_SCHED_FIFO == 0\n    status = pthread_setschedparam(backgroundThread, SCHED_IDLE, &sp);\n    CHECK_STATUS(status, 0, \"pthread_setschedparam\");\n#ifdef MW_HAS_COMM_SERVICE\n    status = makeCSTaskIdle();\n    CHECK_STATUS(status, 0, \"pthread_setschedparam\");\n#endif \n#endif\n#endif\n\n    pthread_attr_destroy(&attr);\n    fflush(stdout);\n}\n"}]};